Newsgroups: comp.sources.misc
From: allbery@uunet.UU.NET (Brandon S. Allbery - comp.sources.misc)
Subject: v08i040: GnuPlot v1.10A (part 6 of 7)
Reply-To: canoaf@ntvax.UUCP (Augustine Cano)

Posting-number: Volume 8, Issue 40
Submitted-by: canoaf@ntvax.UUCP (Augustine Cano)
Archive-name: gnuplot1.10A/part06

[OOPS!!!  I had to patch these after receiving them -- and managed to lose the
name of the person who submitted them in the process.  Duh.  The name shown
is a "best guess".  Submitter, please correct me.  ++bsa]

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then unpack
# it by saving it into a file and typing "sh file".  To overwrite existing
# files, type "sh file -c".  You can also feed this as standard input via
# unshar, or by typing "sh <file", e.g..  If this archive is complete, you
# will see the following message at the end:
#		"End of archive 6 (of 7)."
# Contents:  docs docs/Makefile docs/README docs/gnuplot.doc
#   docs/gnuplot.hlp
# Wrapped by allbery@uunet on Sat Sep  9 13:47:24 1989
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
if test ! -d 'docs' ; then
    echo shar: Creating directory \"'docs'\"
    mkdir 'docs'
fi
if test -f 'docs/Makefile' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'docs/Makefile'\"
else
echo shar: Extracting \"'docs/Makefile'\" \(618 characters\)
sed "s/^X//" >'docs/Makefile' <<'END_OF_FILE'
X# Makefile for GNUPLOT documentation
X#
X# troff a copy of gnuplot -ms if you've got a laser printer
X# otherwise, just print gnuplot.nroff on a line printer
X#
XHELPDIR = /usr/local/help/gnuplot
X
Xgnuplot.ms: hlp2ms gnuplot.hlp
X	./hlp2ms < gnuplot.hlp > gnuplot.ms
X
Xhelptree: helptree.c
X	cc -o helptree helptree.c
X
Xhlp2ms: hlp2ms.c
X	cc -o hlp2ms hlp2ms.c
X
Xclean:
X	rm -f gnuplot.ms gnuplot.hold hlp2ms helptree
X
X# Dependencies are hard (for me) so just rebuild everthing out of help tree
X# (This assumes help tree is more recent than gnuplot.hlp)
X
Xhlp:
X	- mv gnuplot.hlp gnuplot.hold
X	./helptree -f $(HELPDIR) > gnuplot.hlp
END_OF_FILE
if test 618 -ne `wc -c <'docs/Makefile'`; then
    echo shar: \"'docs/Makefile'\" unpacked with wrong size!
fi
# end of 'docs/Makefile'
fi
if test -f 'docs/README' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'docs/README'\"
else
echo shar: Extracting \"'docs/README'\" \(1796 characters\)
sed "s/^X//" >'docs/README' <<'END_OF_FILE'
X---------Documentation README file------------
XFor those of you not making documentation changes or installing
Xthe help system just print out gnuplot.doc and ignore the remaining 
Xinformation.
X
XThe documentation for gnuplot is intended to be maintained either
Xby directly updating help files in the help tree or by updating a
Xmaster .hlp file.  (The intent is to leave it up to the individual
Xto choose how to maintain the documentation.)  The master .hlp file
X(gnuplot.hlp) is a representation of the directory help tree.  The
Xprogram helptree.c will either convert a help tree into a flat file
Xor take such a flat file and put it back into a help tree.  The help
Xtree format is used on unix and MSDOS machines in conjunction with
Xthe standalone ``help'' program to provide the gnuplot help facility.
XThe flat file gnuplot.hlp is used on VMS machines to provide the
Xgnuplot help facility (using VMS help routines).
X
XUnix and MSDOS machines still need the gnuplot.hlp file, even though 
Xit is not used directly in the help system.  For one thing, flat 
Xfiles are easier to move to another machine.  For another, the file 
Xgnuplot.doc (a printable manual) can be built out of gnuplot.hlp as 
Xfollows:
X
Xhlp2ms <gnuplot.hlp >gnuplot.ms 
Xnroff -ms gnuplot.ms |col -h >gnuplot.doc
X
XTo build a help system on unix for gnuplot first build Roland Stolfa's
Xhelp program and install it in /usr/local/bin.  Gnuplot looks for either
X/usr/local/bin/help or the environment symbol GNUHELP--if it is not
Xpossible to install help in /usr/local/bin.  Stolfa's help system assumes
Xa help tree under /usr/local/help or a directory pointed to by the 
Xenvironment symbol HELPDIR.  The gnuplot help tree can be created out of 
Xgnuplot.hlp using the following command:
X
Xhelptree -t /usr/local/help/gnuplot <gnuplot.hlp
END_OF_FILE
if test 1796 -ne `wc -c <'docs/README'`; then
    echo shar: \"'docs/README'\" unpacked with wrong size!
fi
# end of 'docs/README'
fi
if test -f 'docs/gnuplot.doc' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'docs/gnuplot.doc'\"
else
echo shar: Extracting \"'docs/gnuplot.doc'\" \(27576 characters\)
sed "s/^X//" >'docs/gnuplot.doc' <<'END_OF_FILE'
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X				 GNUPLOT
X		     An	Interactive Plotting Program
X
X
X
X		      Thomas Williams &	Colin Kelley
X
X		  Department of	Electrical Engineering
X			   Villanova University
X			   Villanova, PA  19085
X			       May 26, 1989
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X			       May 26, 1989
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X				 _I_N_T_R_O_D_U_C_T_I_O_N
X
X   GNUPLOT is a	command-driven interactive function plotting program.
X   It is case sensitive	(commands and function names written in	lower-
X   case	are not	the same as those written in CAPS).  All command names
X   may be abbreviated, as long as the abbreviation is not ambiguous.
X   Any number of commands may appear on	a line,	separated by semicolons
X   (;).
X
X
X
X
X   _1.  _c_l_e_a_r
X
X
X   This	command	erases the current screen or output device as specified
X   by 'set output'.  This usually generates a formfeed on hardcopy dev-
X   ices.  Use 'set terminal' to	set the	device type.
X
X
X
X
X   _2.  _e_x_i_t
X
X
X   'exit', 'quit' and your computer's END-OF-FILE character will exit
X   GNUPLOT.  All these commands	will clear the output device (as the
X   'clear' command does) before	exiting.
X
X
X
X
X   _3.  _e_x_p_r_e_s_s_i_o_n_s
X
X
X
X
X
X
X	_3._1.  _f_u_n_c_t_i_o_n_s
X
X
X
X
X
X
X
X
X
X
X			       May 26, 1989
X
X
X
X
X
X
X				 GNUPLOT			 Page 2
X
X
X	     _3._1._1.  _a_b_s
X
X
X	     This function returns the absolute	value of its argument.
X	     The returned value	is of the same type as the argument.
X
X	     For complex arguments, abs(x) is defined as the length of
X	     x in the complex plane [i.e.  sqrt(real(x)**2 +
X	     imag(x)**2) ].
X
X
X
X	     _3._1._2.  _a_c_o_s
X
X
X	     This function returns the arc cosine (inverse cosine) of
X	     its argument.  'acos' returns its argument	in radians.
X
X
X
X	     _3._1._3.  _a_r_g
X
X
X	     This function returns the phase of	a complex number, in
X	     radians.
X
X
X
X	     _3._1._4.  _a_s_i_n
X
X
X	     This function returns the arc sin (inverse	sin) of	its
X	     argument.	'asin' returns its argument in radians.
X
X
X
X	     _3._1._5.  _a_t_a_n
X
X
X	     This function returns the arc tangent (inverse tangent) of
X	     its argument.  'atan' returns its argument	in radians.
X
X
X
X	     _3._1._6.  _b_e_s_j_0
X
X
X	     This function returns the j0th Bessel function of its
X	     argument.	'besj0'	expects	its argument to	be in radians.
X
X
X
X
X
X
X
X			       May 26, 1989
X
X
X
X
X
X
X				 GNUPLOT			 Page 3
X
X
X	     _3._1._7.  _b_e_s_j_1
X
X
X	     This function returns the j1st Bessel function of its
X	     argument.	'besj1'	expects	its argument to	be in radians.
X
X
X
X	     _3._1._8.  _b_e_s_y_0
X
X
X	     This function returns the y0th Bessel function of its
X	     argument.	'besy0'	expects	its argument to	be in radians.
X
X
X
X	     _3._1._9.  _b_e_s_y_1
X
X
X	     This function returns the y1st Bessel function of its
X	     argument.	'besy1'	expects	its argument to	be in radians.
X
X
X
X	     _3._1._1_0.  _c_e_i_l
X
X
X	     This function returns the largest integer not less	than
X	     its argument.  For	complex	numbers, 'ceil'	returns	the
X	     largest integer not less than the real part of its	argu-
X	     ment.
X
X
X
X	     _3._1._1_1.  _c_o_s
X
X
X	     This function returns the cosine of its argument.	'cos'
X	     expects its argument to be	in radians.
X
X
X
X	     _3._1._1_2.  _c_o_s_h
X
X
X	     This function returns the hyperbolic cosine of its	argu-
X	     ment.  'cosh' expects its argument	to be in radians.
X
X
X
X	     _3._1._1_3.  _e_x_p
X
X
X
X
X
X			       May 26, 1989
X
X
X
X
X
X
X				 GNUPLOT			 Page 4
X
X
X	     This function returns the exponential function of its
X	     argument (e raised	to the power of	its argument).
X
X
X
X	     _3._1._1_4.  _f_l_o_o_r
X
X
X	     This function returns the smallest	integer	not greater
X	     than its argument.	 For complex numbers, 'floor' returns
X	     the smallest integer not greater than the real part of its
X	     argument.
X
X
X
X	     _3._1._1_5.  _i_m_a_g
X
X
X	     This function returns the imaginary part of its argument
X	     as	a real number.
X
X
X
X	     _3._1._1_6.  _i_n_t
X
X
X	     This function returns the integer part of its argument,
X	     truncated toward zero.
X
X
X
X	     _3._1._1_7.  _l_o_g
X
X
X	     This function returns the natural logarithm (base e) of
X	     its argument.
X
X
X
X	     _3._1._1_8.  _l_o_g_1_0
X
X
X	     This function returns the logarithm (base 10) of its argu-
X	     ment.
X
X
X
X	     _3._1._1_9.  _r_e_a_l
X
X
X	     This function returns the real part of its	argument.
X
X
X
X
X
X			       May 26, 1989
X
X
X
X
X
X
X				 GNUPLOT			 Page 5
X
X
X	     _3._1._2_0.  _s_g_n
X
X
X	     This function returns 1 if	its argument is	positive, -1 if
X	     its argument is negative, and 0 if	its argument is	0.  If
X	     the argument is a complex value, the imaginary component
X	     is	ignored.
X
X
X
X	     _3._1._2_1.  _s_i_n
X
X
X	     This function returns the sine of its argument.  'sin'
X	     expects its argument to be	in radians.
X
X
X
X	     _3._1._2_2.  _s_i_n_h
X
X
X	     This function returns the hyperbolic sine of its argument.
X	     'sinh' expects its	argument to be in radians.
X
X
X
X	     _3._1._2_3.  _s_q_r_t
X
X
X	     This function returns the square root of its argument.
X
X
X
X	     _3._1._2_4.  _t_a_n
X
X
X	     This function returns the tangent of its argument.	 'tan'
X	     expects its argument to be	in radians.
X
X
X
X	     _3._1._2_5.  _t_a_n_h
X
X
X	     This function returns the hyperbolic tangent of its argu-
X	     ment.  'tanh' expects its argument	to be in radians.
X
X
X
X	_3._2.  _o_p_e_r_a_t_o_r_s
X
X
X
X
X
X
X			       May 26, 1989
X
X
X
X
X
X
X				 GNUPLOT			 Page 6
X
X
X	     _3._2._1.  _b_i_n_a_r_y
X
X
X	     The following is a	list of	all the	binary operators and
X	     their usages:
X
X	      Symbol	     Example	      Explanation
X	       **	      a**b	       exponentiation
X	       *	      a*b	       multiplication
X	       /	      a/b	       division
X	       %	      a%b	     * modulo
X	       +	      a+b	       addition
X	       -	      a-b	       subtraction
X	       ==	      a==b	       equality
X	       !=	      a!=b	       inequality
X	       &	      a&b	     * bitwise and
X	       ^	      a^b	     * bitwise exclusive or
X	       |	      a|b	     * bitwise inclusive or
X	       &&	      a&&b	     * logical and
X	       ||	      a||b	     * logical or
X	       ?:	      a?b:c	     * ternary operation
X
X	     (*) Starred explanations indicate that the	operator
X	     requires integer arguments.
X
X	     Logical AND (&&) and OR (||) short-circuit	the way	they do
X	     in	C.  That is, the second	&& operand is not evaluated if
X	     the first is false; the second || operand is not evaluated
X	     if	the first is true.
X
X	     The ternary operator evaluates its	first argument (a).  If
X	     it	is true	(non-zero) the second argument (b) is evaluated
X	     and returned, otherwise the third argument	(c) is
X	     evaluated and returned.
X
X
X
X	     _3._2._2.  _u_n_a_r_y
X
X
X	     The following is a	list of	all the	unary operators	and
X	     their usages:
X
X	      Symbol	     Example	      Explanation
X	       -	      -a	       unary minus
X	       ~	      ~a	     * one's complement
X	       !	      !a	     * logical negation
X	       !	      a!	     * factorial
X
X	     (*) Starred explanations indicate that the	operator
X	     requires an integer argument.
X
X	     The factorial operator returns a real number to allow a
X
X
X
X			       May 26, 1989
X
X
X
X
X
X
X				 GNUPLOT			 Page 7
X
X
X	     greater range.
X
X
X
X
X   _4.  _h_e_l_p
X
X
X   The 'help' command displays on-line help.  To specify information on
X   a particular	topic use the syntax:
X
X       help <topic>
X
X   Help	is actually a separate program.	 If help doesn't work for you,
X   ask your administrator how to set up	the GNUHELP environment	vari-
X   able	(and possibly the HELPDIR environment variable).
X
X   You may exit	the help utility and return to GNUPLOT by either press-
X   ing <Return>(s) at the 'HELP	>' prompt or pressing your computer's
X   END-OF-FILE character at any	help prompt.
X
X
X
X
X   _5.  _l_o_a_d
X
X
X   This	command	executes each line of the specified input file as if it
X   had been typed in interactively.  Files created by the 'save' com-
X   mand	can later be 'load'ed.	Any text file containing valid commands
X   can be created and then executed by the 'load' command.  Files being
X   'load'ed may	themselves contain 'load' commands.  Lines beginning
X   with	# (or !	 if using VMS) will be treated as comments and ignored.
X
X   The 'load' command must be the last command on the line.
X
X   Syntax:
X	   load	<input-file>
X
X   The name of the input file must be enclosed in quotes.
X
X   Examples:
X
X	   load	'work.gnu'
X	   load	"func.dat"
X
X
X
X
X   _6.  _p_a_u_s_e
X
X
X   Pause is useful in conjunction with `load` files.  The command
X
X
X
X			       May 26, 1989
X
X
X
X
X
X
X				 GNUPLOT			 Page 8
X
X
X   'pause' displays any	text associated	with the command and then waits
X   the specified amount	of time.  This allows one to build a 'load'
X   file	and control the	amount of time a finished graph	is displayed.
X   The first argument is an expression that can	be -1, 0, 1, 2,	...  -1
X   will	wait until a carriage return is	hit.  0	won't pause at all, and
X   1, 2, etc. will wait	the specified number of	seconds.
X
X   Note: Since pause is	not part of the	plot it	may interact with dif-
X   ferent device drivers differently (depending	upon how text and
X   graphics are	mixed).
X
X   Examples:
X	   pause -1    ! Wait until a carriage return is hit
X	   pause 3     ! Wait three seconds
X	   pause -1  "Hit return to continue"
X	   pause 10  "Isn't this pretty?  It's a cubic-spline."
X
X   Syntax:
X	   pause <expression> ["string"]
X
X
X
X
X   _7.  _p_l_o_t
X
X
X
X
X
X
X	_7._1.  _d_a_t_a__f_i_l_e
X
X
X	Discrete data contained	in a file can displayed	by specifying
X	the name of the	data file (enclosed in quotes) on the 'plot'
X	command	line.
X
X	Data files should contain one data point per line.  A data
X	point may be specified either as an X and Y value separated by
X	blank space, or	as just	the Y value, in	which case the program
X	will use the number of the coordinate as the X value.  Coordi-
X	nate numbers starts at 0 and are incremented for each data
X	point read.  Blank lines and lines beginning with # will be
X	treated	as comments and	ignored.
X
X
X	This example compares the data in the file population.dat to a
X	theoretical curve:
X
X		pop(x) = 103*exp((1965-x)/10)
X		plot [1960:1990] 'population.dat', pop(x)
X
X	The file population.dat	might contain:
X
X
X
X			       May 26, 1989
X
X
X
X
X
X
X				 GNUPLOT			 Page 9
X
X
X	 # Gnu population in Antarctica	since 1965
X	 1965	103
X	 1970	55
X	 1975	34
X	 1980	24
X	 1985	10
X
X
X
X	_7._2.  _r_a_n_g_e_s
X
X
X	This option specifies the region of the	plot which will	be
X	displayed.
X
X	Ranges may be provided on the 'plot' command line as synonyms
X	for the	'set xrange' and 'set yrange' commands.
X
X	Syntax:
X		[{dummy-var =} {xmin : xmax}] {	[{ymin : ymax}]	}
X
X	Where dummy-var	is the independent variable (the default is
X	'x', but this may be changed with the 'set dummy' command) and
X	the min	and max	terms can be expressions or constants.
X
X	Both the min and max terms are optional.  The ':' is also
X	optional if neither a min nor a	max term is specified.	This
X	allows '[]' to be used as a null range specification.
X
X	Specifying a Y range turns autoscaling OFF.
X
X
X	Examples:
X
X	This uses current ranges:
X		plot cos(x)
X
X	This sets the xrange only:
X		plot [-10:30] sin(pi*x)/(pi*x)
X
X	This is	the same, but uses t as	the dummy-variable:
X		plot [t	= -10 :30]  sin(pi*t)/(pi*t)
X
X	This sets both the x and yranges:
X		plot [-pi:pi] [-3:3]  tan(x), 1/x
X
X	This sets only the yrange:
X		plot []	[-2:sin(5)*-8] sin(x)**besj0(x)
X
X	This sets xmax and ymin	only:
X		plot [:200] [-pi:]  exp(sin(x))
X
X
X
X
X
X			       May 26, 1989
X
X
X
X
X
X
X				 GNUPLOT			Page 10
X
X
X	_7._3.  _s_t_y_l_e
X
X
X	Plots may be displayed in one of three styles: 'lines',
X	'points', or 'impulses'.  The 'lines' style connects adjacent
X	points with lines. The 'points'	style displays a small symbol
X	at each	point.	The 'impulses' style displays a	vertical line
X	from the X axis	to each	point.
X
X	Default	styles are chosen with the 'set	function style'	and
X	'set data style' commands.
X
X	Syntax:
X		with <style>
X
X	Where <style> is one of	'lines', 'points', or 'impulses'.
X	These keywords may be abbreviated.
X
X
X	Examples:
X
X	This plots sin(x) with impulses:
X		plot sin(x) with impulses
X
X	This plots sin(x) with points, cos(x) default:
X		plot [-9:30]  sin(x) w points, cos(x)
X
X	This plots tan(x) with the default function style, "data.1"
X	with lines:
X		plot []	[-2:5] tan(x), "data.1"	with l
X
X	This plots "leastsq.dat" with impulses:
X		plot 'leastsq.dat' w i
X
X
X
X
X   _8.  _p_r_i_n_t
X
X
X   This	command	prints the value of <expression> to the	screen.
X
X   Syntax:
X	   print <expression>
X
X   See 'expressions'.
X
X
X
X
X   _9.  _q_u_i_t
X
X
X
X
X
X			       May 26, 1989
X
X
X
X
X
X
X				 GNUPLOT			Page 11
X
X
X   'quit' is a synonym for 'exit'.  See	'exit'.
X
X
X
X
X   _1_0.	_r_e_p_l_o_t
X
X
X   'replot' repeats the	last 'plot' command.  This can be useful for
X   viewing a plot with different 'set' options,	or when	generating the
X   same	plot for several devices.
X
X
X
X
X   _1_1.	_s_a_v_e
X
X
X   This	command	saves either user-defined functions, variables,	or both
X   to the specified file.
X
X   Syntax:
X	   save	 {option} <filename>
X
X   Where <option> is either 'functions'	or 'variables'.	 If no option
X   is used GNUPLOT saves both functions	and variables.
X
X   'save'd files are written in	text format and	may be read by the
X   'load' command.
X
X   The filename	must be	enclosed in quotes.
X
X   Examples:
X
X	   save	"work.gnu"
X	   save	functions 'func.dat'
X	   save	var 'var.dat'
X
X
X
X
X   _1_2.	_s_e_t-_s_h_o_w
X
X
X   Set or show various internal	gnuplot	settings.
X
X
X
X
X	_1_2._1.  _a_l_l
X
X
X	The command 'show all' will display all	the set-show options
X
X
X
X			       May 26, 1989
X
X
X
X
X
X
X				 GNUPLOT			Page 12
X
X
X	currently in effect.
X
X	Syntax:
X		show all
X
X
X
X	_1_2._2.  _a_u_t_o_s_c_a_l_e
X
X
X	If autoscaling is set, the Y axis is automatically scaled to
X	fit the	range of the function or data being plotted.  If autos-
X	caling is not set, the current Y range is used.	 See 'set
X	yrange'.
X
X	Syntax:
X		set autoscale
X		set noautoscale
X		show autoscale
X
X
X
X	_1_2._3.  _d_u_m_m_y
X
X
X	By default, GNUPLOT assumes that the independent variable is
X	'x' on the 'plot' command line.	 'x' is	called the dummy vari-
X	able because it	is just	a notation to indicate the independent
X	variable.  The 'set dummy' command changes this	default	dummy
X	variable name.	For example, you may find it more convenient to
X	call the dummy variable	't' when plotting time functions:
X
X		set dummy t
X		plot sin(t), cos(t)
X
X	Syntax:
X		set dummy <dummy-var>
X		show dummy
X
X
X
X	_1_2._4.  _f_u_n_c_t_i_o_n_s
X
X
X	The 'show functions' command lists all user-defined functions
X	and their definitions.
X
X	Syntax:
X		show functions
X
X
X
X
X
X
X
X			       May 26, 1989
X
X
X
X
X
X
X				 GNUPLOT			Page 13
X
X
X	_1_2._5.  _l_o_g_s_c_a_l_e
X
X
X	Log scaling may	be set on the X	and/or Y axis.
X
X	Syntax:
X		set logscale <axes>
X		set nologscale
X		show logscale
X
X	Where <axes> is	either 'x', 'y', or 'xy'.
X
X
X
X	_1_2._6.  _p_o_l_a_r
X
X
X	The 'set polar'	command	changes	the meaning of the plot	from
X	rectangular coordinates	to polar coordinates.  In polar	coordi-
X	nates, the dummy variable (x) is an angle.  The	domain of this
X	angle is changed from whatever it was to [0:2*pi].
X
X	The command 'set nopolar' changes the meaning of the plot back
X	to the default rectangular coordinate system.  The domain of x
X	is changed from	whatever it was	to [-10:10].
X
X	While in polar coordinates the meaning of an expression	in x is
X	really r = f(x), where x is an angle of	rotation.  The plot,
X	however, is plotted on a rectangular grid.  Thus the displayed
X	ranges of x and	y are rectanglar values, while the command 'set
X	xrange'	refers to polar	values.
X
X	Syntax:
X		set polar
X		 set nopolar	      show polar
X
X
X
X	_1_2._7.  _o_f_f_s_e_t_s
X
X
X	The amount of the graph	that the plot takes up may be con-
X	trolled	to some	extent with the	'set offsets' command.	This
X	command	takes four arguments--left offset, right offset, top
X	offset and bottom offset.  By default, each offset is 0.  Left
X	and right offsets are given in units of	the x axis, while top
X	and bottom offsets are given in	units of the y axis.  The plot
X	of sin(x), displayed with offsets of 0,	0, 2, 2	will take up
X	1/3 of the displayed y axis.  Offsets are particularly useful
X	with polar coordinates as a means of compensating for aspect
X	ratio distortion.
X
X	Syntax:
X
X
X
X			       May 26, 1989
X
X
X
X
X
X
X				 GNUPLOT			Page 14
X
X
X		set offsets <expr>, <expr>, <expr>, <expr>
X		show offsets
X
X
X
X	_1_2._8.  _o_u_t_p_u_t
X
X
X	By default, plots are displayed	to the standard	output.	 The
X	'set output' command redirects the displays to the specified
X	file or	device.
X
X	Syntax:
X		set output {filename}
X		show output
X
X	The filename must be enclosed in quotes.  If the filename is
X	omitted, output	will be	sent to	the standard output.
X
X
X
X	_1_2._9.  _s_a_m_p_l_e_s
X
X
X	The sampling rate of functions may be changed by the 'set sam-
X	ples' command.	By default, sampling is	set to 160 points.  A
X	higher sampling	rate will produce more accurate	plots, but will
X	take longer.  In generating plots, GNUPLOT will	use either the
X	sampling rate set or the resolution of the current output dev-
X	ice, whichever is lower.
X
X	Syntax:
X		set samples <expression>
X		show samples
X
X
X
X	_1_2._1_0.	_s_t_y_l_e
X
X
X	Plots may be displayed in one of three styles: 'lines',
X	'points', or 'impulses'.  The 'lines' style connects adjacent
X	points with lines. The 'points'	style displays a small symbol
X	at each	point.	The 'impulses' style displays a	vertical line
X	from the X axis	to each	point.
X
X	Default	styles are chosen with the 'set	function style'	and
X	'set data style' commands.  See	'plot' for information about
X	how to override	the default plotting style for individual func-
X	tions.
X
X	Syntax:
X		set function style <style>
X
X
X
X			       May 26, 1989
X
X
X
X
X
X
X				 GNUPLOT			Page 15
X
X
X		set data style <style>
X		show function style
X		show data style
X
X	Where style is either 'lines', 'points', or 'impulses'.
X
X
X
X	_1_2._1_1.	_t_e_r_m_i_n_a_l
X
X
X	GNUPLOT	supports many different	graphics devices.  Use the 'set
X	terminal' command to select the	type of	device for which GNU-
X	PLOT will produce output.   While your installation may	not
X	include	all of these, the following were available in the
X	source code at the time	this help file was written:
X
X	Machines:  IBM-PC's (ega, cga, hercules), ATT6300, CORONA325,
X		   UNIXPC (att7300 or 3b1);
X	Terminals: AED512, AED767, HP2623A, HP7580B, REGIS, SELENAR,
X		   TEK40xx, BBN	Bitgraph;
X	Printers:  LASERJET1, LASERJET2, LASERJET3, POSTSCRIPT,	QMS,
X		   VECTRIX384;
X	Other:	   UNIXPLOT.
X
X	Syntax:
X		set terminal {terminal-type}
X		show terminal
X
X	If <terminal-type> is omitted, GNUPLOT will list the available
X	terminal types.	 <terminal-type> may be	abbreviated.
X
X	Use 'set output' to redirect this output to a file or device.
X
X
X
X	_1_2._1_2.	_v_a_r_i_a_b_l_e_s
X
X
X	The 'show variables' command lists all user-defined variables
X	and their values.
X
X	Syntax:
X		show variables
X
X
X
X	_1_2._1_3.	_v_e_r_s_i_o_n
X
X
X	Show the current version of gnuplot.  This is the same text
X	that appears when gnuplot starts up.  (There is	no SET VERSION
X	command, of course.)
X
X
X
X			       May 26, 1989
X
X
X
X
X
X
X				 GNUPLOT			Page 16
X
X
X	Syntax:		SHOW VERSION
X
X
X
X	_1_2._1_4.	_x_r_a_n_g_e
X
X
X	The 'set xrange' command sets the horizontal range which will
X	be displayed.
X
X	This range may also be specified on the	'plot' command line.
X
X	Syntax:
X		set xrange [{xmin : xmax}]
X
X	Where <xmin> and <xmax>	terms are expressions or constants.
X
X	Both the <xmin>	and <xmax> terms are optional.
X
X
X
X	_1_2._1_5.	_y_r_a_n_g_e
X
X
X	The 'set yrange' command sets the vertical range which will be
X	displayed.  This command turns autoscaling OFF.
X
X	This range may also be specified on the	'plot' command line.
X
X	Syntax:
X		set yrange [{ymin : ymax}]
X
X	Where <ymin> and <ymax>	terms are expressions or constants.
X
X	Both the <ymin>	and <ymax> terms are optional.
X
X
X
X	_1_2._1_6.	_z_e_r_o
X
X
X	GNUPLOT	will not plot a	point if its imaginary part is greater
X	in magnitude than the 'zero' threshold.	 The default 'zero'
X	value is 1e-8.
X
X	Syntax:
X		set zero <expression>
X		show zero
X
X
X
X
X
X
X
X
X			       May 26, 1989
X
X
X
X
X
X
X				 GNUPLOT			Page 17
X
X
X   _1_3.	_s_h_e_l_l
X
X
X   The 'shell' command spawns an interactive shell.  To	return to GNU-
X   PLOT, type 'logout' if using	VMS, 'exit' or your END-OF-FILE	charac-
X   ter if using	Unix, or 'exit'	if using MS-DOS.
X
X   A single shell command may be spawned by preceding it with the !
X   character ($	if using VMS) at the beginning of a command line.  Con-
X   trol	will return immediately	to GNUPLOT after this command is exe-
X   cuted.  For example,
X
X	! dir
X
X   prints a directory listing and then returns to GNUPLOT.
X
X
X
X
X   _1_4.	_s_t_a_r_t__u_p
X
X
X   When	GNUPLOT	is run,	it looks for an	initialization file to load.
X   This	file is	called '.gnuplot' on Unix systems, and 'GNUPLOT.INI' on
X   other systems.  If this file	is not found in	the current directory,
X   the program will look for it	in your	home directory (under MS-DOS,
X   the environment variable GNUPLOT should contain the name of this
X   directory).
X
X   If this file	is found, GNUPLOT executes the commands	in this	file.
X   This	is most	useful for setting your	terminal type and defining any
X   functions or	variables which	you use	often.	The variable 'pi' is
X   already defined for you.
X
X
X
X
X   _1_5.	_s_u_b_s_t_i_t_u_t_i_o_n
X
X
X   Command-line	substitution is	specified by a system command enclosed
X   in backquotes (`).  This command is spawned and the output it pro-
X   duces replaces the name of the command (and backquotes) on the com-
X   mand	line.
X
X   Newlines in the output produced by the spawned command are replaced
X   with	blanks.
X
X   Command-line	substitution can be used anywhere on the GNUPLOT com-
X   mand	line.
X
X
X   Example:
X
X
X
X			       May 26, 1989
X
X
X
X
X
X
X				 GNUPLOT			Page 18
X
X
X   This	will run the program 'leastsq' and substitute `leastsq`	on the
X   command line	with its output:
X
X    f(x) = `leastsq`
X
X   or, in VMS
X
X    f(x) = `run	leastsq`
X
X
X
X
X   _1_6.	_u_s_e_r__d_e_f_i_n_e_d
X
X
X   You may define your own functions and variables.  User-defined func-
X   tions and variables may be used anywhere.
X
X   User-defined	function syntax:
X       <function-name> ( <dummy-var> ) =  <expression>
X
X   Where <expression> is defined in terms of <dummy-var>.
X
X   User-defined	variable syntax:
X       <variable-name> = <constant-expression>
X
X   Examples:
X       w = 2
X       q = floor(tan(pi/2 - 0.1))
X       f(x) = sin(w*x)
X       sinc(x) = sin(pi*x)/(pi*x)
X       delta(t)	= (t ==	0)
X       ramp(t) = (t > 0) ? t : 0
X
X   The variable	'pi' is	already	defined	for you.
X
X   See 'show functions'	and 'show variables'.
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X				 GNUPLOT			      i
X
X
X
X
X
X			    Table of Contents
X
X
X
X
X   clear .........................................................    1
X
X   exit	..........................................................    1
X
X   expressions ...................................................    1
X
X	functions ................................................    1
X
X	     abs .................................................    2
X
X	     acos ................................................    2
X
X	     arg .................................................    2
X
X	     asin ................................................    2
X
X	     atan ................................................    2
X
X	     besj0 ...............................................    2
X
X	     besj1 ...............................................    3
X
X	     besy0 ...............................................    3
X
X	     besy1 ...............................................    3
X
X	     ceil ................................................    3
X
X	     cos .................................................    3
X
X	     cosh ................................................    3
X
X	     exp .................................................    4
X
X	     floor ...............................................    4
X
X	     imag ................................................    4
X
X	     int .................................................    4
X
X	     log .................................................    4
X
X	     log10 ...............................................    4
X
X	     real ................................................    4
X
X
X
X
X
X
X
X
X
X
X				 GNUPLOT			     ii
X
X
X	     sgn .................................................    5
X
X	     sin .................................................    5
X
X	     sinh ................................................    5
X
X	     sqrt ................................................    5
X
X	     tan .................................................    5
X
X	     tanh ................................................    5
X
X	operators ................................................    5
X
X	     binary ..............................................    6
X
X	     unary ...............................................    6
X
X   help	..........................................................    7
X
X   load	..........................................................    7
X
X   pause .........................................................    7
X
X   plot	..........................................................    8
X
X	data_file ................................................    8
X
X	ranges ...................................................    9
X
X	style ....................................................   10
X
X   print .........................................................   10
X
X   quit	..........................................................   11
X
X   replot ........................................................   11
X
X   save	..........................................................   11
X
X   set-show ......................................................   11
X
X	all ......................................................   11
X
X	autoscale ................................................   12
X
X	dummy ....................................................   12
X
X	functions ................................................   12
X
X	logscale .................................................   13
X
X	polar ....................................................   13
X
X
X
X
X
X
X
X
X
X
X				 GNUPLOT			    iii
X
X
X	offsets	..................................................   13
X
X	output ...................................................   14
X
X	samples	..................................................   14
X
X	style ....................................................   14
X
X	terminal .................................................   15
X
X	variables ................................................   15
X
X	version	..................................................   15
X
X	xrange ...................................................   16
X
X	yrange ...................................................   16
X
X	zero .....................................................   16
X
X   shell .........................................................   17
X
X   start_up ......................................................   17
X
X   substitution	..................................................   17
X
X   user_defined	..................................................   18
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X			       May 26, 1989
X
X
END_OF_FILE
echo shar: 544 control characters may be missing from \"'docs/gnuplot.doc'\"
if test 27576 -ne `wc -c <'docs/gnuplot.doc'`; then
    echo shar: \"'docs/gnuplot.doc'\" unpacked with wrong size!
fi
# end of 'docs/gnuplot.doc'
fi
if test -f 'docs/gnuplot.hlp' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'docs/gnuplot.hlp'\"
else
echo shar: Extracting \"'docs/gnuplot.hlp'\" \(19621 characters\)
sed "s/^X//" >'docs/gnuplot.hlp' <<'END_OF_FILE'
X
X GNUPLOT is a command-driven interactive function plotting program.  It
X is case sensitive (commands and function names written in lowercase
X are not the same as those written in CAPS).  All command names may be
X abbreviated, as long as the abbreviation is not ambiguous.  Any number
X of commands may appear on a line, separated by semicolons (;).
X
X Type the EOF character (^D for UNIX, ^Z for DOS) to exit the help system
X from any level and return to GNUPLOT.  <RETURN> goes back to the previous
X level and to GNUPLOT from top level help.
X1 clear
X This command erases the current screen or output device as specified
X by 'set output'.  This usually generates a formfeed on hardcopy
X devices.  Use 'set terminal' to set the device type.
X1 exit
X 'exit', 'quit' and your computer's END-OF-FILE character will exit
X GNUPLOT.  All these commands will clear the output device (as the
X 'clear' command does) before exiting.
X1 expressions
X2 functions
X3 abs
X This function returns the absolute value of its argument.  The
X returned value is of the same type as the argument.
X
X For complex arguments, abs(x) is defined as the length of x in the
X complex plane [i.e.  sqrt(real(x)**2 + imag(x)**2) ].
X3 acos
X This function returns the arc cosine (inverse cosine) of its
X argument.  'acos' returns its argument in radians.
X3 arg
X This function returns the phase of a complex number, in radians.
X3 asin
X This function returns the arc sin (inverse sin) of its argument.
X 'asin' returns its argument in radians.
X3 atan
X This function returns the arc tangent (inverse tangent) of its
X argument.  'atan' returns its argument in radians.
X3 besj0
X This function returns the j0th Bessel function of its argument.
X 'besj0' expects its argument to be in radians.
X3 besj1
X This function returns the j1st Bessel function of its argument.
X 'besj1' expects its argument to be in radians.
X3 besy0
X This function returns the y0th Bessel function of its argument.
X 'besy0' expects its argument to be in radians.
X3 besy1
X This function returns the y1st Bessel function of its argument.
X 'besy1' expects its argument to be in radians.
X3 ceil
X This function returns the largest integer not less than its
X argument.  For complex numbers, 'ceil' returns the largest integer
X not less than the real part of its argument.
X3 cos
X This function returns the cosine of its argument.  'cos' expects its
X argument to be in radians.
X3 cosh
X This function returns the hyperbolic cosine of its argument.
X 'cosh' expects its argument to be in radians.
X3 exp
X This function returns the exponential function of its argument
X (e raised to the power of its argument).
X3 floor
X This function returns the smallest integer not greater than its
X argument.  For complex numbers, 'floor' returns the smallest
X integer not greater than the real part of its argument.
X3 imag
X This function returns the imaginary part of its argument as a real number.
X3 int
X This function returns the integer part of its argument, truncated
X toward zero.
X3 log
X This function returns the natural logarithm (base e) of its
X argument.
X3 log10
X This function returns the logarithm (base 10) of its argument.
X3 real
X This function returns the real part of its argument.
X3 sgn
X This function returns 1 if its argument is positive, -1 if its
X argument is negative, and 0 if its argument is 0.  If the argument
X is a complex value, the imaginary component is ignored.
X3 sin
X This function returns the sine of its argument.  'sin' expects its
X argument to be in radians.
X3 sinh
X This function returns the hyperbolic sine of its argument.  'sinh'
X expects its argument to be in radians.
X3 sqrt
X This function returns the square root of its argument.
X3 tan
X This function returns the tangent of its argument.  'tan' expects
X its argument to be in radians.
X3 tanh
X This function returns the hyperbolic tangent of its argument.
X 'tanh' expects its argument to be in radians.
X2 operators
X3 binary
X The following is a list of all the binary operators and their
X usages:
X
X  Symbol 	Example 	 Explanation
X   **     	 a**b    	  exponentiation
X   *      	 a*b     	  multiplication
X   /      	 a/b     	  division
X   %      	 a%b     	* modulo
X   +      	 a+b     	  addition
X   -      	 a-b     	  subtraction
X   ==     	 a==b    	  equality
X   !=     	 a!=b    	  inequality
X   &      	 a&b     	* bitwise and
X   ^      	 a^b     	* bitwise exclusive or
X   |      	 a|b     	* bitwise inclusive or
X   &&     	 a&&b    	* logical and
X   ||     	 a||b    	* logical or
X   ?:     	 a?b:c   	* ternary operation
X
X (*) Starred explanations indicate that the operator requires
X integer arguments.
X
X Logical AND (&&) and OR (||) short-circuit the way they do in C.
X That is, the second && operand is not evaluated if the first is
X false; the second || operand is not evaluated if the first is true.
X
X The ternary operator evaluates its first argument (a).  If it is
X true (non-zero) the second argument (b) is evaluated and returned,
X otherwise the third argument (c) is evaluated and returned.
X3 unary
X The following is a list of all the unary operators and their
X usages:
X
X  Symbol 	Example 	 Explanation
X   -      	 -a      	  unary minus
X   ~      	 ~a      	* one's complement
X   !      	 !a      	* logical negation
X   !      	 a!      	* factorial
X
X (*) Starred explanations indicate that the operator requires an
X integer argument.
X
X The factorial operator returns a real number to allow a greater range.
X1 help
X The 'help' command displays on-line help.  To specify information on a
X particular topic use the syntax:
X
X     help <topic>
X
X Help is actually a separate program.  If help doesn't work for you, ask
X your administrator how to set up the GNUHELP environment variable (and
X possibly the HELPDIR environment variable).
X
X You may exit the help utility and return to GNUPLOT by either pressing
X <Return>(s) at the 'HELP >' prompt or pressing your computer's END-OF-FILE
X character at any help prompt.
X1 load
X This command executes each line of the specified input file as if it
X had been typed in interactively.  Files created by the 'save' command
X can later be 'load'ed.  Any text file containing valid commands can be
X created and then executed by the 'load' command.  Files being 'load'ed
X may themselves contain 'load' commands.  Lines beginning with # (or !
X if using VMS) will be treated as comments and ignored.
X
X The 'load' command must be the last command on the line.
X
X Syntax:
X         load <input-file>
X
X The name of the input file must be enclosed in quotes.
X
X Examples:
X
X         load 'work.gnu'
X         load "func.dat"
X1 pause
X Pause is useful in conjunction with `load` files.  The command 'pause'
X displays any text associated with the command and then waits the
X specified amount of time.  This allows one to build a 'load' file
X and control the amount of time a finished graph is displayed.  The
X first argument is an expression that can be -1, 0, 1, 2, ...  -1
X will wait until a carriage return is hit.  0 won't pause at all, and
X 1, 2, etc. will wait the specified number of seconds.
X
X Note: Since pause is not part of the plot it may interact with
X different device drivers differently (depending upon how text and
X graphics are mixed).
X
X Examples:
X         pause -1    ! Wait until a carriage return is hit
X         pause 3     ! Wait three seconds
X         pause -1  "Hit return to continue"
X         pause 10  "Isn't this pretty?  It's a cubic-spline."
X
X Syntax:
X         pause <expression> ["string"]
X1 plot
X2 data_file
X Discrete data contained in a file can displayed by specifying the
X name of the data file (enclosed in quotes) on the 'plot' command
X line.
X
X Data files should contain one data point per line.  A data point may
X be specified either as an X and Y value separated by blank space, or
X as just the Y value, in which case the program will use the number
X of the coordinate as the X value.  Coordinate numbers starts at 0
X and are incremented for each data point read.  Blank lines and lines
X beginning with # will be treated as comments and ignored.
X
X
X This example compares the data in the file population.dat to a
X theoretical curve:
X
X         pop(x) = 103*exp((1965-x)/10)
X         plot [1960:1990] 'population.dat', pop(x)
X
X The file population.dat might contain:
X
X  # Gnu population in Antarctica since 1965
X  1965   103
X  1970   55
X  1975   34
X  1980   24
X  1985   10
X2 ranges
X This option specifies the region of the plot which will be displayed.
X
X Ranges may be provided on the 'plot' command line as synonyms for
X the 'set xrange' and 'set yrange' commands.
X
X Syntax:
X         [{dummy-var =} {xmin : xmax}] { [{ymin : ymax}] }
X
X Where dummy-var is the independent variable (the default is 'x',
X but this may be changed with the 'set dummy' command) and the min
X and max terms can be expressions or constants.
X
X Both the min and max terms are optional.  The ':' is also optional
X if neither a min nor a max term is specified.  This allows '[]' to
X be used as a null range specification.
X
X Specifying a Y range turns autoscaling OFF.
X
X
X Examples:
X
X This uses current ranges:
X         plot cos(x)
X
X This sets the xrange only:
X         plot [-10:30] sin(pi*x)/(pi*x)
X
X This is the same, but uses t as the dummy-variable:
X         plot [t = -10 :30]  sin(pi*t)/(pi*t)
X
X This sets both the x and yranges:
X         plot [-pi:pi] [-3:3]  tan(x), 1/x
X
X This sets only the yrange:
X         plot [] [-2:sin(5)*-8] sin(x)**besj0(x)
X
X This sets xmax and ymin only:
X         plot [:200] [-pi:]  exp(sin(x))
X2 style
X Plots may be displayed in one of three styles: 'lines', 'points', or
X 'impulses'.  The 'lines' style connects adjacent points with lines.
X The 'points' style displays a small symbol at each point.  The
X 'impulses' style displays a vertical line from the X axis to each
X point.
X
X Default styles are chosen with the 'set function style' and
X 'set data style' commands.
X
X Syntax:
X         with <style>
X
X Where <style> is one of 'lines', 'points', or 'impulses'.  These
X keywords may be abbreviated.
X
X
X Examples:
X
X This plots sin(x) with impulses:
X         plot sin(x) with impulses
X
X This plots sin(x) with points, cos(x) default:
X         plot [-9:30]  sin(x) w points, cos(x)
X
X This plots tan(x) with the default function style, "data.1" with lines:
X         plot [] [-2:5] tan(x), "data.1" with l
X
X This plots "leastsq.dat" with impulses:
X         plot 'leastsq.dat' w i
X1 print
X This command prints the value of <expression> to the screen.
X
X Syntax:
X         print <expression>
X
X See 'expressions'.
X1 quit
X 'quit' is a synonym for 'exit'.  See 'exit'.
X1 replot
X 'replot' repeats the last 'plot' command.  This can be useful for
X viewing a plot with different 'set' options, or when generating the
X same plot for several devices.
X1 save
X This command saves either user-defined functions, variables, or both
X to the specified file.
X
X Syntax:
X         save  {option} <filename>
X
X Where <option> is either 'functions' or 'variables'.  If no option is
X used GNUPLOT saves both functions and variables.
X
X 'save'd files are written in text format and may be read by the 'load'
X command.
X
X The filename must be enclosed in quotes.
X
X Examples:
X
X         save "work.gnu"
X         save functions 'func.dat'
X         save var 'var.dat'
X1 set-show
X Set or show various internal gnuplot settings.
X2 all
X The command 'show all' will display all the set-show options
X currently in effect.
X
X Syntax:
X         show all
X2 autoscale
X If autoscaling is set, the Y axis is automatically scaled to fit the
X range of the function or data being plotted.  If autoscaling is not
X set, the current Y range is used.  See 'set yrange'.
X
X Syntax:
X         set autoscale
X         set noautoscale
X         show autoscale
X2 dummy
X By default, GNUPLOT assumes that the independent variable is 'x' on
X the 'plot' command line.  'x' is called the dummy variable because
X it is just a notation to indicate the independent variable.  The
X 'set dummy' command changes this default dummy variable name.  For
X example, you may find it more convenient to call the dummy variable
X 't' when plotting time functions:
X
X         set dummy t
X         plot sin(t), cos(t)
X
X Syntax:
X         set dummy <dummy-var>
X         show dummy
X2 functions
X The 'show functions' command lists all user-defined functions and
X their definitions.
X
X Syntax:
X         show functions
X2 logscale
X Log scaling may be set on the X and/or Y axis.
X
X Syntax:
X         set logscale <axes>
X         set nologscale
X         show logscale
X
X Where <axes> is either 'x', 'y', or 'xy'.
X2 polar
X The 'set polar' command changes the meaning of the plot from
X rectangular coordinates to polar coordinates.  In polar
X coordinates, the dummy variable (x) is an angle.  The domain
X of this angle is changed from whatever it was to [0:2*pi].
X
X The command 'set nopolar' changes the meaning of the plot back
X to the default rectangular coordinate system.  The domain of
X x is changed from whatever it was to [-10:10].
X
X While in polar coordinates the meaning of an expression in x
X is really r = f(x), where x is an angle of rotation.  The plot,
X however, is plotted on a rectangular grid.  Thus the displayed
X ranges of x and y are rectanglar values, while the command
X 'set xrange' refers to polar values.
X
X Syntax:
X         set polar
X 	 set nopolar
X 	 show polar
X2 offsets
X The amount of the graph that the plot takes up may be controlled
X to some extent with the 'set offsets' command.  This command takes
X four arguments--left offset, right offset, top offset and bottom
X offset.  By default, each offset is 0.  Left and right offsets are
X given in units of the x axis, while top and bottom offsets are
X given in units of the y axis.  The plot of sin(x), displayed with
X offsets of 0, 0, 2, 2 will take up  1/3 of the displayed y axis.
X Offsets are particularly useful with polar coordinates as a means
X of compensating for aspect ratio distortion.
X
X Syntax:
X         set offsets <expr>, <expr>, <expr>, <expr>
X         show offsets
X2 output
X By default, plots are displayed to the standard output.  The
X 'set output' command redirects the displays to the specified file or
X device.
X
X Syntax:
X         set output {filename}
X         show output
X
X The filename must be enclosed in quotes.  If the filename is
X omitted, output will be sent to the standard output.
X2 samples
X The sampling rate of functions may be changed by the 'set samples'
X command.  By default, sampling is set to 160 points.  A higher
X sampling rate will produce more accurate plots, but will take
X longer.  In generating plots, GNUPLOT will use either the sampling
X rate set or the resolution of the current output device, whichever
X is lower.
X
X Syntax:
X         set samples <expression>
X         show samples
X2 style
X Plots may be displayed in one of three styles: 'lines', 'points', or
X 'impulses'.  The 'lines' style connects adjacent points with lines.
X The 'points' style displays a small symbol at each point.  The
X 'impulses' style displays a vertical line from the X axis to each
X point.
X
X Default styles are chosen with the 'set function style' and 'set
X data style' commands.  See 'plot' for information about how to
X override the default plotting style for individual functions.
X
X Syntax:
X         set function style <style>
X         set data style <style>
X         show function style
X         show data style
X
X Where style is either 'lines', 'points', or 'impulses'.
X2 terminal
X GNUPLOT supports many different graphics devices.  Use the 'set
X terminal' command to select the type of device for which GNUPLOT
X will produce output.   While your installation may not include all
X of these, the following were available in the source code at the
X time this help file was written:
X
X Machines:  IBM-PC's (ega, cga, hercules), ATT6300, CORONA325,
X            UNIXPC (att7300 or 3b1);
X Terminals: AED512, AED767, HP2623A, HP7580B, REGIS, SELENAR,
X            TEK40xx, BBN Bitgraph;
X Printers:  LASERJET1, LASERJET2, LASERJET3, POSTSCRIPT, QMS,
X            VECTRIX384;
X Other:     UNIXPLOT.
X
X Syntax:
X         set terminal {terminal-type}
X         show terminal
X
X If <terminal-type> is omitted, GNUPLOT will list the available
X terminal types.  <terminal-type> may be abbreviated.
X
X Use 'set output' to redirect this output to a file or device.
X2 variables
X The 'show variables' command lists all user-defined variables and
X their values.
X
X Syntax:
X         show variables
X2 version
X Show the current version of gnuplot.  This is the same text
X that appears when gnuplot starts up.  (There is no SET VERSION
X command, of course.)
X
X Syntax:
X 	SHOW VERSION
X2 xrange
X The 'set xrange' command sets the horizontal range which will be
X displayed.
X
X This range may also be specified on the 'plot' command line.
X
X Syntax:
X         set xrange [{xmin : xmax}]
X
X Where <xmin> and <xmax> terms are expressions or constants.
X
X Both the <xmin> and <xmax> terms are optional.
X2 yrange
X The 'set yrange' command sets the vertical range which will be
X displayed.  This command turns autoscaling OFF.
X
X This range may also be specified on the 'plot' command line.
X
X Syntax:
X         set yrange [{ymin : ymax}]
X
X Where <ymin> and <ymax> terms are expressions or constants.
X
X Both the <ymin> and <ymax> terms are optional.
X2 zero
X GNUPLOT will not plot a point if its imaginary part is greater in
X magnitude than the 'zero' threshold.  The default 'zero' value is
X 1e-8.
X
X Syntax:
X         set zero <expression>
X         show zero
X1 shell
X The 'shell' command spawns an interactive shell.  To return to
X GNUPLOT, type 'logout' if using VMS, 'exit' or your END-OF-FILE
X character if using Unix, or 'exit' if using MS-DOS.
X
X A single shell command may be spawned by preceding it with the !
X character ($ if using VMS) at the beginning of a command line.
X Control will return immediately to GNUPLOT after this command is
X executed.  For example,
X
X      ! dir
X
X prints a directory listing and then returns to GNUPLOT.
X1 start_up
X When GNUPLOT is run, it looks for an initialization file to load.
X This file is called '.gnuplot' on Unix systems, and 'GNUPLOT.INI' on
X other systems.  If this file is not found in the current directory,
X the program will look for it in your home directory (under MS-DOS, the
X environment variable GNUPLOT should contain the name of this
X directory).
X
X If this file is found, GNUPLOT executes the commands in this file.
X This is most useful for setting your terminal type and defining any
X functions or variables which you use often.  The variable 'pi' is
X already defined for you.
X1 substitution
X Command-line substitution is specified by a system command enclosed in
X backquotes (`).  This command is spawned and the output it produces
X replaces the name of the command (and backquotes) on the command line.
X
X Newlines in the output produced by the spawned command are replaced with
X blanks.
X
X Command-line substitution can be used anywhere on the GNUPLOT command
X line.
X
X
X Example:
X
X This will run the program 'leastsq' and substitute `leastsq` on the
X command line with its output:
X
X  f(x) = `leastsq`
X
X or, in VMS
X
X  f(x) = `run leastsq`
X1 user_defined
X You may define your own functions and variables.  User-defined
X functions and variables may be used anywhere.
X
X User-defined function syntax:
X     <function-name> ( <dummy-var> ) =  <expression>
X
X Where <expression> is defined in terms of <dummy-var>.
X
X User-defined variable syntax:
X     <variable-name> = <constant-expression>
X
X Examples:
X     w = 2
X     q = floor(tan(pi/2 - 0.1))
X     f(x) = sin(w*x)
X     sinc(x) = sin(pi*x)/(pi*x)
X     delta(t) = (t == 0)
X     ramp(t) = (t > 0) ? t : 0
X
X The variable 'pi' is already defined for you.
X
X See 'show functions' and 'show variables'.
END_OF_FILE
if test 19621 -ne `wc -c <'docs/gnuplot.hlp'`; then
    echo shar: \"'docs/gnuplot.hlp'\" unpacked with wrong size!
fi
# end of 'docs/gnuplot.hlp'
fi
echo shar: End of archive 6 \(of 7\).
cp /dev/null ark6isdone
MISSING=""
for I in 1 2 3 4 5 6 7 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 7 archives.
    rm -f ark[1-9]isdone
else
    echo You still need to unpack the following archives:
    echo "        " ${MISSING}
fi
##  End of shell archive.
exit 0
