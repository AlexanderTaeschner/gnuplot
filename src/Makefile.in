############################################################
#
# $Id: Makefile.in,v 1.50 1998/06/18 14:55:00 ddenholm Exp $
#
# GNUPLOT Makefile.in for autoconf (Unix X11 support)
# Adapted from makefile.unx by djm@gnu.ai.mit.edu
############################################################

# default target

all: @ERRORFIX@ gnuplot @GNUPLOT_X11@ @GNUPLOT_BE@ bf_test


# this tells GNU make not to export variables into the environment
# But other makes don't understand its significance, so it must
# not be the first target in the file. So it is here, before
# any variables are created, but after the default target
.NOEXPORT:

SHELL = @SHELL@

PACKAGE=@PACKAGE@
VERSION=@VERSION@

prefix = @prefix@
exec_prefix = @exec_prefix@
bindir = @bindir@
datadir = @datadir@
includedir = @includedir@
libdir = @libdir@
srcdir = @srcdir@
top_builddir = ..
top_srcdir = @top_srcdir@
VPATH = @srcdir@
@SET_MAKE@

HELPFILE=$(datadir)/gnuplot.gih

DESTDIR = 

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@

CC = @CC@
CPPFLAGS = @CPPFLAGS@
DEFS  = @DEFS@
INCLUDES = -I..
CFLAGS = @CFLAGS@
LDFLAGS = @LDFLAGS@

COMPILE = $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS)
LINK = $(CC) $(CFLAGS) $(LDFLAGS) -o $@

# This stuff is obsolete now. Use the appropriate configure options!
#
# Additional devices you can add.
# -DAPOLLO      Apollo Graphics Primitive Resource (window resize after replot)
# -DGPR         Apollo Graphics Primitive Resource (fixed-size window)
# -DCGI         SCO CGI
# -DIRIS        IRIS4D series computer
# -DSUN         Sun Microsystems Workstation
# -DLINUXVGA	Linux PC with SuperVGA library
# -DUNIXPC      unixpc (ATT 3b1 or ATT 7300)
# -DUNIXPLOT    unixplot
# -DGNUGRAPH    use GNU graphics version of UNIX plot library
#               This can only be used in combination with -DUNIXPLOT
# TERMFLAGS = @TERMFLAGS@

#  -lplot if you have -DUNIXPLOT in TERMFLAGS
#  -lsuntool -lsunwindow -lpixrect  if you have -DSUN in TERMFLAGS
#  -lgl_s if -DIRIS in TERMFLAGS
#  -lccgi if -DCGI in TERMFLAGS
#  -lvga if -DLINUXVGA in TERMFLAGS
TERMLIBS = @TERMLIBS@
TERMXLIBS = @TERMXLIBS@

LIBS = @LIBS@
XLIBS = @LIBRARIES_FOR_X@

# Where to send email about bugs and comments (locally)
EMAIL = bug-gnuplot@dartmouth.edu

# Lasergnu is a handy shell script for creating a plot from the
# command line and sending it directly to the printer. It currently
# supports PostScript and imagen printers, and probably would need
# tailoring to your site.
# Use lasergnu_install to install lasergnu.
# Use lasergnu_noinstall to not install lasergnu (default).
LASERGNU = @LASERGNU@

############################################################
# -DREADLINE:
#   If READLINE is defined, then command-line editing is supported.
#   Otherwise, your normal terminal editing is all you get.
#   Some machines will not support this, and they will turn this
#   option off (for example, apollos running SR10.2 or SR10.3 and
#   loaded with BSD4.3 instead of SYS5). Note: problems with
#   gnuplot prompts have been noted when this feature is selected
#   on IBM RS/6000 AIX, and compile errors are encountered on
#   Sequent Dynix 3 and Convex OS 9.0.
# -DNOCWDRC:
#   If NOCWDRC is defined, then any .gnuplot in the current directory
#   is not read on startup. This is a security consideration
#   especially for root users ( we recommend you define -DNOCWDRC ).
# -ISC22 to circumvent missing plots past the first on ISC 2.2

#  -DNO_MEMSET if you don't have memset()
#  -DHAVE_BZERO if you have bzero() instead and no memset().
#    This works only if the second argument to memset() is 0! 
#  -DNO_MEMCPY if you don't have memcpy()
#  -DHAVE_BCOPY if you have bcopy() instead and no memcpy()
#  -DGAMMA=foo if your gamma function is called foo(). Apollos and
#    Linux have lgamma(3m). The default is -DGAMMA=gamma.
#  -DHAVE_GETCWD if your unix uses getcwd() instead of getwd()
#    this is needed by HP-UX and Cray Unicos systems.
#  -DULTRIX_KLUDGE if you run X windows on Ultrix and experience the
#    "every other plot" problem.
#  -DCRIPPLED_SELECT if "select errors" are encountered with X. This
#    option is needed on SVR3 platforms with incomplete support for
#    the BSD select() system call
#  -DHAVE_LOCALE if your system uses the 'setlocale' function to
#    support foreign charactersets (currently only ISO8859-1).
#  -DSYSTEM_TIME to use the system-provided set of time routines -
#    in case the gnuplot routines in time.c misbehave
#  -Dunix is required to explicitly define "unix" for SCO and IBM
#          RS/6000 running AIX 3.2

#
# You probably don't need to change anything below here.
#

mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = ../config.h
CONFIG_CLEAN_FILES =

GZIP = --best
TAR = tar

####################################################################
#
# Definitions for macros used in makefile.all (updated automatically)
#
# Standard unix make does not support included makefiles.
# We inline the contents of makefile.all here
# it will be updated using a script whenever makefile.all is changed
# (resp, the plan is to generate this Makefile.in from Makefile.in.in
# via GNUMakefile)

# Please define
# O as the object extension
O=o
# T as the prefix for terminals (eg term/ or [.term])
T=$(top_srcdir)/term/
# N as the prefix for NeXT (eg NeXT/)
N=$(srcdir)/NeXT/
# B as the prefix for BeOS (eg beos/)
B=$(srcdir)/beos/
# P as the prefix for OS/2 (eg os2/)
P=$(srcdir)/os2/
# W as the prefix for Windows (eg win/)
W=$(srcdir)/win/

####################################################################
##makefile-all-begin
# makefile.all generated automatically by GNU make

# List of core object files except version.$(O)
COREOBJS = alloc.$(O) binary.$(O) bitmap.$(O) command.$(O) contour.$(O) \
datafile.$(O) eval.$(O) fit.$(O) graph3d.$(O) graphics.$(O) help.$(O) \
hidden3d.$(O) internal.$(O) interpol.$(O) matrix.$(O) misc.$(O) parse.$(O) \
plot.$(O) plot2d.$(O) plot3d.$(O) readline.$(O) scanner.$(O) set.$(O) \
show.$(O) specfun.$(O) standard.$(O) stdfn.$(O) term.$(O) time.$(O) \
util.$(O) util3d.$(O) variable.$(O)

# List of terminal driver sources
CORETERM = $(T)aed.trm $(T)ai.trm $(T)amiga.trm $(T)apollo.trm \
$(T)atariaes.trm $(T)atarivdi.trm $(T)be.trm $(T)cgi.trm $(T)cgm.trm \
$(T)corel.trm $(T)debug.trm $(T)djsvga.trm $(T)dumb.trm $(T)dxf.trm \
$(T)dxy.trm $(T)eepic.trm $(T)emxvga.trm $(T)epson.trm $(T)excl.trm \
$(T)fg.trm $(T)fig.trm $(T)gif.trm $(T)gnugraph.trm $(T)gpic.trm \
$(T)gpr.trm $(T)grass.trm $(T)hp26.trm $(T)hp2648.trm $(T)hp500c.trm \
$(T)hpgl.trm $(T)hpljii.trm $(T)hppj.trm $(T)imagen.trm $(T)iris4d.trm \
$(T)kyo.trm $(T)latex.trm $(T)linux.trm $(T)mac.trm $(T)metafont.trm \
$(T)mgr.trm $(T)mif.trm $(T)multitos.trm $(T)next.trm $(T)pbm.trm \
$(T)pc.trm $(T)pm.trm $(T)png.trm $(T)post.trm $(T)pslatex.trm \
$(T)pstricks.trm $(T)qms.trm $(T)regis.trm $(T)rgip.trm $(T)sun.trm \
$(T)t410x.trm $(T)table.trm $(T)tek.trm $(T)texdraw.trm $(T)tgif.trm \
$(T)tkcanvas.trm $(T)tpic.trm $(T)unixpc.trm $(T)unixplot.trm $(T)v384.trm \
$(T)vws.trm $(T)win.trm $(T)x11.trm $(T)xlib.trm

##makefile-all-end
####################################################################

####################################################################
# List of source files
# Used for making shar files, lint, and some dependencies.

CSOURCE = alloc.c binary.c bitmap.c command.c contour.c datafile.c eval.c \
	  fit.c graphics.c graph3d.c help.c hidden3d.c internal.c interpol.c \
	  matrix.c misc.c parse.c plot.c plot2d.c plot3d.c readline.c \
	  scanner.c set.c show.c specfun.c standard.c stdfn.c term.c time.c \
	  util.c util3d.c variable.c version.c

CSOURCE2 = bf_test.c gplt_x11.c

CSOURCE3 = amiga.c corplot.c ctrl87.c ctrl87.h os9.c strftime.c vms.c

HEADERS = alloc.h ansichek.h binary.h bitmap.h fit.h fnproto.h help.h \
	  matrix.h national.h plot.h protos.h setshow.h stdfn.h syscfg.h \
	  term.h variable.h

NEXTSRC  = $(N)Controller.h $(N)Controller.m $(N)GnuTerm.iconheader \
	   $(N)GnuTerm.tiff $(N)GnuTerm_main.m $(N)GnuView.h \
	   $(N)GnuView.m $(N)Makefile $(N)Makefile.postamble \
	   $(N)Makefile.preamble $(N)PB.gdbinit $(N)PB.project \
	   $(N)README.rtf $(N)bigger.tiff $(N)gnuviewController.h \
	   $(N)gnuviewController.m $(N)smaller.tiff \
	   $(N)English.lproj/GnuTerm.nib/data.classes \
	   $(N)English.lproj/GnuTerm.nib/data.nib \
	   $(N)English.lproj/gnuview.nib/bigger.tiff \
	   $(N)English.lproj/gnuview.nib/data.classes \
	   $(N)English.lproj/gnuview.nib/data.nib \
	   $(N)English.lproj/gnuview.nib/smaller.tiff

BEOSSRC = $(B)GPApp.cpp $(B)GPApp.h $(B)GPBitmap.cpp $(B)GPBitmap.h \
	  $(B)GPView.cpp $(B)GPView.h $(B)GPWindow.cpp $(B)GPWindow.h \
	  $(B)Makefile $(B)XStringList.cpp $(B)XStringList.h $(B)constants.h

OS2SRC = $(P)dialogs.c $(P)dialogs.h $(P)gclient.c $(P)gnuplot.ico \
	 $(P)gnupmdrv.c $(P)gnupmdrv.def $(P)gnupmdrv.h $(P)gnupmdrv.ipf \
	 $(P)gnupmdrv.rc $(P)print.c

WINDOWS = $(W)geticon.c $(W)pgnuplot.c $(W)wcommon.h $(W)wgnupl32.def \
	  $(W)wgnuplib.c $(W)wgnuplib.def $(W)wgnuplib.h $(W)wgnuplib.rc \
	  $(W)wgnuplot.def $(W)wgnuplot.hpj $(W)wgnuplot.mnu $(W)wgnuplot.rc \
	  $(W)wgraph.c $(W)winmain.c $(W)wmenu.c $(W)wpause.c $(W)wprinter.c \
	  $(W)wresourc.h $(W)wtext.c $(W)wtext.h

# Other files which need to go into the distribution
EXTRA_DIST = GNUmakefile Makefile.in Makefile.maint corgraph.asm errorfix.sh \
genopt.com gnuplot.def gnuplot.opt gnuplot.prj header.mac hrcgraph.asm \
intergra.x11 lasergnu lineproc.mac linkopt.vms linkopt.ztc makefile.all \
pcgraph.asm rgipgnu

#########################################################################
# Simple Dependencies
# (generate these automatically)
# - note that VMS requires space before and after the :

alloc.o: alloc.c plot.h ansichek.h stdfn.h syscfg.h protos.h alloc.h help.h
bf_test.o: bf_test.c ansichek.h stdfn.h syscfg.h binary.h alloc.h
binary.o: binary.c plot.h ansichek.h stdfn.h syscfg.h protos.h alloc.h \
	  binary.h
bitmap.o: bitmap.c plot.h ansichek.h stdfn.h syscfg.h protos.h alloc.h \
	  bitmap.h
command.o: command.c plot.h ansichek.h stdfn.h syscfg.h protos.h alloc.h \
	   setshow.h variable.h fit.h binary.h help.h
contour.o: contour.c plot.h ansichek.h stdfn.h syscfg.h protos.h alloc.h \
	   setshow.h variable.h
corplot.o: corplot.c
ctrl87.o: ctrl87.c ctrl87.h
datafile.o: datafile.c plot.h ansichek.h stdfn.h syscfg.h protos.h alloc.h \
	    fnproto.h binary.h setshow.h variable.h
eval.o: eval.c plot.h ansichek.h stdfn.h syscfg.h protos.h alloc.h
fit.o: fit.c plot.h ansichek.h stdfn.h syscfg.h protos.h alloc.h matrix.h \
	fit.h setshow.h variable.h
gplt_x11.o: gplt_x11.c plot.h ansichek.h stdfn.h syscfg.h protos.h alloc.h
graph3d.o: graph3d.c plot.h ansichek.h stdfn.h syscfg.h protos.h alloc.h \
	   setshow.h variable.h
graphics.o: graphics.c plot.h ansichek.h stdfn.h syscfg.h protos.h alloc.h \
	    setshow.h variable.h
help.o: help.c plot.h ansichek.h stdfn.h syscfg.h protos.h alloc.h help.h
hidden3d.o: hidden3d.c plot.h ansichek.h stdfn.h syscfg.h protos.h alloc.h \
	    setshow.h variable.h
internal.o: internal.c plot.h ansichek.h stdfn.h syscfg.h protos.h alloc.h \
	    fnproto.h
interpol.o: interpol.c plot.h ansichek.h stdfn.h syscfg.h protos.h alloc.h \
	    setshow.h variable.h
matrix.o: matrix.c fit.h plot.h ansichek.h stdfn.h syscfg.h protos.h alloc.h \
	  matrix.h
misc.o: misc.c plot.h ansichek.h stdfn.h syscfg.h protos.h alloc.h setshow.h \
	variable.h
parse.o: parse.c plot.h ansichek.h stdfn.h syscfg.h protos.h alloc.h help.h
plot.o: plot.c plot.h ansichek.h stdfn.h syscfg.h protos.h alloc.h fit.h \
	setshow.h variable.h fnproto.h
plot2d.o: plot2d.c plot.h ansichek.h stdfn.h syscfg.h protos.h alloc.h \
	  setshow.h variable.h fit.h binary.h help.h
plot3d.o: plot3d.c plot.h ansichek.h stdfn.h syscfg.h protos.h alloc.h \
	  setshow.h variable.h binary.h matrix.h help.h
readline.o: readline.c plot.h ansichek.h stdfn.h syscfg.h protos.h alloc.h
scanner.o: scanner.c plot.h ansichek.h stdfn.h syscfg.h protos.h alloc.h
set.o: set.c plot.h ansichek.h stdfn.h syscfg.h protos.h alloc.h setshow.h \
	variable.h national.h
show.o: show.c plot.h ansichek.h stdfn.h syscfg.h protos.h alloc.h setshow.h \
	variable.h
specfun.o: specfun.c plot.h ansichek.h stdfn.h syscfg.h protos.h alloc.h \
	   fnproto.h
standard.o: standard.c plot.h ansichek.h stdfn.h syscfg.h protos.h alloc.h \
	    setshow.h variable.h fnproto.h
stdfn.o: stdfn.c plot.h ansichek.h stdfn.h syscfg.h protos.h alloc.h
strftime.o: strftime.c plot.h ansichek.h stdfn.h syscfg.h protos.h alloc.h \
	    setshow.h variable.h
term.o: term.c plot.h ansichek.h stdfn.h syscfg.h protos.h alloc.h bitmap.h \
	setshow.h variable.h ../term/driver.h term.h $(CORETERM)
time.o: time.c plot.h ansichek.h stdfn.h syscfg.h protos.h alloc.h setshow.h \
	variable.h
util.o: util.c plot.h ansichek.h stdfn.h syscfg.h protos.h alloc.h setshow.h \
	variable.h
util3d.o: util3d.c plot.h ansichek.h stdfn.h syscfg.h protos.h alloc.h \
	  setshow.h variable.h
variable.o: variable.c plot.h ansichek.h stdfn.h syscfg.h protos.h alloc.h \
	    variable.h
version.o: version.c plot.h ansichek.h stdfn.h syscfg.h protos.h alloc.h
vms.o: vms.c plot.h ansichek.h stdfn.h syscfg.h protos.h alloc.h

# List of object files except version.o

OBJS = $(COREOBJS) @NEXTOBJS@

################################################################

install: all $(LASERGNU)
	$(mkinstalldirs) $(bindir)
	$(mkinstalldirs) $(datadir)
	$(INSTALL_PROGRAM) gnuplot $(bindir)/gnuplot
	@if test -f gnuplot_x11; then \
	  $(INSTALL_PROGRAM) gnuplot_x11 $(bindir)/gnuplot_x11; \
	fi
	@if test -f beos/gnuplot_be; then \
	  $(INSTALL_PROGRAM) beos/gnuplot_be $(bindir)/gnuplot_be; \
	fi
	@LINUXSUID@

lasergnu_install: lasergnu
	$(mkinstalldirs) $(bindir)
	$(INSTALL_SCRIPT) $(srcdir)/lasergnu $(bindir)/lasergnu

lasergnu_noinstall:

uninstall:
	-rm -f $(bindir)/gnuplot $(bindir)/gnuplot_x11 $(bindir)/gnuplot_be

################################################################
# Dependencies

.c.o:
	$(COMPILE) -c $<

gnuplot: $(OBJS) version.o
	$(LINK) $(OBJS) version.o $(TERMLIBS) $(TERMXLIBS) $(LIBS)

gnuplot_x11: gplt_x11.o stdfn.o
	$(LINK) gplt_x11.o stdfn.o $(XLIBS) $(LIBS)

$(B)gnuplot_be : 
	cd $(B) && make $(MFLAGS)

gnuplot_be: $(B)gnuplot_be

bf_test: bf_test.o binary.o alloc.o
	$(LINK) bf_test.o binary.o alloc.o $(LIBS)

errorfix: $(srcdir)/errorfix.sh
	$(srcdir)/errorfix.sh $(srcdir)
	touch errorfix

command.o: command.c fit.h help.h setshow.h
	$(COMPILE) -DHELPFILE=\"$(HELPFILE)\" -c $<

show.o: show.c plot.h setshow.h
	$(COMPILE) -DHELPFILE=\"$(HELPFILE)\" -DBINDIR=\"$(bindir)\" -c $<

term.o: term.c term.h $(CORETERM)
	$(COMPILE) -I../term -I$(top_srcdir)/term -c $<

version.o: version.c
	$(COMPILE) -DCONTACT=\"$(EMAIL)\" -c $<

$(COREOBJS) version.o bf_test.o : $(CONFIG_HEADER)

################################################################
# Autoconfig rules

Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status

################################################################
# Miscellaneous targets

SOURCES = $(CSOURCE) $(CSOURCE2) $(CSOURCE3) $(B) $(BEOSSRC) $(N) $(NEXTSRC) \
$(P) $(OS2SRC) $(W) $(WINDOWS)

DISTFILES = $(SOURCES) $(HEADERS) $(EXTRA_DIST)

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = src

distdir: $(DISTFILES)
	distdir=`cd $(distdir) && pwd`
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done

# Empty target
check:

clean:
	-rm -f gnuplot gnuplot_x11 bf_test *.o core *~
	-rm -f gnuplot.exe gnuplot_x11.exe bf_test.exe
	-cd beos && $(MAKE) $(MFLAGS) clean

mostlyclean: clean

distclean: clean
	-cd beos && $(MAKE) $(MFLAGS) distclean
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	@test "$(srcdir)" = "$(top_builddir)" || rm -rf docs term

realclean: distclean
	-rm -f TAGS docs/TAGS
