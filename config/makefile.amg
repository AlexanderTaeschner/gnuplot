#
# $Id: makefile.amg,v 1.6 1999/11/08 19:20:58 lhecking Exp $
#
# GNUPLOT Makefile for SAS/C 6.1 or better on the Amiga
#
# Makefile for use with SAS/C 6.50 or newer
#   on AmigaOS 2.0 and above
#
# last modification date: 19991029
#

#
# ***************** Begin of Configuration section ***************************
#

# Comment out the definition lines to disable the respective drivers
# Substitute the path names for the actual path where includes/libs reside

# GD (GIF) device driver
# requires GD library version 1.3 or 1.4 (not part of gnuplot)
# the library source code can be downloaded from
#  http://www.boutell.com/gd/
# if you can't find the required version, use the gnuplot
# distribution sites for download
#
#GD_DEF = def=HAVE_LIBGD
#GD_INCLUDE = IDIR=gd1.3
#GD_LIB = gd1.3/gd.lib

# PNG device driver
# requires PNG and Z libraries (not part of gnuplot)
# the canonical download sites for both libraries are
#  http://www.cdrom.com/pub/png/pngcode.html
#  http://www.cdrom.com/pub/infozip/zlib/
#
#PNG_DEF = def=HAVE_LIBPNG
#PNG_INCLUDE = IDIR=libpng-1.0.5
#PNG_LIB = libpng-1.0.5/png.lib
#Z_INCLUDE = IDIR=zlib-1.1.3
#Z_LIB = zlib-1.1.3/z.lib

CC = sc

# cpu type
# valid values are:
#  ANY (default; same as 68000) 68010 68020 68030 68040 68060 (new in 6.57)
CPU = CPU=ANY

# Floating point math type
# valid values are NOMATH (default) STANDARD FFP 68881 (same as 68882) IEEE
# other than the old version of this makefile, the link commands have
# been changed so that the MATH option also selects the proper math
# library to link with
MATH = MATH=IEEE

# Optimiser flags
OFLAGS = opt

# Defines; format is def=SYMBOL[=value]
DEFS = def=AMIGA_SC_6_1 def=ANSI_C def=HAVE_SYS_STAT_H def=HAVE_GETCWD def=HAVE_STRNICMP def=HAVE_VFPRINTF def=PIPES def=GP_INLINE=__inline $(GD_DEF) $(PNG_DEF)

# Other options; if you have SAS/C 6.57 or newer, you may wish to disable
# warning 317
COPTS = ign=304+306 #noerrhigh #errrexx

# Debug options
DEBUG = # Will be dbg=sf when called with smake -f makefile.amg debug
LNDBG = # Will be addsym when called with smake -f makefile.amg debug

# The directories where gnuplot and gnuplot.gih go, respectively
DEST     = C:
HELPDEST = S:

#
# ****************** End of Configuration section ****************************
# ********** No changes should be necessary beyond this point! ***************
#

#
# Miscellaneous setup
#

# Where related files reside
DOCDIR  = /docs
DEMODIR = /demo
TERMDIR = /term

# Merge compiler flags
CFLAGS = $(COPTS) $(CPU) $(MATH) $(OFLAGS) $(DEFS) $(DEBUG) DATA=f

# NOTE: I have disabled the compilation rule for .oo files as described
# below, because when linking with sc (not slink), all object
# files not ending in .o must be prefixed with the objname option!
#
# To simplify the handling of files that have grown so large that they
# must be compiled with the code=far option, the rules below have been
# set up. Now, if a file grows large, you only have to change its
# extension from .o to .oo, and the file will be compiled correctly.
# This must be done in the OBJS-variable below and in the corresponding 
# dependency-rule near the end of the file.
#
# Compilation rule for large files
#.c.oo:
#	$(CC) $(CFLAGS) code=f objname=$@ $<

all: gnuplot $(DEMODIR)/bf_test docs

# Normal compilation rule
.c.o:
	$(CC) $(CFLAGS) objname=$@ $<

graphics.o: graphics.c plot.h setshow.h
	$(CC) $(CFLAGS) code=f objname=$@ $<

set.o: set.c plot.h setshow.h
	$(CC) $(CFLAGS) code=f objname=$@ $<

term.o: term.c term.h plot.h setshow.h bitmap.h $(CSOURCE5) $(CSOURCE6) $(CSOURCE7)
	$(CC) $(CFLAGS) IDIR=$(TERMDIR) code=f $(GD_INCLUDE) $(PNG_INCLUDE) $(Z_INCLUDE) objname=$@ $<

OBJS = alloc.o amiga.o binary.o bitmap.o command.o contour.o datafile.o \
       dynarray.o eval.o fit.o graph3d.o graphics.o help.o hidden3d.o \
       history.o internal.o interpol.o matrix.o misc.o parse.o plot.o \
       plot2d.o plot3d.o save.o scanner.o set.o show.o specfun.o standard.o \
       stdfn.o tables.o term.o time.o unset.o util.o util3d.o variable.o \
       version.o

CSOURCE1 = alloc.c bf_test.c binary.c bitmap.c command.c set.c show.c
CSOURCE2 = help.c graphics.c graph3d.o internal.c history.c
CSOURCE3 = misc.c eval.c parse.c plot.c plot2d.c plot3d.c save.c scanner.c \
	standard.c stdfn.c tables.c variable.c
CSOURCE4 = bitmap.c term.c util.c util3d.c version.c interpol.c fit.c matrix.c
CSOURCE5 = $(TERMDIR)/aed.trm $(TERMDIR)/ai.trm $(TERMDIR)/amiga.trm \
	   $(TERMDIR)/apollo.trm $(TERMDIR)/atariaes.trm \
	   $(TERMDIR)/atarivdi.trm $(TERMDIR)/cgi.trm $(TERMDIR)/cgm.trm \
	   $(TERMDIR)/compact.c $(TERMDIR)/corel.trm $(TERMDIR)/debug.trm \
	   $(TERMDIR)/driver.h $(TERMDIR)/djsvga.trm $(TERMDIR)/dumb.trm \
	   $(TERMDIR)/dxf.trm $(TERMDIR)/dxy.trm $(TERMDIR)/eepic.trm \
	   $(TERMDIR)/emxvga.trm $(TERMDIR)/epson.trm $(TERMDIR)/excl.trm \
	   $(TERMDIR)/fg.trm $(TERMDIR)/fig.trm $(TERMDIR)/gif.trm \
	   $(TERMDIR)/gnugraph.trm
CSOURCE6 = $(TERMDIR)/gpic.trm $(TERMDIR)/gpr.trm $(TERMDIR)/grass.trm \
	   $(TERMDIR)/hp26.trm $(TERMDIR)/hp2648.trm $(TERMDIR)/hp500c.trm \
	   $(TERMDIR)/hpgl.trm $(TERMDIR)/hpljii.trm $(TERMDIR)/hppj.trm \
	   $(TERMDIR)/imagen.trm $(TERMDIR)/impcodes.h $(TERMDIR)/iris4d.trm \
	   $(TERMDIR)/kyo.trm $(TERMDIR)/latex.trm $(TERMDIR)/linux.trm \
	   $(TERMDIR)/mac.trm $(TERMDIR)/metafont.trm $(TERMDIR)/mgr.trm \
	   $(TERMDIR)/mif.trm $(TERMDIR)/multitos.trm $(TERMDIR)/next.trm \
	   $(TERMDIR)/object.h $(TERMDIR)/pbm.trm $(TERMDIR)/pc.trm
CSOURCE7 = $(TERMDIR)/pm.trm $(TERMDIR)/png.trm $(TERMDIR)/post.trm \
	   $(TERMDIR)/pslatex.trm $(TERMDIR)/pstricks.trm $(TERMDIR)/qms.trm \
	   $(TERMDIR)/regis.trm $(TERMDIR)/rgip.trm $(TERMDIR)/sun.trm \
	   $(TERMDIR)/t410x.trm $(TERMDIR)/table.trm $(TERMDIR)/tek.trm \
	   $(TERMDIR)/texdraw.trm $(TERMDIR)/tgif.trm $(TERMDIR)/tkcanvas.trm \
	   $(TERMDIR)/tpic.trm $(TERMDIR)/unixpc.trm $(TERMDIR)/unixplot.trm \
	   $(TERMDIR)/v384.trm $(TERMDIR)/vws.trm $(TERMDIR)/win.trm \
	   $(TERMDIR)/x11.trm $(TERMDIR)/xlib.trm
CSOURCE8 = contour.c specfun.c amiga.c dynarray.c
CORETERM = $(CSOURCE5) $(CSOURCE6) $(CSOURCE7)

gnuplot: $(OBJS)
	$(CC) $(CFLAGS) LINK TO $@ $(OBJS) $(PNG_LIB) $(Z_LIB) $(GD_LIB) $(LNDBG)

$(DEMODIR)/bf_test: bf_test.o binary.o alloc.o
	$(CC) $(CFLAGS) LINK TO $@ bf_test.o binary.o alloc.o
	@echo "*N*NRun bf_test in demo subdirectory to make binary demo files*N"

docs: gih

gih: $(DOCDIR)/gnuplot.gih

$(DOCDIR)/gnuplot.gih: $(DOCDIR)/doc2gih $(DOCDIR)/gnuplot.doc
	$(DOCDIR)/doc2gih $(DOCDIR)/gnuplot.doc $(DOCDIR)/gnuplot.gih

$(DOCDIR)/doc2gih: $(DOCDIR)/doc2gih.c $(DOCDIR)/termdoc.o
	$(CC) $(CFLAGS) IDIR= IDIR=$(TERMDIR) LINK TO $@ FROM $(DOCDIR)/doc2gih.c $(DOCDIR)/termdoc.o

html: $(DOCDIR)/gnuplot.html

$(DOCDIR)/gnuplot.html: $(DOCDIR)/gnuplot.texi $(DOCDIR)/gnuplot.doc
	$(MAKEINFO) --html -I$(srcdir) $(srcdir)/gnuplot.texi --no-split --output=$@

$(DOCDIR)/gnulot.tex: $(DOCDIR)/doc2tex $(DOCDIR)/gnuplot.doc
	$(DOCDIR)/doc2tex $(DOCDIR)/gnuplot.doc $@

$(DOCDIR)/doc2tex: $(DOCDIR)/doc2tex.c $(DOCDIR)/allterm.h $(DOCDIR)/termdoc.o
	$(CC) $(CFLAGS) def=ALL_TERM_DOC IDIR= IDIR=$(TERMDIR) LINK TO $@ FROM $(DOCDIR)/doc2tex.c $(DOCDIR)/termdoc.o

check: $(DOCDIR)/checkdoc $(DOCDIR)/gnuplot.doc
	$(DOCDIR)/checkdoc < $(DOCDIR)/gnuplot.doc

$(DOCDIR)/checkdoc: $(DOCDIR)/checkdoc.c $(DOCDIR)/allterm.h $(DOCDIR)/termdoc.o
	$(CC) $(CFLAGS) def=ALL_TERM_DOC IDIR= IDIR=$(TERMDIR) LINK TO $@ FROM $(DOCDIR)/checkdoc.c $(DOCDIR)/termdoc.o

$(DOCDIR)/allterm.h: $(CORETERM)
	join $(TERMDIR)/\#?.trm as $(DOCDIR)/allterm.h

clean:
	@-delete $(OBJS) bf_test.o quiet
	@-delete $(DOCDIR)/\#?.o $(DOCDIR)/\#?.lnk quiet

veryclean: clean
	@-delete $(DEMODIR)/binary[1-3] $(DEMODIR)/fit.log quiet
	@-delete bf_test gnuplot $(DOCDIR)/gnuplot.gih $(DOCDIR)/gnuplot.tex $(DOCDIR)/gnuplot.html quiet
	@-delete $(DOCDIR)/doc2gih $(DOCDIR)/doc2tex $(DOCDIR)/doc2html $(DOCDIR)/checkdoc quiet

install: gnuplot $(DOCDIR)/gnuplot.gih
	copy $(DOCDIR)/gnuplot.gih $(HELPDEST)
	copy gnuplot $(DEST)

debug:
	smake -f makefile.amg DEBUG=dbg=sf LNDBG=addsym OFLAGS= all

#
# Dependencies; do not edit!
#
alloc.o: alloc.c plot.h
amiga.o: amiga.c
bf_test.o: bf_test.c
binary.o: binary.c plot.h
bitmap.o: bitmap.c bitmap.h plot.h
command.o: command.c plot.h setshow.h help.h
contour.o: contour.c plot.h
datafile.o: datafile.c plot.h fnproto.h binary.h setshow.h
dynarray.o: dynarray.c dynarray.h alloc.h graphics.h plot.h
eval.o: eval.c plot.h
fit.o: fit.c fit.h matrix.h plot.h
graph3d.o: graph3d.c plot.h setshow.h
help.o: help.c plot.h help.h
hidden3d.o: hidden3d.c plot.h setshow.h
history.o: history.c gp_hist.h plot.h
internal.o: internal.c plot.h
interpol.o: interpol.c plot.h setshow.h
matrix.o: matrix.c matrix.h fit.h
misc.o: misc.c plot.h setshow.h help.h
parse.o: parse.c plot.h help.h
plot.o: plot.c plot.h setshow.h
plot2d.o: plot2d.c plot.h setshow.h fit.h binary.h help.h
plot3d.o: plot3d.c plot.h setshow.h binary.h help.h
save.o: save.c plot.h setshow.h
scanner.o: scanner.c plot.h
show.o: show.c plot.h setshow.h
specfun.o: specfun.c plot.h
standard.o: standard.c plot.h
stdfn.o: stdfn.c stdfn.h
tables.o: tables.c plot.h tables.h
time.o: time.c plot.h setshow.h
unset.o: unset.c plot.h setshow.h tables.h
util.o: util.c plot.h
util3d.o: util3d.c plot.h setshow.h
variable.o: variable.c plot.h variable.h
version.o: version.c
