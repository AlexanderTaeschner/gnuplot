#
# $Id: makefile.nt,v 1.26 2011/03/08 08:49:47 markisch Exp $
#
# GNUPLOT Makefile Microsoft Visual C++ and nmake on WinNT and Win95/98/..

# John Bollinger bbands@yahoo.com, 4 March 2002:
#   Added png support with zlib and libpng as subs of .\src
#     libpng and zlib can be downloaded from ftp://ftp.uu.net/graphics/png
#   Added pdf support with pdflib as a sub of .\src
#     pdflib can be downloaded from http://www.pdflib.com
#   Added MSC multi-thread support for compatibility with pdflib
# Bastian Maerkisch bmaerkisch@web.de:
#   Added support for binary version of the GD library (bgd.dll) 
#     gdlib can be downloaded from http://www.boutell.com/gd
#   Removed zlib and libpng again as they're already included in bgd.dll
# Hans-Bernhard Broeker: 
#   updated to current version of MSVC
#   undid silly name change for pgnuplot.exe, call console version gnuplot.exe instead
#   removed remainder of wgnuplot_pipes.exe support
#   isolated more configuration-dependent parts (gd, pdf, wx) to lines of their own,
#     so they can be turned on/off more easily.

#
# To compile with Visual C: 
#	optionally Download gdlib to ..\src\gdwin32
#	optionally Download pdflib to ..\src\pdflib and compile it if you choose the source
#
#	Start the Microsoft Visual C++ command shell (e.g. via link installed setup)
#	change to the gnuplot\src directory
#	Now run: 
#	  nmake -f ..\config\makefile.nt
#       You can also do it like this: 
#	  copy ..\config\makefile.nt makefile.nt
#         edit the copy to your liking
#         (if you don't have the optional libraries, you'll have to disable some parts)
#         nmake -f makefile.nt

# Choose help format: 
# for HTML help (.chm) this should be 1, for (.hlp) it should be 0  
HTML_HELP = 1

# directory for PostScript prolog and associated files
GNUPLOT_PS_DIR = share\\PostScript

# Similarly for javascript files for the canvas terminal:
GNUPLOT_JS_DIR = share\\js

# name of the help file
!IF "$(HTML_HELP)" == "1"
HELPFILE = wgnuplot.chm
!ELSE
HELPFILE = wgnuplot.hlp
!ENDIF

TOP = .

# /c  means don't link
# /I  means extra include directory
# /Fm means produce link map
# /Od means suppress optimizations (esp. for debug)
# /O2 mans optimize for speed
# /Zi mean prepare for codeview
# /G6 means optimize code for pentium pro
# /G5 means optimize code for pentium
# /G4 means optimize code for 486
# /G3 means optimize code for 386
# /MT means include multi-thread support
# /MD means include multi-thread support (DLL)

CC = cl
LD = link

# compiler flags
OPTIONS = /DUSE_MOUSE
OPTIONS = $(OPTIONS) /DHAVE_LIBGD /DHAVE_GD_GIF /DGIF_ANIMATION /DHAVE_GD_PNG /DHAVE_GD_JPEG /DHAVE_GD_TTF
OPTIONS = $(OPTIONS) /DHAVE_LIBPDF
OPTIONS = $(OPTIONS) /DGNUPLOT_HISTORY
!IF "$(HTML_HELP)" == "1"
OPTIONS = $(OPTIONS) /DWITH_HTML_HELP
!ENDIF

CBASEFLAGS = /EHsc /GR /MD /O2 /nologo
CFLAGS = $(CBASEFLAGS) /I$(TOP) /D_Windows /DWIN32 /DHAVE_CONFIG_H /D__MSC__ /DHELPFILE=\"$(HELPFILE)\" $(OPTIONS)
CONSOLE_CFLAGS = /DWGP_CONSOLE

!IF "$(PROCESSOR_ARCHITECTURE)" == "ALPHA"
MACHINE = $(PROCESSOR_ARCHITECTURE)
!ELSE
MACHINE = IX86
!ENDIF

# paths for external libs added here... 
LDFLAGS = /nologo /MACHINE:$(MACHINE) /MAP:GNUPLOT 
LDFLAGS += /libpath:..\src\pdflib\pdflib 
LDFLAGS += /libpath:..\src\gdwin32 

# ...and here.
# see other terminal defines in term.h
TERMFLAGS = /I..\\term /DGNUPLOT_PS_DIR=\"$(GNUPLOT_PS_DIR)\" -DGNUPLOT_JS_DIR=\"$(GNUPLOT_JS_DIR)\"
TERMFLAGS += /I..\\src\\pdflib\\pdflib 
TERMFLAGS += /I..\\src\\gdwin32 

HCWPATH=$(PROGRAMFILES)\help workshop\\
HHWPATH=$(PROGRAMFILES)\HTML Help Workshop\\

# macros for makefile.all

O=obj
T=..\\term\\
D=..\\docs\\
M=..\\demo\\

default: wgnuplot.exe $(HELPFILE) wgnuplot.mnu $(M)bf_test.exe pgnuplot.exe gnuplot.exe

!INCLUDE makefile.all

OBJS = $(COREOBJS) version.obj

WINOBJS = winmain.obj wgnuplib.obj wgraph.obj wprinter.obj wtext.obj \
	screenbuf.obj wpause.obj wmenu.obj gpexecute.obj

WINDOWS = makefile.win makefile.nt README.win win\wcommon.h \
	win\wgnuplib.c win\wgnuplib.def win\wgnuplib.h win\wgnuplib.rc \
	win\wgnuplot.def win\wgnuplot.hpj win\wgnuplot.mnu win\wgraph.c \
	win\winmain.c win\wmenu.c win\wpause.c win\wprinter.c \
	win\wresourc.h win\wtext.c win\wtext.h win\geticon.c \
	win\screenbuf.c win\screenbuf.h \
	$(D)doc2html.c $(D)doc2rtf.c $(T)win.trm win\grpicon.ico win\texticon.ico

ALL_CONSOLE_OBJS = $(OBJS:.obj=.cobj) $(WINOBJS:.obj=.cobj)

# default rules
.c.obj:
	$(CC) /c $(CFLAGS) $*.c

.c.cobj:
	$(CC) /c $(CFLAGS) $(CONSOLE_CFLAGS) $*.c /Fo$@

$(OBJS): config.h

linkopt1.msw: makefile.nt
	copy gnuplot.opt linkopt1.msw
	echo winmain >> linkopt1.msw
	echo gpexecute >> linkopt1.msw
	echo readline >> linkopt1.msw
	echo wgnuplib >> linkopt1.msw
	echo wtext >> linkopt1.msw
	echo screenbuf >> linkopt1.msw
	echo wmenu >> linkopt1.msw
	echo wpause >> linkopt1.msw
	echo wgraph >> linkopt1.msw
	echo wprinter >> linkopt1.msw
	echo kernel32.lib >> linkopt1.msw
	echo user32.lib >> linkopt1.msw
	echo gdi32.lib >> linkopt1.msw
	echo winspool.lib >> linkopt1.msw
	echo comdlg32.lib >> linkopt1.msw
	echo advapi32.lib >> linkopt1.msw
	echo shell32.lib >> linkopt1.msw
	echo msimg32.lib >> linkopt1.msw
!IF "$(HTML_HELP)" == "1"
	echo htmlhelp.lib >> linkopt1.msw
!ENDIF
	echo pdflib.lib >> linkopt1.msw
	echo bgd.lib >> linkopt1.msw
	echo wgnuplot.res >> linkopt1.msw

makefile.nt: ..\config\makefile.nt
	copy ..\config\makefile.nt makefile.nt

config.h: ..\config\config.nt
	copy ..\config\config.nt config.h

wgnuplot.exe: $(OBJS) $(WINOBJS) win\wgnuplot.def wgnuplot.res linkopt1.msw texticon.ico grpicon.ico
	$(LD) /subsystem:windows $(LDFLAGS) /out:wgnuplot.exe @linkopt1.msw

# rules

wgnuplot.res :  win\wgnuplot.rc win\wgnuplib.rc win\wresourc.h texticon.ico grpicon.ico
	rc /l 0x409 /fowgnuplot.res /i "win" /d "NDEBUG" /d WIN32 /d MSRC win\wgnuplot.rc

term.obj: term.c term.h plot.h setshow.h bitmap.h $(CORETERM)
	$(CC) /c $(CFLAGS) $(TERMFLAGS) term.c /Fo$@

term.cobj: term.c term.h plot.h setshow.h bitmap.h $(CORETERM)
	$(CC) /c $(CFLAGS) $(CONSOLE_CFLAGS) $(TERMFLAGS) term.c /Fo$@

winmain.obj: win\winmain.c win\wgnuplib.h win\wtext.h plot.h
	$(CC) /c $(CFLAGS) win\winmain.c /Fo$@

winmain.cobj: win\winmain.c win\wgnuplib.h win\wtext.h plot.h
	$(CC) /c $(CFLAGS) $(CONSOLE_CFLAGS) win\winmain.c /Fo$@

WINDEPS = win\wgnuplib.h win\wcommon.h win\wresourc.h win\screenbuf.h

wgnuplib.obj: win\wgnuplib.c $(WINDEPS)
	$(CC) /c $(CFLAGS) win\wgnuplib.c /Fo$@

wgnuplib.cobj: win\wgnuplib.c $(WINDEPS)
	$(CC) /c $(CFLAGS) $(CONSOLE_CFLAGS) win\wgnuplib.c /Fo$@

wmenu.obj: win\wmenu.c $(WINDEPS)
	$(CC) /c $(CFLAGS) win\wmenu.c /Fo$@

wmenu.cobj: win\wmenu.c $(WINDEPS)
	$(CC) /c $(CFLAGS) $(CONSOLE_CFLAGS) win\wmenu.c /Fo$@

wtext.obj: win\wtext.c $(WINDEPS)
	$(CC) /c $(CFLAGS) win\wtext.c /Fo$@

wtext.cobj: win\wtext.c $(WINDEPS)
	$(CC) /c $(CFLAGS) $(CONSOLE_CFLAGS) win\wtext.c /Fo$@

screenbuf.obj: win\screenbuf.c $(WINDEPS)
	$(CC) /c $(CFLAGS) win\screenbuf.c /Fo$@

screenbuf.cobj: win\screenbuf.c $(WINDEPS)
	$(CC) /c $(CFLAGS) $(CONSOLE_CFLAGS) win\screenbuf.c /Fo$@

wpause.obj: win\wpause.c $(WINDEPS)
	$(CC) /c $(CFLAGS) win\wpause.c /Fo$@

wpause.cobj: win\wpause.c $(WINDEPS)
	$(CC) /c $(CFLAGS) $(CONSOLE_CFLAGS) win\wpause.c /Fo$@

wprinter.obj: win\wprinter.c $(WINDEPS)
	$(CC) /c $(CFLAGS) win\wprinter.c /Fo$@

wprinter.cobj: win\wprinter.c $(WINDEPS)
	$(CC) /c $(CFLAGS) $(CONSOLE_CFLAGS) win\wprinter.c /Fo$@

wgraph.obj: win\wgraph.c $(WINDEPS)
	$(CC) /c $(CFLAGS) win\wgraph.c /Fo$@

wgraph.cobj: win\wgraph.c $(WINDEPS)
	$(CC) /c $(CFLAGS) $(CONSOLE_CFLAGS) win\wgraph.c /Fo$@

wgnuplot.mnu: win\wgnuplot.mnu
	copy win\wgnuplot.mnu wgnuplot.mnu

pgnuplot.exe: win\pgnuplot.c
	$(CC) $(CBASEFLAGS) /I$(TOP) win\pgnuplot.c /Fe$@ /link version.obj user32.lib

gnuplot.exe: $(ALL_CONSOLE_OBJS) win\wgnuplot.def wgnuplot.res texticon.ico grpicon.ico
	$(LD) /subsystem:console $(LDFLAGS) /out:$@ @<<
$(ALL_CONSOLE_OBJS)
kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib
advapi32.lib shell32.lib ole32.lib oleaut32.lib comctl32.lib
msimg32.lib
htmlhelp.lib
glib-2.0.lib gobject-2.0.lib gmodule-2.0.lib
cairo.lib pango-1.0.lib pangocairo-1.0.lib
wxmsw28.lib wxtiff.lib
gd.lib jpeg.lib png.lib
wgnuplot.res
<<

# extract icons from wgnuplot.rc
texticon.ico: grpicon.ico

grpicon.ico: geticon.exe win\wgnuplot.rc
	geticon win\wgnuplot.rc

geticon.exe: win\geticon.c
	$(CC) /DMSDOS /F 5000 /W1 win\geticon.c
!IF "$(HTML_HELP)" == "1"
$(HELPFILE): doc2html.exe $(D)gnuplot.doc gnuplot.exe
	doc2html $(D)gnuplot.doc $(D)windows\\
	cd $(D)
	-..\src\gnuplot.exe -e "winhelp=1" $(D)plotstyles.gnu
	cd ..\src
	-"$(HHWPATH)hhc" $(D)windows\wgnuplot.hhp
	if exist $(D)windows\wgnuplot.chm copy $(D)windows\wgnuplot.chm .
!ELSE
# convert gnuplot.doc to gnuplot.rtf
$(HELPFILE): doc2rtf.exe $(D)gnuplot.doc win\wgnuplot.hpj
	doc2rtf $(D)gnuplot.doc win\gnuplot.rtf
	"$(HCWPATH)hcw" /c /e win\wgnuplot.hpj
	if exist win\wgnuplot.hlp copy win\wgnuplot.hlp .
!ENDIF

doc2html.exe: $(D)windows\doc2html.c $(D)termdoc.c $(D)xref.c version.obj
	$(CC) $(CFLAGS) /F 5000 /W1 /I. /DWINDOWS_NO_GUI /I$(D) /I$(T) -Fedoc2html.exe $(D)windows\doc2html.c $(D)termdoc.c $(D)xref.c version.obj

doc2rtf.exe: $(D)doc2rtf.c $(D)termdoc.c $(D)xref.c
	$(CC) $(CFLAGS) /F 5000 /W1 /I. /DWINDOWS_NO_GUI /I$(D) /I$(T) -Fedoc2rtf.exe $(D)doc2rtf.c $(D)termdoc.c $(D)xref.c

#make binary demo files
$(M)bf_test.exe : bf_test.c dbinary.obj alloc.obj
	$(CC) $(CFLAGS) /F 5000 /W1 /DWINDOWS_NO_GUI /Fe$(M)bf_test.exe bf_test.c dbinary.obj alloc.obj
	cd ..\demo
	bf_test
	cd ..\src

# _Windows causes wtext.h to define fread() etc
dbinary.obj: binary.c
		$(CC) /c $(CFLAGS) /U_Windows /F 5000 /W1 /Fodbinary.obj binary.c

# clean up temporary files
clean:
	if exist *.obj del *.obj
	if exist *.cobj del *.cobj
	if exist *.ico del *.ico
	if exist wgnuplot.res del wgnuplot.res
	if exist win\gnuplot.rtf del win\gnuplot.rtf
	if exist ..\demo\bf_test.exe del ..\demo\bf_test.exe
	if exist linkopt1.msw del linkopt1.msw
	if exist doc2html.exe del doc2html.exe
	if exist doc2rtf.exe del doc2rtf.exe
	if exist geticon.exe del geticon.exe
	if exist GNUPLOT del GNUPLOT

veryclean: clean
	if exist wgnuplot.exe del wgnuplot.exe
	if exist wgnuplot.chm del wgnuplot.chm
	if exist wgnuplot.hlp del wgnuplot.hlp
	if exist wgnuplot.mnu del wgnuplot.mnu
	if exist pgnuplot.exe del pgnuplot.exe
	if exist gnuplot.exe del gnuplot.exe
	if exist ..\demo\binary1 del ..\demo\binary1
	if exist ..\demo\binary2 del ..\demo\binary2
	if exist ..\demo\binary3 del ..\demo\binary3
	if exist ..\demo\fit.log del ..\demo\fit.log
	if exist ..\demo\soundfit.par del ..\demo\soundfit.par
	if exist config.h del config.h
	if exist makefile.nt del makefile.nt
	if exist *.manifest del *.manifest

install: default
	if not exist $(DESTDIR) mkdir $(DESTDIR)
	if not exist $(DESTDIR)\bin mkdir $(DESTDIR)\bin
	copy /Y wgnuplot.exe $(DESTDIR)\bin\wgnuplot.exe
	copy /Y win\wgnuplot.mnu $(DESTDIR)\bin\wgnuplot.mnu
	if exist wgnuplot.chm copy /Y wgnuplot.chm $(DESTDIR)\bin\wgnuplot.chm
	if exist wgnuplot.hlp copy /Y wgnuplot.hlp $(DESTDIR)\bin\wgnuplot.hlp
	copy /Y pgnuplot.exe $(DESTDIR)\bin\pgnuplot.exe
	copy /Y gnuplot.exe $(DESTDIR)\bin\gnuplot.exe
	if not exist $(DESTDIR)\$(GNUPLOT_PS_DIR) mkdir $(DESTDIR)\$(GNUPLOT_PS_DIR)
	xcopy /Y ..\term\PostScript\*.ps $(DESTDIR)\$(GNUPLOT_PS_DIR)
	if not exist $(DESTDIR)\$(GNUPLOT_JS_DIR) mkdir $(DESTDIR)\$(GNUPLOT_JS_DIR)
	xcopy /Y ..\term\js\*.* $(DESTDIR)\$(GNUPLOT_JS_DIR)
	for %f in (BUGS README FAQ Copyright NEWS) do copy ..\%f $(DESTDIR)\%f
	if not exist $(DESTDIR)\share\gnuplot\demo mkdir $(DESTDIR)\share\gnuplot\demo
	xcopy /Y ..\demo $(DESTDIR)\share\gnuplot\demo
