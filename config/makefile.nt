#
# $Id: makefile.nt,v 1.28 2011/03/11 20:46:03 markisch Exp $
#
# GNUPLOT Makefile Microsoft Visual C++ 2005 or newer

# John Bollinger bbands@yahoo.com, 4 March 2002:
#   Added png support with zlib and libpng as subs of .\src
#     libpng and zlib can be downloaded from ftp://ftp.uu.net/graphics/png
#   Added pdf support with pdflib as a sub of .\src
#     pdflib can be downloaded from http://www.pdflib.com
#   Added MSC multi-thread support for compatibility with pdflib
# Bastian Maerkisch bmaerkisch@web.de:
#   Added support for binary version of the GD library (bgd.dll) 
#     gdlib can be downloaded from http://www.libgd.org/
#     Development of libgd seems to have stalled: 
#     Latest binary build can be found at http://www.libgd.org/releases/gd-latest-win32.zip
#     As of March 2011 this is version 2.0.34.
#   Removed zlib and libpng again as they're already included in bgd.dll
# Hans-Bernhard Broeker: 
#   updated to current version of MSVC
#   undid silly name change for pgnuplot.exe, call console version gnuplot.exe instead
#   removed remainder of wgnuplot_pipes.exe support
#   isolated more configuration-dependent parts (gd, pdf, wx) to lines of their own,
#     so they can be turned on/off more easily.

#
# To compile with Visual C: 
#	Optionally download gdlib to ..\src\gdwin32
#	Optionally download pdflib to ..\src\pdflib and compile it if you choose the source
#
#	Start the Microsoft Visual C++ command shell (e.g. via link installed setup)
#	change to the gnuplot\src directory
#	Now run: 
#	  nmake -f ..\config\makefile.nt
#       You can also do it like this: 
#	  copy ..\config\makefile.nt makefile.nt
#         edit the copy to your liking
#         (if you don't have the optional libraries, you'll have to disable some parts)
#         nmake -f makefile.nt

# Compilation options, disable by setting to zero
# Is libgd available? (required by terminal png/jpeg/gif)?
GDLIB = 0
# Is pdflib available? (required by terminal pdf)
PDFLIB = 0
# Build wxt terminal? (required GTK, wxWidgets, cairo and pango libraries)
# See http://wiki.wxwidgets.org/Microsoft_Visual_C%2B%2B_Guide
#     http://wiki.wxwidgets.org/Visual_Studio_2008_%289.0%29
WXT = 0
# Choose help format: 
# for HTML help (.chm) this should be 1, for (.hlp) it should be 0  
HTML_HELP = 1

TOP = .

# directory for PostScript prolog and associated files
GNUPLOT_PS_DIR = share\\PostScript

# Similarly for javascript files for the canvas terminal:
GNUPLOT_JS_DIR = share\\js

#CC = cl
LD = link

# compiler flags
# /I  means extra include directory
# /Fm means produce link map
# /Od means suppress optimizations (esp. for debug)
# /O2 mans optimize for speed
# /Zi means prepare for codeview
# /MD means include multi-thread support (DLL)
CBASEFLAGS = /EHsc /GR /MD /O2 /nologo
CFLAGS = $(CBASEFLAGS) /I$(TOP) /D_Windows /DWIN32 /DHAVE_CONFIG_H /D__MSC__ /DHELPFILE=\"$(HELPFILE)\" $(OPTIONS)
CONSOLE_CFLAGS = /DWGP_CONSOLE
OPTIONS = /DUSE_MOUSE
OPTIONS = $(OPTIONS) /DGNUPLOT_HISTORY

# flags for terminals
# see other terminal defines in term.h
TERMFLAGS = /I..\\term /DGNUPLOT_PS_DIR=\"$(GNUPLOT_PS_DIR)\" /DGNUPLOT_JS_DIR=\"$(GNUPLOT_JS_DIR)\"

# linker flags, append paths for external libs later
LDFLAGS = /nologo /MACHINE:$(MACHINE)
COMMONLIBS = kernel32.lib user32.lib gdi32.lib winspool.lib \
             comdlg32.lib comctl32.lib advapi32.lib shell32.lib msimg32.lib
CONSOLELIBS = ole32.lib oleaut32.lib comctl32.lib

!IF "$(GDLIB)" == "1"
OPTIONS = $(OPTIONS) /DHAVE_LIBGD /DHAVE_GD_GIF /DGIF_ANIMATION /DHAVE_GD_PNG /DHAVE_GD_JPEG /DHAVE_GD_TTF
OPTIONS = $(OPTIONS) /I..\src\gdwin32\include
LDFLAGS = $(LDFLAGS) /libpath:..\src\gdwin32\lib
#TERMFLAGS = $(TERMFLAGS) /I..\src\gdwin32\include
!ENDIF

!IF "$(PDFLIB)" == "1"
OPTIONS = $(OPTIONS) /DHAVE_LIBPDF
LDFLAGS = $(LDFLAGS) /libpath:..\src\pdflib\pdflib 
TERMFLAGS = $(TERMFLAGS) /I..\src\pdflib\pdflib 
!ENDIF

!IF "$(WXT)" == "1"
WXTLIBS = glib-2.0.lib gobject-2.0.lib gmodule-2.0.lib \
	cairo.lib pango-1.0.lib pangocairo-1.0.lib \
	wxmsw28.lib wxtiff.lib
!ENDIF

!IF "$(HTML_HELP)" == "1"
HELPFILE = wgnuplot.chm
OPTIONS = $(OPTIONS) /DWITH_HTML_HELP
HHWPATH=$(PROGRAMFILES)\HTML Help Workshop\\
!ELSE
HELPFILE = wgnuplot.hlp
HCWPATH=$(PROGRAMFILES)\help workshop\\
!ENDIF

!IF "$(PROCESSOR_ARCHITECTURE)" == "ALPHA"
MACHINE = $(PROCESSOR_ARCHITECTURE)
!ELSE
MACHINE = IX86
!ENDIF

# macros for makefile.all

O=obj
T=..\\term\\
D=..\\docs\\
M=..\\demo\\

default: wgnuplot.exe $(HELPFILE) wgnuplot.mnu $(M)bf_test.exe pgnuplot.exe gnuplot.exe

!INCLUDE makefile.all

OBJS = $(COREOBJS) version.obj

WINOBJS = winmain.obj wgnuplib.obj wgraph.obj wprinter.obj wtext.obj \
	screenbuf.obj wpause.obj wmenu.obj gpexecute.obj

ALL_CONSOLE_OBJS = $(OBJS:.obj=.cobj) $(WINOBJS:.obj=.cobj)

# default rules
.c.obj:
	$(CC) /c $(CFLAGS) $*.c

.c.cobj:
	$(CC) /c $(CFLAGS) $(CONSOLE_CFLAGS) $*.c /Fo$@

$(OBJS): config.h

makefile.nt: ..\config\makefile.nt
	copy ..\config\makefile.nt makefile.nt

config.h: ..\config\config.nt
	copy ..\config\config.nt config.h

wgnuplot.exe: $(OBJS) $(WINOBJS) wgnuplot.res linkopt-w.msw texticon.ico grpicon.ico
	$(LD) /subsystem:windows $(LDFLAGS) /map:wgnuplot.map /out:$@ @linkopt-w.msw
!IF "$(GDLIB)" == "1"
	copy gdwin32\bin\bgd.dll .
!ENDIF

gnuplot.exe: $(ALL_CONSOLE_OBJS) wgnuplot.res linkopt-c.msw texticon.ico grpicon.ico
	$(LD) /subsystem:console $(LDFLAGS) /map:wgnuplot.map /out:$@ @linkopt-c.msw
!IF "$(GDLIB)" == "1"
	copy gdwin32\bin\bgd.dll .
!ENDIF

pgnuplot.exe: win\pgnuplot.c
	$(CC) $(CBASEFLAGS) /I$(TOP) win\pgnuplot.c /Fe$@ /link version.obj user32.lib

linkopt-w.msw: makefile.nt
	echo $(OBJS) > linkopt-w.msw
	echo $(WINOBJS) >> linkopt-w.msw
	echo $(COMMONLIBS) >> linkopt-w.msw
	echo wgnuplot.res >> linkopt-w.msw
!IF "$(HTML_HELP)" == "1"
	echo htmlhelp.lib >> linkopt-w.msw
!ENDIF
!IF "$(GDLIB)" == "1"
	echo bgd.lib >> linkopt-w.msw
!ENDIF
!IF "$(PDFLIB)" == "1"
	echo pdflib.lib >> linkopt-w.msw
!ENDIF
!IF "$(WXT)" == "1"
	echo $(WXTLIBS) >> linkopt-w.msw
!ENDIF

linkopt-c.msw: makefile.nt
	echo $(ALL_CONSOLE_OBJS) > linkopt-c.msw
	echo $(COMMONLIBS) >> linkopt-c.msw
	echo $(CONSOLELIBS) >> linkopt-c.msw
	echo wgnuplot.res >> linkopt-c.msw
!IF "$(HTML_HELP)" == "1"
	echo htmlhelp.lib >> linkopt-c.msw
!ENDIF
!IF "$(GDLIB)" == "1"
	echo bgd.lib >> linkopt-c.msw
!ENDIF
!IF "$(PDFLIB)" == "1"
	echo pdflib.lib >> linkopt-c.msw
!ENDIF
!IF "$(WXT)" == "1"
	echo $(WXTLIBS) >> linkopt-c.msw
!ENDIF

# rules

wgnuplot.res :  win\wgnuplot.rc win\wgnuplib.rc win\wresourc.h texticon.ico grpicon.ico
	rc /l 0x409 /fowgnuplot.res /i "win" /d "NDEBUG" /d WIN32 /d MSRC win\wgnuplot.rc

term.obj: term.c term.h plot.h setshow.h bitmap.h $(CORETERM)
	$(CC) /c $(CFLAGS) $(TERMFLAGS) term.c /Fo$@

term.cobj: term.c term.h plot.h setshow.h bitmap.h $(CORETERM)
	$(CC) /c $(CFLAGS) $(CONSOLE_CFLAGS) $(TERMFLAGS) term.c /Fo$@

winmain.obj: win\winmain.c win\wgnuplib.h win\wtext.h plot.h
	$(CC) /c $(CFLAGS) win\winmain.c /Fo$@

winmain.cobj: win\winmain.c win\wgnuplib.h win\wtext.h plot.h
	$(CC) /c $(CFLAGS) $(CONSOLE_CFLAGS) win\winmain.c /Fo$@

WINDEPS = win\wgnuplib.h win\wcommon.h win\wresourc.h win\screenbuf.h

wgnuplib.obj: win\wgnuplib.c $(WINDEPS)
	$(CC) /c $(CFLAGS) win\wgnuplib.c /Fo$@

wgnuplib.cobj: win\wgnuplib.c $(WINDEPS)
	$(CC) /c $(CFLAGS) $(CONSOLE_CFLAGS) win\wgnuplib.c /Fo$@

wmenu.obj: win\wmenu.c $(WINDEPS)
	$(CC) /c $(CFLAGS) win\wmenu.c /Fo$@

wmenu.cobj: win\wmenu.c $(WINDEPS)
	$(CC) /c $(CFLAGS) $(CONSOLE_CFLAGS) win\wmenu.c /Fo$@

wtext.obj: win\wtext.c $(WINDEPS)
	$(CC) /c $(CFLAGS) win\wtext.c /Fo$@

wtext.cobj: win\wtext.c $(WINDEPS)
	$(CC) /c $(CFLAGS) $(CONSOLE_CFLAGS) win\wtext.c /Fo$@

screenbuf.obj: win\screenbuf.c $(WINDEPS)
	$(CC) /c $(CFLAGS) win\screenbuf.c /Fo$@

screenbuf.cobj: win\screenbuf.c $(WINDEPS)
	$(CC) /c $(CFLAGS) $(CONSOLE_CFLAGS) win\screenbuf.c /Fo$@

wpause.obj: win\wpause.c $(WINDEPS)
	$(CC) /c $(CFLAGS) win\wpause.c /Fo$@

wpause.cobj: win\wpause.c $(WINDEPS)
	$(CC) /c $(CFLAGS) $(CONSOLE_CFLAGS) win\wpause.c /Fo$@

wprinter.obj: win\wprinter.c $(WINDEPS)
	$(CC) /c $(CFLAGS) win\wprinter.c /Fo$@

wprinter.cobj: win\wprinter.c $(WINDEPS)
	$(CC) /c $(CFLAGS) $(CONSOLE_CFLAGS) win\wprinter.c /Fo$@

wgraph.obj: win\wgraph.c $(WINDEPS)
	$(CC) /c $(CFLAGS) win\wgraph.c /Fo$@

wgraph.cobj: win\wgraph.c $(WINDEPS)
	$(CC) /c $(CFLAGS) $(CONSOLE_CFLAGS) win\wgraph.c /Fo$@

wgnuplot.mnu: win\wgnuplot.mnu
	copy win\wgnuplot.mnu wgnuplot.mnu

# extract icons from wgnuplot.rc
texticon.ico: grpicon.ico

grpicon.ico: geticon.exe win\wgnuplot.rc
	geticon win\wgnuplot.rc

geticon.exe: win\geticon.c
	$(CC) /DMSDOS /F 5000 /W1 win\geticon.c

!IF "$(HTML_HELP)" == "1"
$(HELPFILE): doc2html.exe $(D)gnuplot.doc gnuplot.exe
	doc2html $(D)gnuplot.doc $(D)windows\\
	cd $(D)
	-..\src\gnuplot.exe -e "winhelp=1" $(D)plotstyles.gnu
	cd ..\src
	-"$(HHWPATH)hhc" $(D)windows\wgnuplot.hhp
	if exist $(D)windows\wgnuplot.chm copy $(D)windows\wgnuplot.chm .
!ELSE
# convert gnuplot.doc to gnuplot.rtf
$(HELPFILE): doc2rtf.exe $(D)gnuplot.doc win\wgnuplot.hpj
	doc2rtf $(D)gnuplot.doc win\gnuplot.rtf
	"$(HCWPATH)hcw" /c /e win\wgnuplot.hpj
	if exist win\wgnuplot.hlp copy win\wgnuplot.hlp .
!ENDIF

doc2html.exe: $(D)windows\doc2html.c $(D)termdoc.c $(D)xref.c version.obj
	$(CC) $(CFLAGS) /F 5000 /W1 /I. /DWINDOWS_NO_GUI /I$(D) /I$(T) -Fedoc2html.exe $(D)windows\doc2html.c $(D)termdoc.c $(D)xref.c version.obj

doc2rtf.exe: $(D)doc2rtf.c $(D)termdoc.c $(D)xref.c
	$(CC) $(CFLAGS) /F 5000 /W1 /I. /DWINDOWS_NO_GUI /I$(D) /I$(T) -Fedoc2rtf.exe $(D)doc2rtf.c $(D)termdoc.c $(D)xref.c

#make binary demo files
$(M)bf_test.exe : bf_test.c dbinary.obj alloc.obj
	$(CC) $(CFLAGS) /F 5000 /W1 /DWINDOWS_NO_GUI /Fe$(M)bf_test.exe bf_test.c dbinary.obj alloc.obj
	cd ..\demo
	bf_test
	cd ..\src

# _Windows causes wtext.h to define fread() etc
dbinary.obj: binary.c
		$(CC) /c $(CFLAGS) /U_Windows /F 5000 /W1 /Fodbinary.obj binary.c

# clean up temporary files
clean:
	if exist *.obj del *.obj
	if exist *.cobj del *.cobj
	if exist *.ico del *.ico
	if exist wgnuplot.res del wgnuplot.res
	if exist win\gnuplot.rtf del win\gnuplot.rtf
	if exist ..\demo\bf_test.exe del ..\demo\bf_test.exe
	if exist linkopt-w.msw del linkopt-w.msw
	if exist linkopt-c.msw del linkopt-c.msw
	if exist doc2html.exe del doc2html.exe
	if exist doc2rtf.exe del doc2rtf.exe
	if exist geticon.exe del geticon.exe
	if exist GNUPLOT del GNUPLOT

veryclean: clean
	if exist wgnuplot.exe del wgnuplot.exe
	if exist wgnuplot.chm del wgnuplot.chm
	if exist wgnuplot.hlp del wgnuplot.hlp
	if exist wgnuplot.mnu del wgnuplot.mnu
	if exist pgnuplot.exe del pgnuplot.exe
	if exist gnuplot.exe del gnuplot.exe
	if exist ..\demo\binary1 del ..\demo\binary1
	if exist ..\demo\binary2 del ..\demo\binary2
	if exist ..\demo\binary3 del ..\demo\binary3
	if exist ..\demo\fit.log del ..\demo\fit.log
	if exist ..\demo\soundfit.par del ..\demo\soundfit.par
	if exist config.h del config.h
	if exist makefile.nt del makefile.nt
	if exist *.manifest del *.manifest

install: default
	if not exist $(DESTDIR) mkdir $(DESTDIR)
	if not exist $(DESTDIR)\bin mkdir $(DESTDIR)\bin
	copy /Y wgnuplot.exe $(DESTDIR)\bin\wgnuplot.exe
	copy /Y win\wgnuplot.mnu $(DESTDIR)\bin\wgnuplot.mnu
	if exist wgnuplot.chm copy /Y wgnuplot.chm $(DESTDIR)\bin\wgnuplot.chm
	if exist wgnuplot.hlp copy /Y wgnuplot.hlp $(DESTDIR)\bin\wgnuplot.hlp
	copy /Y pgnuplot.exe $(DESTDIR)\bin\pgnuplot.exe
	copy /Y gnuplot.exe $(DESTDIR)\bin\gnuplot.exe
	if not exist $(DESTDIR)\$(GNUPLOT_PS_DIR) mkdir $(DESTDIR)\$(GNUPLOT_PS_DIR)
	xcopy /Y ..\term\PostScript\*.ps $(DESTDIR)\$(GNUPLOT_PS_DIR)
	if not exist $(DESTDIR)\$(GNUPLOT_JS_DIR) mkdir $(DESTDIR)\$(GNUPLOT_JS_DIR)
	xcopy /Y ..\term\js\*.* $(DESTDIR)\$(GNUPLOT_JS_DIR)
	for %f in (BUGS README FAQ Copyright NEWS) do copy ..\%f $(DESTDIR)\%f
	if not exist $(DESTDIR)\share\gnuplot\demo mkdir $(DESTDIR)\share\gnuplot\demo
	xcopy /Y ..\demo $(DESTDIR)\share\gnuplot\demo
