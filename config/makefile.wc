#
# $Id: makefile.wc,v 1.5 1999/12/01 22:07:58 lhecking Exp $
#
# GNUPLOT Makefile for Watcom C
#
# Modified from the TurboC makefile by Aurel Gabris
# Heavily modified and updated for OpenWatcom 1.2 by HBB
#
# the makefile does longer depends on a linker options file.
# this file will be created as needed.                          (AL 07/17/92)

# where to place gnuplot.gih helpfile
HELPFILE = gnuplot.gih
# location of Watcom C compiler
WC = $(%WATCOM)
# name of C compiler
CC = wcc386
# name of C compiler/linker
CL = wcl386
# name of linker
LINK = wlink

# the memory model to use (f = flat)
MODEL = f

# definitions used by makefile.all (and elsewhere)
T=..\term\
D=..\docs\
O=obj
M=..\demo\

!include makefile.awc

# -w0 means ignore warnings and do not report them
# -d1{+} means include line numbers for debugger
# -d2 means full symbolic debug info
# -fpi means inline 80x87 instructions with emulation
# -fpi87 means inline 80x87 instructions
# -zq avoids all the version banners being printed
# -o{x} controls optimization
#      a           -> relax aliasing constraints
#      f           -> generate traceable stack frames as needed
#           The selection of the optimization flags include some wizardry.
#           Thus omiting any flags from the above two, may result in run-time
#           errors.
#      m           -> generate inline 80x87 code for math functions
#      d           -> disable all optimizations (Watch out!)
# -DREADLINE to use the history/line editing capability. If you want this
#    capability add -DREADLINE to CFLAGS
# -DLITE means no hiddenline removal to conserve memory
# option {stack=n} sets stack size to n
# do the configuration #defines the (now) usual way
CPPFLAGS=-DHAVE_CONFIG_H -UMSDOS -DDOS386 -DDOS386 -DDOS32 -DPC
CFLAGS = -zq -m$(MODEL) -d2 -omaf -fpi -fp3 -I. $(CPPFLAGS)
DOC2XXX_FLAGS = -I$(D) -I$(T) $(CFLAGS) 
TERMFLAGS =
LNKOPT = option{stack=100000}

OBJS = $(COREOBJS) version.$(O)

all: gnuplot.exe $(HELPFILE) binfiles .SYMBOLIC
     @%null

# use linkopt.wc to avoid command-line overflow

gnuplot.exe: $(OBJS) linkopt.wc .PRECIOUS
        $(LINK) $(LNKOPT) system dos4g name gnuplot file @linkopt.wc

# create linker options file
# note that when you change the model or switch overlaying,
# you will have to execute 'make clean'


linkopt.wc: makefile.wc makefile.awc
        %write $^@ {$(OBJS)}

# default rules

.c.obj: .AUTODEPEND
        $(CC) $^& $(CFLAGS)

$(OBJS): config.h

config.h: ..\config\config.wc
        copy $< $^@

term.obj: term.c term.h plot.h bitmap.h $(CORETERM)
        $(CC) $(CFLAGS) $(TERMFLAGS) -DDEFAULTTERM="dospc" -I$(T) term.c


# convert gnuplot.doc to gnuplot.gih
$(HELPFILE): doc2gih.exe $(D)gnuplot.doc
        doc2gih $(D)gnuplot.doc $(HELPFILE)

doc2gih.exe: $(D)doc2gih.c $(D)termdoc.c
    $(CL) $(DOC2XXX_FLAGS) -fe=doc2gih $(D)doc2gih.c $(D)termdoc.c

doc2tex.exe: $(D)doc2tex.c $(D)termdoc.c
    $(CL) -w0 -m$(MODEL) $(DOC2XXX_FLAGS) -DALL_TERM_DOC &
        -fe= doc2tex $(D)doc2tex.c $(D)termdoc.c

bf_test.exe: bf_test.c binary.obj alloc.obj
    $(CC) $(CPPFLAGS) -m$(MODEL) bf_test.c
    $(LINK) system dos4g name bf_test file {bf_test binary alloc}
    
binfiles: bf_test.exe .SYMBOLIC
    .\bf_test
    move binary? ..\demo

# clean target - remove all temp files, but leave executable intact
# needed when changing configuration (model or overlaying)

clean: .SYMBOLIC
        del *.obj
        del linkopt.wc
        del doc2gih.exe

# realclean target - remove all files created by the makefile

realclean: clean .SYMBOLIC
        del gnuplot.exe
        del gnuplot.gih
        del $(M)bf_test.exe
        del $(M)binary1
        del $(M)binary2
        del $(M)binary3
        del config.h
