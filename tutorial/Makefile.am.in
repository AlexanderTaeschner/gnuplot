## Process this file with automake to produce Makefile.in -*-Makefile-*-
AUTOMAKE_OPTIONS = foreign 1.2h

##plt-files-begin
##plt-files-end

EXTRA_DIST = Makefile.am.in $(PLT_FILES) \
header.tex makefile.dst tutorial.tex eg3.dat

CLEANFILES = tutorial.aux tutorial.dvi tutorial.log tutorial.pdf tutorial.ps \
eg1.tex eg2.tex eg3.tex eg4.tex eg5.tex eg6.tex linepoin.tex

DVIPS = dvips
LATEX = @LATEX@

SUFFIXES = .dvi .plt .pdf .tex .ps

# default target
all: @TUTORIAL@

tutorial: tutorial.dvi

notutorial:

# To touch it up after changes:
remake: tutorial.dvi

tutorial.ps: tutorial.dvi

pdf: tutorial.pdf

tutorial.dvi: eg1.tex eg2.tex eg3.tex eg4.tex eg5.tex eg6.tex linepoin.tex \
	tutorial.tex header.tex
	@echo Building LaTeX tutorial
	TEXINPUTS=.:$(srcdir):${TEXINPUTS}: $(LATEX) tutorial
	TEXINPUTS=.:$(srcdir):${TEXINPUTS}: $(LATEX) tutorial

tutorial.pdf: eg1.tex eg2.tex eg3.tex eg4.tex eg5.tex eg6.tex linepoin.tex \
	tutorial.tex header.tex
	@echo "Building LaTeX tutorial (PDF version)"
	TEXINPUTS=.:$(srcdir):${TEXINPUTS}: $(PDFLATEX) tutorial
	TEXINPUTS=.:$(srcdir):${TEXINPUTS}: $(PDFLATEX) tutorial

.dvi.ps:
	$(DVIPS) -o $@ $<

.plt.tex:
	@test -f eg3.dat || cp $(srcdir)/*.dat .
	@if test -x ../src/gnuplot ; then \
	  ../src/gnuplot $< ; \
	else \
	  gnuplot $< ; \
	fi

clean-local:
	@test "$(top_srcdir)" = "$(top_builddir)" || rm -f eg?.dat

Makefile.am: Makefile.am.in
	rm -f $@ $@t
	sed -n '1,/^##plt-files-begin/p' Makefile.am.in > $@t
	echo PLT_FILES = *.plt | fmt | (tr '\012' @; echo ) \
	  |sed 's/@$$/%/;s/@/ \\@/g;' | tr @% '\012 ' >> $@t
	sed -n '/^##plt-files-end/,$$p' $< >> $@t
	chmod a-w $@t
	mv $@t $@

