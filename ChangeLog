2017-05-22  Ethan A Merritt  <merritt@u.washington.edu>

	* Branchpoint for 5.2 (cvs tag -b branch-5-2-stable)

2017-05-21  Ethan A Merritt  <merritt@u.washington.edu>

	* docs/gnuplot.doc:  Various trivial tweaks to improve the layout and
	formatting of pdf documentation . Revised text for sampling,raise/lower,
	and pseudo-files '+' and '++.

2017-05-21  Bastian Maerkisch  <bmaerkisch@web.de>

	* term/win.trm src/win/wgraph.c src/win/wgdiplus.cpp 
	src/win/wd2d.cpp src/win/wgnuplib.h:
	Pointscale option for the windows terminal.

2017-05-20  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/winmain.c (ConsoleHandler) src/plot.c|h (terminate_flag)
	src/readline.c (readline):  Add an event handler to catch "close" 
	signals to console mode gnuplot on Windows.  These events are passed
	on to the main thread to terminate cleanly.
	Bugs #1916, #1917, #1918

2017-05-19  Ethan A Merritt  <merritt@u.washington.edu>

	* src/command.c src/fit.c src/fit.h src/tables.c src/tables.h
	docs/gnuplot.doc:  Deprecate command "update" in favor of new command
	"save fit <filename>".  "update" will remain in version 5.2 for backward
	compatability but will eventually go away altogether.

2017-05-19  Shigeharu Takeno  <shige@iee.niit.ac.jp>

	* docs/term-ja.diff docs/faq-ja.tex docs/gnuplot-ja.doc:
	Sync Japanese documentation to doc version 1.1080

2017-05-18  Ethan A Merritt  <merritt@u.washington.edu>

	* docs/gnuplot.doc
	term/ai.trm term/corel.trm term/djsvga.trm term/dxf.trm term/dxy.trm
	term/emxvga.trm term/epson.trm term/excl.trm term/ggi.trm term/grass.trm
	term/hp500c.trm term/hpljii.trm term/hppj.trm term/mif.trm term/pbm.trm
	term/pc.trm term/regis.trm term/vws.trm:
	Flag bitmap and legacy terminals in the documentation.

	* src/term.h: Remove legacy terminals from the default build.
	corel (postscript variant of CorelDraw format circa 1995)
	dxf (Autocad DWGR10 format circa 1988)

	* docs/README docs/doc2tex.c: New markup ^#TeX in gnuplot.doc signals
	that the rest of the line is a LaTeX command to be passed through 
	verbatim to the *.tex output stream.  Ignored by other doc2foo paths.

	* docs/gnuplot.doc docs/plotstyles.gnu:  Add figure for "with vectors".

2017-05-18  Shigeharu Takeno  <shige@iee.niit.ac.jp>

	* docs/gnuplot.doc: typos, missing section for "set mttics".

	* docs/doc2rtf.c docs/doc2texi.el:  Support for bulleted lists.

2017-05-15  Ethan A Merritt  <merritt@u.washington.edu>

	* src/mouse.c:  Allow "bind 'shift-Button1' 'something'".
	Previously the shift key was ignored.

2017-05-14  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgraph.c (MakeFonts):  Revert accidental change made in
	revision 1.247.
	
	* src/win/wgraph.c (MakeFonts):  Handle empty type face name (GDI).
	Bug #1860

2017-05-14  Ethan A Merritt  <merritt@u.washington.edu>

	* demo/Makefile.am.in src/fit.c:  Suppress creation of fit log file
	during "make check".

2017-05-14  Bastian Maerkisch  <bmaerkisch@web.de>

	* docs/windows/doc2html.c:   Support bulleted lists at top level
	(i.e. not in a table).

	* src/term.c (do_arc):  Remove hack for the windows terminal which was
	meant to fix the drawing of circles, but broke it.  Note that there are
	similar cases in the code (ellipses) where a hack like this is actually
	necessary.  Further investigations required.
	Bug #1880

	* term/win.trm:  Update windows terminal help text to current status.

	* docs/gnuplot.doc:  Add a few more items to the section describing new
	features.

	* src/win/wgraph.c:  Use radio buttons to indicate the current backend
	selection.

2017-05-13  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgnuplib.h src/win/wgraph.c src/win/wgdiplus.cpp
	src/win/wd2d.cpp:  Replace defines for commands and point symbol types
	by enums.

2017-05-12  Ethan A Merritt  <merritt@u.washington.edu>

	* docs/doc2tex.c docs/doc2gih.c:  Support bulleted lists at top level
	(i.e. not in a table).

	* NEWS docs/gnuplot.doc:  Revise the section describing new features.

2017-05-08  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgraph.c src/win/wd2d.cpp|h:  Reorganize initialisation of
	the Direct2D backend to correctly init font related terminal properties.

	* src/win/wd2d.cpp (d2dSetFont):  Missing init of indicator that text
	can be rotated.

	* src/win/wgraph.c (WM_SIZE):  Track canvas (and window) size.

	* src/win/wd2d.cpp (D2DCOLORREF):  Replace macro by an inline function.

2017-05-07  Ethan A Merritt  <merritt@u.washington.edu>

	* src/term_api.h src/set.c term/cairo.trm term/post.trm:
	In order to scale up an existing plot uniformly, e.g. for printing
	a poster-size PostScript or PDF file, it is convenient to be able to
	give the scale factor in the "set term" command.  We already offer
	"set termoption {linewidth <factor>} {fontscale <factor>}".  This patch
	adds "set termoption {pointscale <factor>}" to scale up pointsize.

2017-05-05  Ethan A Merritt  <merritt@u.washington.edu>

	* src/eval.c:  Add some DEBUG_* variables to help diagnose problems on
	other people's machines.

	* src/show.c src/variable.h:  All of the *_handler(ACTION, PARAM) calls
	are hidden by macros defined in variable.h except for ACTION_SHOW.
	Wrap these calls in a macro also.

2017-05-02  Ethan A Merritt  <merritt@u.washington.edu>

	* term/canvas.trm:  Fix incorrect initialization of axis width/height.
	Bug #1925

2017-04-25  Ethan A Merritt  <merritt@u.washington.edu>

	* src/fit.c (backup_file) demo/fit.dem docs/gnuplot.doc:
	The "update" command has not worked exactly as documented since
	version 4.something.  Revise the documentation and the support code.
	Remove pointless use of "update" from the fit demo.

	* docs/gnuplot.doc demo/cerf.dem demo/complex_trig.dem
	demo/heatmaps.dem demo/pm3d_lighting.dem demo/rgb_variable.dem:
	Update demos in accordance with the recent change to have '++' sample
	on u and v rather than x and y.

2017-04-25  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgdiplus.cpp:  Graphics::MeasureString did not take trailing
	spaces into account. Bug fix.

2017-04-24  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/command.c (do_system):  Report return code of (_w)system()
	also on Windows.

2017-04-24 Akira Kakuto <kakuto@fuk.kindai.ac.jp>

	* src/command.c (report_error): Dummy up WEXITSTATUS(ierr) as a no-op
	for _WIN32.

2017-04-23  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wd2d.cpp|h src/win/wgraph.c src/win/wgdiplus.cpp|h
	src/win/wgnuplib.h src/win/winmain.c src/win/wresourc.h
	term/win.trm config/mingw/Makefile config/msvc/Makefile
	config/config.nt config/config.mgw:

	New windows terminal backend which uses Direct2D and DirectWrite
	instead of GDI+ or GDI.  It uses graphic card acceleration and is hence
	typically much faster.  DirectWrite offers a much superior text
	rendering quality in particular for rotated text.  The terminal is
	feature-complete for drawing to the screen.  Printing, copying to
	clipboard and saving of EMF fall back to the GDI+ code.  Pattern
	fill is still implemented using GDI+ and is slow.  As of now, this code
	is considered experimental.

	* src/win/wgraph.c src/win/wcommon.h (draw_image):  Make static.

	* src/win/wgraph.c src/win/wgdiplus.cpp:  Off-by-one error in
	mapping of graph coordinates.

	* src/win/wgdiplus.cpp (SetFont_gdiplus):  Fix memory leak and
	simplify a bit.

	* src/win/wgdiplus.cpp:  Use a compatible bitmap for cached
	point symbols.  Eliminates artifacts on some systems.

2017-04-22  Ethan A Merritt  <merritt@u.washington.edu>

	* src/command.c (do_system do_system_func report_error) src/eval.c
	docs/gnuplot.doc:

	Introduce new user-visible variables GPVAL_SYSTEM_ERRNO and 
	GPVAL_SYSTEM_ERRMSG that hold the status returned by
	    system "some command"
	    ! "some command"
	    foo = system("some command")
	    foo = "`some command`"

2017-04-21  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgdiplus.cpp: Correct calculation of vertical drawing position.
	Corrects differences between position of point symbols and error bars.

2017-04-19  Ethan A Merritt  <merritt@u.washington.edu>

	* src/wxterminal/gp_cairo.cpp (gp_cairo_boxed_text): Scale linewidth of
	textbox border by the current terminal linewidth setting.
	Bug #1825

	* src/gadgets.h src/gadgets.c src/save.c src/set.c docs/gnuplot.doc:
	Add a "linewidth" property to the textbox style.

2017-04-19  Bastian Maerkisch  <bmaerkisch@web.de>

	* configure.ac docs/Makefile.am:  Some systems allow for parallel
	installation of different lua versions (e.g. Ubuntu).  We already use
	pkg-config to test for "lua" and "lua5.1" packages.  This patch extends
	that mechanism to lua5.2 and lua5.3.  Change the name of the lua
	executable used to build the docs of the gnuplot lua terminal
	accordingly.
	Patch #750

	* src/win/wgdiplus.cpp (drawgraph_gdiplus):  Use generic string format
	to determine string extent.  Bug fix.

	* term/caca.trm:  Eliminate compiler warnings.

2017-04-18  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graphics.c (place_objects):  Error messages from placement of
	circles and ellipses were misleadingly refering to "rect N" instead
	of "object N".

	* src/graph3d.c (map3d_position_r):  Placement of generic objects in
	"set view map" mode should not fail just because the z coordinate is
	non-positive and z is log-scaled.  The projection only uses x and y.

	* src/parse.h src/parse.c src/misc.c (parse_fillstyle):  New utility
	routine is_function(token) for convenience in parsing.

	* src/graph3d.c (draw_3d_graphbox): Clipping area was not maintained
	across this routine, causing object clipping in "set view map" to fail.

2017-04-11  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graphics.c docs/gnuplot.doc demo/armillary.dem:
	Allow polar (cylindrical) coordinates for circles in 3D plots.

2017-04-10  Ethan A Merritt  <merritt@u.washington.edu>

	* src/eval.c (update_gpval_variables):  New exported variables giving
	screen coordinates of the 3D plot axial center and radius of the
	enclosing sphere. GPVAL_VIEW_XCENT GPVAL_VIEW_YCENT GPVAL_VIEW_RADIUS.

	* src/graphics.c (place_objects):  Allow placement and size of circles
	in 3D plot to use axis coordinates (used to only allow screen coords).
	As in 2D, the radius of the circle is always scaled to match the x axis
	and the circle itself is always drawn in the plane of the figure.

	* demo/armillary.dem docs/gnuplot.doc:  Document and provide example
	for use of axis coordinates to place circles in 3D.

	* demo/Makefile.am.in: Place quotes around $(GNUTERM) so that multi-word
	definitions do not gum up "make check".

	* src/plot.c src/term.c:  Defer detection of initial terminal type until
	after error handling has been set up.  This allows us to parse GNUTERM
	for terminal options in additional to the bare terminal name.
	E.g. GNUTERM="wxt size 500,500"

2017-04-03  Ethan A Merritt  <merritt@u.washington.edu>

	* src/command.c (save_command):  Don't use loadpath to choose an
	output directory.

2017-04-02  Daniel J Sebald <daniel.sebald@ieee.org>

	* src/eval.c (update_gpval_variables):  Sanity check the string
	stored in GPVAL_PWD.  However if the current directoty is invalid
	GPVAL_PWD still contains the previous string.

	* src/command.c (pwd_command):  Sanity check the validity of the
	current working directory.

2017-04-01  Ethan A Merritt  <merritt@u.washington.edu>

	* src/mouse.c term/qt.trm src/qtterminal/qt_term.cpp
	src/qtterminal/QtGnuplotWindow.cpp: The qt terminal assumed that
	"space-raises-console" would be implemented in the core code.
	But it never was.  Instead on non-MSWin platforms hitting <space>
	in the qt window generates a mouse protocol error.
	Document that "space-raises-console" is only for MSWin, and have
	other platforms treat it like any other key.

	* configure.ac src/gplt_x11.c src/wxterminal/wxt_gui.cpp:
	The code chunk in gplt_x11.c that supports space-raises-console for the
	KDE3 konsole was giving compiler warnings.  Rather than fiddle with code
	used by almost no one (it doesn't work under KDE4 or KDE5),
	make KDE3+DCOP support a build-time option:
		./configure --with-x --with-x-dcop

2017-04-01  Daniel J Sebald <daniel.sebald@ieee.org>

	* src/plot.c (main):  Exit with error if dropping privilege fails.

2017-03-31  Ethan A Merritt  <merritt@u.washington.edu>

	* src/plot2d.h src/plot3d.c src/datafile.c:  Add a slot in the plot 
	structure to track a 2nd named sampling variable, e.g. 
	    splot [u=1:5][v=1:5] '++' using (u):(v):(u*sin(v))

	* src/plot2d.c src/plot3d.c:  Extend the sampling range parsing to
	track named sampling variables for 2D sampling '++' as well as 1D
	sampling '+'. Minor cosmetic modifications to the 2D and 3D code to
	make it more obviously parallel.

	* demo/sampling.dem:  Add example of named sampling ranges in 3D.

	* src/graph3d.c (do_3dplot):  "set xyplane at 0; set log z; splot..." =>
	no plot drawn.  Change this so that "at 0" for logscale z is treated as
	"xyplane at <Z-axis min>".
	Bugfix.

2017-03-29  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.h (ACTUAL_STORE_WITH_LOG_AND_UPDATE_RANGE) 
	src/axis.c (update_primary_axis_range) src/plot2d.c src/plot3d.c 
	src/datafile.c (df_generate_pseudodata):

	The nonlinear axis code as originally introduced tracked data min/max
	in the primary (i.e. linear) axis structure.  That was unnecessarily
	complicated since it required a coordinate transformation to update the
	range every time a point was stored.  Also since the current range
	stored in the visible axis structure was not always up-to-date, some
	autoscaling operations during plot layout could fail.
	Now we change this to track data min/max in the secondary (i.e. visible)
	axis coordinate system. At the end of data input and function evaluation
	we call new routine update_primary_axis() just once per nonlinear axis
	to transfer the min/max values to the primary axis structure as well.

	* demo/sampling.dem:  Unit tests for some of the failures addressed
	by this set of changes and a couple that have not been fixed yet.

	* src/axis.h src/plot2d.c:  The macro ACTUAL_STORE_WITH_LOG_...
	no longer needs a special case parameter for the color axis.

2017-03-26  Ethan A Merritt  <merritt@u.washington.edu>

	* src/datafile.c (df_generate_pseudodata):  Use axes u and v to sample
	pseudofile "++" rather than axes x and y.  This allows for sampling
	ranges that are distinct from the plot axis range, as was already true
	for sampling "+".  The downside of this change is that we don't 
	currently support nonlinear sampling on u or v, so it doesn't work as
	well when plotting logscale x or y.

	* src/plot2d.c (plotrequest):  Initialize state of u and v axes.

2017-03-20  Jeremy Green  <jeremyrgreen@users.sf.net>

	* src/graphics.c (plot_betweencurves):  Revised algorithm for filling
	the area between two curves.  Rather than filling adjacent segments
	one by one, trace the outline of the entire filled area.
	This avoids artifacts at the boundaries between segments.

2017-03-19  Ethan A Merritt  <merritt@u.washington.edu>

	* src/gadgets.h src/graphics.c (plot_border):  Range-limited y2 axis was
	drawn in the wrong direction (top-to-bottom rather than bottom-to-top).
	If the top plot border was drawn also, this resulted in a spurious
	diagonal line across the plot.
	Bug #1921

2017-03-16  Ethan A Merritt  <merritt@u.washington.edu>

	* src/interpol.h src/interpol.c src/plot2d.c docs/gnuplot.doc:
	Clean up code, documentation, and demos for the 'bins' option.
	- document the algorithm for choosing bins
	- binrange defaults to min/max of current data set (not axis range)
	- trap degenerate case of all points UNDEFINED
	- new option binwidth=<width>. Now you can either determine binwidth
	  from range + nbins, or nbins from range + binwidth

	* src/plot2d.c src/tables.c:  "smooth bins" is the same as "bins".

	* src/set.c (set_table):  The "set table <filename>" command was not
	doing tilde expansion on filename.

	* src/datafile.c (df_open):  If the previous plot command plotted from
	an array by name, try to retrieve that array by name for a subsequent
	plot that uses the special filename '' or "". E.g.
	    plot Array with lines, '' with impulses

	* configure.ac:  enable/disable comment for stats command was reversed

2017-03-13  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graphics.c (plot_impulses) docs/gnuplot.doc:  Apply the x offset
	created by "set jitter" to 2D plots with impulses.

2017-03-10  Ethan A Merritt  <merritt@u.washington.edu>

	* docs/gnuplot.doc:  Restore EXPERIMENTAL warning to documentation for
	the "bins" plotting option (it had been removed 2017-02-19).  We may 
	consider changing the interpretation of binrange [min:max] to be more
	consistent with R, so warning that "implementation details may change
	before inclusion in a stable release" is appropriate.

2017-03-08  Ethan A Merritt  <merritt@u.washington.edu>

	* src/plot2d.c (eval_plots):  Do not enforce cbrange validity if the
	palette is unused by this plot.  Prevents spurious error from "set log"
	with default cbrange.
	Bug #1920

2017-03-05  Ethan A Merritt  <merritt@u.washington.edu>

	Deal with various corner-case failures found by fuzzing the demo set.

	* src/hidden3d.c (build_networks):  A degenerate polygon can fall all 
	the way through the classification loop, leaving the flag value -2 as
	the polygon number which is then used as an array index.  Oops.

	* term/dumb.trm (DUMB_options): Sanity check terminal size.

	* src/plot2d.c (eval_plots): Dummy variable must not be an array.
	E.g.  array t[10]; set dummy t; plot t

	* src/plot2d.c (get_data):  Defer initialization of parallel plot data
	structures so that it catches both "set style data parallel" and 
	"with parallel".  Example failure case:
	set style data parallel; plot 'silver.dat' using 1:2:3 lc var

	* src/plot2d.c (eval_plots): Recently added stringent tests on axis
	scaling caused "plot with table" to fail because the y axis range is
	undefined. Skip the tests for this plot style.

2017-03-01  Ethan A Merritt  <merritt@u.washington.edu>

	* src/command.c (plot_command splot_command) src/gplt_x11.c
	src/qtterminal/QtGnuplotScene.cpp src/wxterminal/wxt_gui.cpp:

	The toggle status of all plots (plot visible or hidden) was being reset
	in the terminal driver on every clear() event.  This caused the toggle
	state to be lost when the plot was rotated/panned and on refresh/replot.
	Now we do away with the automatic reset in the terminal drivers.
	Instead we send term->modify_plots(MODPLOTS_SET_VISIBLE, -1) as part of
	the plot and splot commands.

2017-02-27  Shigeharu Takeno  <shige@iee.niit.ac.jp>

	* src/wxterminal/wxt_gui.cpp:  Rename static int yield to avoid 
	name conflict on Solaris 10.
	Bug #1914

2017-02-27  Ethan A Merritt  <merritt@u.washington.edu>

	* src/stdfn.c:  Clarify warning message for abnormal exit.
	Bug #1913

2017-02-24  Ethan A Merritt  <merritt@u.washington.edu>

	* src/interpol.c (do_cubic) docs/gnuplot.doc:  Document that smooth
	options (splines and bezier variants) are sensitive to blank lines and
	undefined values in the input data. Curves are fit separately to each
	uninterrupted subset of the original data. Curve segments that are 
	entirely out of range on x are now ignored rather than triggering a
	error message.
	Bug #1911

2017-02-23  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/term.c (term_initialise):  Revise the test for output of binary
	data to the wgnuplot text window by checking if the terminal actually
	writes to output.  Fixes caca output to a console window in wgnuplot.
	Bug #1912

	* demo/borders.dem demo/boxclusters.dem demo/boxplot.dem
	demo/circles.dem demo/ellipse.dem demo/ellipses_style.dem
	demo/histograms.dem demo/histograms2.dem demo/matrix_every.dem
	demo/mgr.dem demo/molecule.dem demo/orbits.dem demo/parallel.dem
	demo/probably_tux.dem demo/solar_path.dem demo/special_chars.dem
	demo/stats.dem demo/ttics.dem demo/world2.dem:
	End all demos with 'pause -1; reset'.  Set encoding to utf8 when
	required.

2017-02-19  Ethan A Merritt  <merritt@u.washington.edu>

	* src/plot2d.h src/plot2d.c src/interpol.c: Remove the EXPERIMENTAL
	warning and conditional compilation for "smooth bins".

	* src/datafile.c (df_readbinary) src/plot2d.c (get_data):
	Version 5 intentionally returns input data with a flag UNDEFINED rather
	than skipping the point altogether. Unfortunately the binary data input
	path failed to clear/initialize/set-to-NaN the value returned from
	function evaluation during binary data input. Now we explicitly set NaN
	in additional to returning DF_UNDEFINED.
	This fix is incomplete because store2d_point() later overwrites the 
	UNDEFINED flag, which is almost certainly the wrong thing to do.
	Bug #1911

	* term/svg.trm:  Default to embedding generated images rather than 
	creating and linking to separate *.png files.
	Bug #1801

2017-02-17  Ethan A Merritt  <merritt@u.washington.edu>

	* term/canvas.trm term/js/gnuplot_mouse.js term/js/gnuplot_svg.js
	term/svg.trm:  Mousing support for "set theta <origin> <sense>".

2017-02-16  Ethan A Merritt  <merritt@u.washington.edu>

	* src/plot3d.c:  When hidden3d mode is set, two linetypes are reserved
	for each plot (front and back surface).  This is not necessary if both
	the front and the back use the same linetype ('set hidden3d nooffset'),
	so if the linetype offset is zero then reserve only one linetype.

2017-02-16  Bastian Maerkisch  <bmaerkisch@web.de>

	* docs/plotstyles.gnu:  On Windows, use "Tahoma" instead of "Times"
	"Times New Roman".  The former is not available and the later does not
	provide the characters required by the 2nd "with labels" plot.  Scale
	down fontsizes to better fit the size of the plots.

2017-02-15  Ethan A Merritt  <merritt@u.washington.edu>

	* src/misc.c src/hidden3d.c:  Arrowhead properties were being applied as
	each plot was set up. This doesn't work in hidden3d mode because arrows
	from multiple plots are sorted jointly and drawn later.  Arrowhead style
	must be applied separatedly for each arrow.
	Bug #1492

2017-02-15  Bastian Maerkisch  <bmaerkisch@web.de>

	* config/config.oww config/watcom/Makefile src/win/winmain.c:
	Enable fake pipes for OpenWatcom.  Here the system() function requires
	the command string to include the shell and wide character variant
	_wsystem() does not seem to work.

	* src/win/wgraph.c:  Fix initialization of the graph window struct when
	switching from standalone to docked mode and a previous window was open.

	* config/mingw/Makefile:  New variable CWFLAGS for warning flags to be
	put last in CFLAGS in order to overwrite e.g. -Wall.

	* config/mingw/Makefile:  New target "7z" which is similar to the "zip"
	target but outputs a 7-zip packed binary package.

2017-02-14  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c src/axis.h src/graphics.c src/save.c src/set.c src/show.c
	src/tables.c src/tables.h src/unset.c src/mouse.c src/boundary.c
	docs/gnuplot.doc demo/ttics.dem demo/solar_path.dem:

	New command
	    set theta {right|top|left|bottom}
	    set theta {clockwise|cw|counterclockwise|ccw}

	controls layout of polar mode plots by specifying where to place the
	origin (theta=0) of the angular coordinate and its sense of rotation.
	The default remains "right" and "counterclockwise".

2017-02-10  Mojca Miklavec  <mojca.miklavec.lists@gmail.com>

	* src/qtterminal/qt_term.cpp term/aquaterm.trm:
	Make the the "set term ... linewidth" option more like other terminals.

2017-02-09  Shigeharu Takeno  <shige@iee.niit.ac.jp>

	* configure.ac: Require glib version >= 2.28
	(because src/wxterminal/gp_cairo.c now uses the g_clear_object macro)

2017-02-09  Ethan A Merritt  <merritt@u.washington.edu>

	* term/aquaterm.trm term/qt.trm src/qtterminal/qt_term.cpp term/wxt.trm:
	Add "linewidth <lw>" to the list of options accepted for "set term" or
	"set termoption".

	* configure.in term/qt.trm:  Qt4 info only printed for Qt4 build.
	Bug #1905

2017-02-07  Ethan A Merritt  <merritt@u.washington.edu>

	* src/hidden3d.c (build_networks):  Hidden3d structures were not
	correctly initialized for "splot with dots".
	Bug #1904

	* src/boundary.c src/graph3d.c:  Use the shared routine write_label()
	to handle the key title.

2017-02-06  Ethan A Merritt  <merritt@u.washington.edu>

	* src/plot2d.c:  Limit the scope of a sample variable to the plot
	command it is used in.  I.e. restore value of t after execution of
	plot sample [t=0:10] '+' using (f(t)):(g(t))
	Bug #1755

2017-02-04  Ethan A Merritt  <merritt@u.washington.edu>

	* src/parse.h src/parse.c src/util.c src/command.c docs/gnuplot.doc:
	Limit the scope of an iteration variable to the command or clause being
	iterated. I.e. after execution of an iteration "for [N=1:10]" N retains
	whatever value it had prior to the iteration, possibly NOTDEFINED.
	For iterated plot and set statements this is robust against errors.
	However an error exit from inside a "do for [foo = ] {}" clause may
	leave foo with some intermediate value.
	Bug #1891

2017-02-03  Ethan A Merritt  <merritt@u.washington.edu>

	* src/gplt_x11.c:  Zero out each command string as it is freed.
	I am not sure this fixes a reported use-after-free segmentation error
	but it can't hurt.
	Bug #1866

2017-02-01  kh.moriyama  <cheongsamkh@yahoo.co.jp>

	* src/axis.c src/axis.h src/gadgets.c src/gadgets.h src/graphics.c
	src/graphics.h src/misc.c src/save.c src/set.c src/term_api.h
	docs/gnuplot.doc:   New keyword "pointnumber|pn" to limit the total
	number of point symbols that lie along a plot "with linespoints".
	Similar to "pointinterval" except that the resulting spacing between
	point symbols does not depend on the total number of data points.

2017-02-01  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graph3d.c (plot3d_points) src/gadgets.c src/gadgets.h:
	Apply pointinterval property to splot with linespoints.

	* src/hidden3d.c: Apply pointinterval property in hidden3d mode also.

2017-01-29  Bastian Maerkisch  <bmaerkisch@web.de>

	* config/config.oww:  The OpenWatcom v2 fork has erf and erfc.

	* src/win/wmenu.c:  Revise the patch dated 2017-01-25 so it does not
	break non-UNICODE builds.

	* src/stdfn.c|h src/misc.c config/config.mgw:  Always use our own
	Windows version of opendir and friends as they handle encodings.
	Bugfix.

	* src/stdfn.c src/syscfg.h src/util.c src/win/wmenu.c:  Only include 
	direct.h where required. Remove a few unnecessary includes.

	* src/win/mingw/Makefile:  Optionally use pkg-config to use gdlib.
	Required with recent updates of MSYS2/Mingw-w64

2017-01-28  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/stdfn.c|h (gp_getcwd):  New function for Windows which is aware
	of the current internal encoding. Bugfix.

2017-01-26  Ethan A Merritt  <merritt@u.washington.edu>

	* src/datafile.c (df_determine_matrix_info):  Check and report error
	return from fseek, which cannot work if the input stream is a pipe.
	Now you get: "seek error in binary input stream - Illegal seek" instead
	of the non-informative "File doesn't factorize into full matrix".
	Bug #1901

2017-01-25  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgdiplus.cpp config/config.oww config/watcom/Makefile:
	Enable build with OpenWatcom and GDI+.  See Patch #746.

	* src/win/wprinter.c:  Add missing calling convention.

2017-01-24  Stefan Althoefer  <stefan-alth@users.sourceforge.net>

	* term/js/gnuplot_mouse.js:  Improved placement of hypertext and 
	mouse-click output. Fix multiline hypertext.

2017-01-24  Ethan A Merritt  <merritt@u.washington.edu>

	* term/canvas.trm term/svg.trm term/js/gnuplot_mouse.js
	term/js/gnuplot_svg.js: Mouse support for inverted r axis.

2017-01-24  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgraph.c (SaveAsEMF):  Default to EMF+ format when using the
	GDI+ backend.

	* src/win/wgraph.c (CopyClip):  Only attempt to set clipboard data if
	the bitmap/metafile handle is valid.  Emit an error message otherwise.

	* src/win/wgdiplus.cpp (clipboard_gdiplus):  Retrieving the handle to
	the metafile requires releasing the graphics object first.  Fixes
	copying EMF data to clipboard.

	* src/win/wgdiplus.cpp (clipboard_gdiplus, metafile_gdiplus): 
	Explicitly set the size of the metafile.

	* src/set.c (set_degreesign):  Remove special Windows code since we
	cannot rely on the locale on this platform.  Fixes degree sign for
	UTF-8 encoding.

2017-01-23  Ethan A Merritt  <merritt@u.washington.edu>

	* term/pslatex.trm:  Do not write postscript comments in output stream
	to cairolatex terminal.
	Bug #1898

	* src/axis.h src/graphics.c:  Fix type mismatch in numeric comparison
	(clang generates an error or warning).

2017-01-22  Ethan A Merritt  <merritt@u.washington.edu>

	* src/set.c (parse_label_options):  Save label z value into its point
	colorspec as well as its text colorspec
	Bug #1897

2017-01-21  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgnuplib.h src/win/wgraph.c src/win/win/wmenu.c 
	src/win/wtext.c:  Fix string formats and messages in several places to
	make non-Unicode builds work again.

	* src/win/wprinter.c:  Fix compiler warnings.

2017-01-21  Ethan A Merritt  <merritt@u.washington.edu>

	* src/datafile.c (f_dollar f_column df_readascii):
	Version 5 was supposed to do away with differences between data read
	by 'plot ... using N' and 'plot ... using ($N)'. It turns out that was
	not true with regard to missing data.  If the "missing" flag is present
	in the data then 'using N' catches it but 'using ($N)' does not.
	The problem is that ($N) and (column(N)) and "header_of_N" all invoke
	expression evaluation, which has had no mechanism to indicate a missing
	value on return rather than NaN.  This patch overloads the imaginary
	slot of a complex NaN value to hold DF_MISSING rather than 0.0 on return
	from f_dollar() and f_column() as appropriate.  For convenience the body
	of f_dollar() is replaced by a pass-through to f_column() so that both
	routines behave the same way.
	Bug #1896

	* src/plot2d.c (get_data) src/set.c src/show.c docs/gnuplot.doc:
	The fix for bug #1896 did not address the case where a missing value is
	encountered during evaluation of an expression.  E.g. 'using ($1+$2)'
	when there is missing data in either column 1 or 2 will evaluate to NaN.
	This patch adds an additional option 'set datafile missing NaN' that
	tells gnuplot to treat NaN data values as missing rather than invalid.
	Based on patch #725 (Christoph Bersch)

2017-01-20  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgdiplus.cpp (gdiplusCreatePen):  Remove now unused static
	function.

2017-01-18  Ethan A Merritt  <merritt@u.washington.edu>

	* src/save.c (save_linetype):  Save and show commands were failing to
	list linecolor for lines that were originally specified as "lt -1".

	* src/graphics.c (plot_border draw_polar_circle) src/set.c src/show.c:
	New command "set border polar" draws a circle with radius matching the
	highest tic position on the r axis.

2017-01-17  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graphics.c:  Wrap polar grid radial lines in terminal notification
	TERM_LAYER_{BEGIN|END}_GRID

2017-01-15  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c src/gadgets.h src/graphics.c src/save.c src/graph3d.c
	docs/gnuplot.doc:  New keyword `polar` to specify position. This allows
	labels, arrows, and objects to be placed in 2D plots using polar
	coordinates and in 3D plots using cylindrical coordinates.

2017-01-13  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c src/axis.h src/boundary.c src/plot2d.c src/plot2d.h:
	Continue consolidation of polar to cartesian coordinate conversion.
	This patch fixes various problems with logscale r axis tic placement.
	It adds a filter to categorically reject points with negative r value 
	if the raxis is logscaled.

2017-01-12  Ethan A Merritt  <merritt@u.washington.edu>

	* src/unset.c (unset_polar): "reset" needs to free data structures and
	rotation for ttics.

2017-01-10  Ethan A Merritt  <merritt@u.washington.edu>

	* src/save.c src/set.c src/show.c src/tables.c src/tables.h src/unset.c
	src/boundary.c src/plot2d.c src/plot2d.h docs/gnuplot.doc:
	New command "set rlabel" places an axis label above the raxis. The label
	is printed whether or not the program is currently in polar mode.
	Keywords for offset, font, etc as for the other axis label commands.

	* src/axis.c src/gadgets.c src/gadgets.h src/graphics.c src/mouse.c
	src/plot2d.c src/set.c docs/gnuplot.doc:  Support inverted r axis range.
	rrange must be linear and have fixed max/min (no autoscaling).
	Bug #1880

	Allows use of polar mode to display a projection of celestial horizontal
	coordinates (altitude + azimuth) with the zenith (altitude 90) at the
	center and the horizon (altitude 0) at the perimeter. Theta represents 
	the azimuthal angle. 

	* demo/solar_path.dem demo/solar_params.dem demo/all.dem:
	Use inverted rrange to display solar path at a specific latitude in
	celestial horizontal coordinates.

2017-01-08  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c (gen_tics) unset.c (unset_polar):  Allow placement of tics
	and tic labels along THETA (set ttics) using angles outside the fixed
	range [0:360].  Handle auto-generated tic at 360 as a special case and
	omit it if there is already a tic at 0.

	* src/boundary.c src/graphics.c (ttick_callback place_grid):  Reserve
	sufficient space for THETA tic labels at the top and bottom of plot.
	ttic labels should not toggle on/off with the grid.
	Bug #1892

	* src/set.c (parse_plot_title) src/plot2d.c (attach_title_to_plot):
	Accept keywords {left|right} to control text justification of a plot
	title positioned at the beginning or end of a plotted line. E.g.
	    plot FOO ... with lines title "Foo" at end {left|right}

	* src/plot2d.c (polar_to_xy):
	Rename theta_r_to_x_y() to polar_to_xy() and add parameter TBOOLEAN update
	TRUE - do range-checking against rrange and update limits if autoscaling
	FALSE - convert theta;r to x;y with no range checking or update
	This patch moves the range checking done at each original site into the
	shared routine. The original range checks were not identical so it is
	possible that consolidation breaks something.  In particular the call
	from parametric_fixup() originally updated rrange based on fabs(r)
	rather than r.  If necessary we can replicate this using two 
	successive calls to polar_to_xy().

	* src/plot2d.c (polar_to_xy):
	Mapping negative numbers onto a polar plot with (R_AXIS.min != 0)
	was giving incorrect placement.  This patch catches and corrects most of
	the bad cases. Examples that were bad before this patch:
	    set polar; set grid polar; set rrange [1:5]; plot -2, 3
	(note that the "-2" circle was drawn outside the "3" circle
	    load 'ttics.dem'; set rrange [1:6]; replot
	(weird displacement of -t curve)
	Some corner cases may remain (e.g. nonlinear R with nonzero min)
	Bug #1892

2017-01-07 Akira Kakuto <kakuto@fuk.kindai.ac.jp>

	* src/win/wgraph.c (UpdateStatusLine):   Re-order code to support MSVC
	2010 (and OpenWatcom).

2017-01-06  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wcommon.h src/win/wgnuplib.c|h src/win/wgraph.c src/win/wmenu.c
	src/win/wtext.c term/win.trm docs/gnuplot.doc:
	Graph windows can be docked to the wgnuplot text window with 
	`set term win docked`.  Multiple graph windows can be docked at the same
	time and their layout can be changed with the new `layout <rows>,<cols>`
	option.  The fraction of the window which is reserved for text input
	can changed by moving a separator bar with the mouse and via wgnuplot.ini.
	This is useful in particular for Windows in "tablet mode" which only
	displays one maximised window at the time.
	Patch #711

2017-01-06  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c (gen_tics):  Remove dead code for polar axis tics.

	* src/plot2d.c (theta_r_to_x_y):  Consolodate polar->cartesian input
	coordinate conversion into calls to a new routine theta_r_to_x_y().

	* src/graphics.c src/unset.c demo/ttics.dem docs/gnuplot.doc:
	Allow rotation of polar grid (theta) tic labels by "set ttics rotate".
	Extend the fixed range of theta axis so that the user can label from 
	-180 -> 180  rather than 0 -> 360.

2017-01-04  Bastian Maerkisch  <bmaerkisch@web.de>

	* demo/stringvar.dem:  Add platform specific code for Windows.

	* src/term.c (term_initialise):  Disable output of binary data to the
	wgnuplot text window.

	* src/win/winmain.c (WinRaiseConsole):  Raise pause message box instead
	of the text window during pause.

2017-01-03  Ethan A Merritt  <merritt@u.washington.edu>

	* demo/smooth_splines.dem demo/errorbars.dem demo/all.dem demo/html/*:
	Split mgr.dem into two parts, one illustrating the various spline
	smoothing options and the other showing various 2D plot styles
	with errorbars.

	* docs/gnuplot.doc:  Clarify the meaning of the binary file keyword
	"transpose".  Provide index entries for all binary file keywords.

2017-01-02  Jun Takimoto <takimoto-j@kba.biglobe.ne.jp>

	* term/aquaterm.trm (ENHAQUA_put_text):  aquaterm was ignoring
	ignore_enhanced_text;  i.e. you could not bypass enhanced text
	processing.

2017-01-01  Ethan A Merritt  <merritt@u.washington.edu>

	* src/internal.c (f_power): Use ISOC99 macro fpclassify(), if present,
	to detect floating underflow from evaluating X**Y.  Return 0.0 rather
	than UNDEFINED.
	Bug #1877

	* src/specfun.c (f_normal): Values of x < -38 cause floating underflow
	in the calculation of norm(x).  Return 0.0 rather than UNDEFINED.
	See bug #1877

	* src/save.c src/save.h src/show.c:  Consolidate save/show axis format.
	Fix minor bug in "show auto" (2D reports 3D status and vice versa).

2017-01-01  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/qtterminal/QtGnuplotWindow (print):  QPrinterDialog requires
	a parent on Windows.  Set a generic document name.  Disable page
	range option in print dialog.

2016-12-31  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgraph.c (drawgraph):  Fix incorrect determination for
	drawing to a metafile which caused point symbols to be drawn as
	a bitmap.

2016-12-28  Ethan A Merritt  <merritt@u.washington.edu>

	* src/set.c: Do not allow the axis range on polar axis R to invert.
	Bug #1880

2016-12-26  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c src/axis.h src/tables.c src/tables.h:
	Define new axis THETA_AXIS to hold tic definitions for labeled angles
	on perimeter of polar grid.

	* src/graphics.c (ttick_callback) src/save.c src/set.c src/show.c
	src/unset.c:  Support for "set ttics" "set mttics" and placement of
	labeled angles on perimeter of polar grid.

	* demo/ttics.dem docs/gnuplot.doc docs/plotstyles.gnu:
	Demo and documentation for "set ttics".

2016-12-25  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wmenu.c src/win/wgnuplot.mnu:  Show text for toolbar icons
	as tooltips, which can be a bit more descriptive.

2016-12-24  Vicente Olivert Riera <Vincent.Riera@imgtec.com>

	* configure.ac:  Keep track of gdlib-config path found during configure.
	* Makefile.am:  Remove vestigial reference to LISPDIR.

2016-12-24  Ethan A Merritt  <merritt@u.washington.edu>

	* src/save.c:  Convert save tic/mtics routine to use axis pointers.

2016-12-23  Daniel J Sebald <daniel.sebald@ieee.org>

	* src/qtterminal/QtGnuplotScene.cpp:  Draw zoombox coordinates in front
	of everything else.

2016-12-21  Ethan A Merritt  <merritt@u.washington.edu>

	* src/show.c src/set.c:  Repair a few places where axis_array[index].foo
	was not replaced with axis->foo.

2016-12-19  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c src/axis.h src/boundary.c src/graphics.c src/set.c
	src/unset.c:  More tweaks of the raxis/polar grid code.  Allow polar
	grid even in cartesian axis mode.

2016-12-18  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c (some_grid_selected gen_tics) src/unset.c set.c (set_grid)
	src/graphics.c (place_grid xtick2d_callback ytick2d_callback) src/save.c
	src/boundary.c:  Cleaner separation of control over polar grid elements
	and rectangular grid components. Each can be set or cleared independent
	of the others, e.g. "set grid r" will give you circles about the origin
	even in a non-polar plot.  Sanity checking of polar_grid_angle, the
	spacing between radial lines in a polar grid.
	Bug #1888

2016-12-16  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c (bad_axis_range):  Don't include a test (max-min == 0) in
	the bad_axis_range() checks.  One of the primary callers is
	axis_checked_extend_empty_range, which is perfectly happy to expand an
	initially empty range.

	* src/wxterminal/gp_cairo.c:  Valgrind found some use-after-free
	problems with cairo object accounting.  Replace g_object_unref() with
	g_clear_object() everywhere.   This is a macro that decrements object
	reference count and clears the pointer when the count hits zero.
	Clear the pointer in-line for pango_attr_list_unref().
	Bug #1886

2016-12-15  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c (bad_axis_range): Even more paranoid checks to protect
	against corrupted axis range state (Inf/-Inf) found by fuzzing.
	Introduce new routine bad_axis_range().

	* src/plot2d.c:  Fuzz-testing found a crash from trying to adjust the
	range of a boxplot containing no points.

	* src/pm3d.c:  The combination 'set pm3d depthorder interpolate N,M'
	was not correctly tracking memory allocation.
	Bug #1884

2016-12-13  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c (axis_check_empty_nonlinear) src/axis.h src/plot3d.c:
	New routine analogous to the existing axis_checked_extend_empty_range
	except that it applies to nonlinear axes.  This is a bug fix to prevent
	a crash after axis range corruption.
	Example of bug:    set log; splot $FOO using 1:2:(NaN)

	* src/axis.c (axis_check_empty_nonlinear) src/axis.h src/plot3d.c:
	Additional sanity check on axis range after nonlinear transform.

2016-12-12  Ethan A Merritt  <merritt@u.washington.edu>

	* src/boundary.c:  Fix incorrect vertical placement of multi-line
	x2 axis tick labels.  The calculated y coordinate must describe the
	bottom line of the label, not the top line.
	Bug #1882

	* src/axis.c (set_explicit_range) src/axis.h: New routine called from
	apply_zoom() to change the range of one axis directly instead of
	constructing and interpreting a "set [axis]range [newmin:newmax]"
	command string. This prevents loss of precision in the axis coordinates
	that can occur if there is an intermediate ascii representation for the
	range limits.
	Bugs #1881 #1882

	* src/mouse.c (apply_zoom): Call new routine set_explicit_range()
	rather than constructing an executable "set range" command string.
	Bugs #1881 #1882

	* src/mouse.c (rescale rescale_around_mouse): Zoom in response to
	mousing hotkeys +/- must take into account nonlinear axes.
	Nonlinear axes part 20
	Bug #1883

2016-12-10  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/util.c (strappend):  Fix insufficient memory allocation.

2016-12-07  Ethan A Merritt  <merritt@u.washington.edu>

	* docs/gnuplot.doc docs/plotstyles.gnu:  Update filledcurves to include
	an example of representing error on y as a shaded region of uncertainty.

2016-12-06  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graph3d.c:  Revert problematic patch 2016-11-29 affecting order
	of grid drawing.  Work-around for the bug it fixed: 'set border behind'

	* src/show.c: Separate "show xyplane" from "show tics".

	* src/unset.c: "reset" should return border_layer to "front"

2016-12-05  Ethan A Merritt  <merritt@u.washington.edu>

	* term/gd.trm: Co-opt the existing "animate" keyword for use by the new
	sixelgd terminal.  It sets the cursor position at the top left of the
	terminal before each plot so that successive plots overwrite the same
	screen area rather than scrolling off the top.  This is convenient when
	generating an animation sequence, particularly if you save it to a file
	for later playback.

	* term/gd.trm: It is only by historical accident that the gd terminal
	only tracked integer font sizes.  Make it a double so that fractional
	font sizes are possible.

2016-12-05  Bastian Maerkisch  <bmaerkisch@web.de>

	* term/sixel.c:  Required minimal version of gdlib is 2.1.0
	(gdImagePaletteToTrueColor, gdImageTrueColorToPaletteSetMethod).

2016-12-04  Bastian Maerkisch  <bmaerkisch@web.de>

	* term/gd.trm term/sixel.c term/Makefile.am.in:
	New terminal "sixelgd" based on kmiya@culti's sixel.c code
	available at http://nanno.dip.jp/softlib/man/rlogin/#REGWIND
	It produces sixel graphics like the "sixel" terminal, but uses
	gdlib to draw instead of the built-in bitmap code.  It hence
	offers an enhanced feature set, including support for up to 256
	colors, outline fonts, transparency, and anti-aliased lines.
	"set term sixelgd" uses only 16 colors for sixel output and up to
	256 palette colors internally, but "set term sixelgd truecolor"
	maps the internal ARGB image back down into 256 sixel colors
	using dithering.
	sixelgd piggy backs on the png/gif/jpeg terminal routines and
	thus offers the same options.  In "notruecolor" mode we no longer
	pre-allocate colors to avoid unnecessary transformations of the
	image in gdImageSixel.  The "transparent" option works with
	mintty or mlterm on Windows, but does currently not work with
	xterm or mlterm on *nix.
	Patch #742

2016-12-02  Ethan A Merritt  <merritt@u.washington.edu>

	* term/gd.trm (PNG_set_font): Repair a read past end of string error
	found by valgrind.

	* src/plot3d.c: Initialize vector of data values so that incomplete
	data lines do not result in passing uninitialized values to
	STORE_WITH_LOG_AND_UPDATE_RANGE

2016-12-01  Ethan A Merritt  <merritt@u.washington.edu>

	* term/dumb.trm: The set_pixel routine originally used a priority rank
	such that pixels belonging to the border or axis linetypes would always
	be overwritten by pixels belonging to a plot. This system started to
	break when the border linetype LT_BLACK became the default linetype and
	broke further with the addition of a new priority level for fill areas.
	The core code is pretty good at issuing draw commands in the desired
	order, so at this point we get better results by dropping the priority
	rank and having all set_pixel operations overwrite previous contents.

	* src/graphics.c src/plot2d.c term/vgagl.trm:
	Clean up typos, comments, old FIXMEs, dead code

2016-11-29  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graph3d.c (do_3dplot): Front/back layering of border+grid
	components was not always correct in hidden3d mode.  For example:
		set pm3d; set hidden3d; splot x*y with points
	Bugfix

	* src/pm3d.h:  Replace #defined constants PM3D_SCANS_xxx with an
	enum.

2016-11-27  Bastian Maerkisch  <bmaerkisch@web.de>

	 * term/dumb.trm:  Color support by ANSI escape sequences (16, 256,
	or RGB).  In 16/256 color mode, RGB colors are mapped assuming a
	fixed palette, which likely is not the actual palette of the
	terminal.  Support filled polygons.  Relax priority condition
	for overwriting a "pixel" by allowing equal type.
	Patch #741

2016-11-26  Bastian Maerkisch  <bmaerkisch@web.de>

	 * src/win/winmain.c (WinMain):  Enable Windows 10 support for
	console virtual terminal sequences, i.e. escape sequences.
	Show "inline" color plots on the Windows command line with
	"set term caca driver utf8".

	* config/msvc/Makefile:  Enable Unicode build.  Include Manifest files.
	HTML help compiler is located in 32 bit program folder.  Support
	building 32 and 64 bit variants.

2016-11-19  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/pm3d.c (pm3d_depth_queue_flush) src/term_api.h
	src/win/wgdiplus.cpp:  Add layer calls for pm3d queue flush.

	* src/win/wgraph.c src/win/wgdiplus.cpp|h src/win/wgnuplib.h:
	Until version 4.4 the windows terminal used only the Windows GDI to
	draw.  Since 4.6 it can additionally use a mixture of GDI and GDI+ -
	mainly to enable antialiasing.  Version 5.0 added a new variant in a
	separate code path which now only uses GDI+ (5.1).  Not only is this
	faster than the mixed GDI/GDI+ code, it also offers improved support
	for transparency (5.0), custom dash patterns (5.0), oversampling (5.1),
	and antialiasing of polygons with less (5.0) or no artefacts (5.1).
	Version 5.0 still uses GDI for enhanced text and images, but that
	changed in 5.1 already and could be backported to 5.0.  The GDI+ variant
	is the default since version 5.0 for drawing to the screen and is now
	also used for printing, copying to clipboard and saving of EMF data.
	The transition to GDI+ is now complete and this change removes the
	transitional GDI/GDI+ code.

2016-11-18  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgraph.c (CopyClip) src/win/wgdiplus.cpp (clipboard_gdiplus):
	Use GDI+ to copy EMF+ data to clipboard if the user selected the GDI+
	backend.

	* src/win/wgraph.c src/win/wgdiplus.cpp|h (InitFont_gdiplus):
	Determine initial font metrics etc. using the correct API (GDI/GDI+)
	instead of always using GDI.  Take actual canvas size into account.
	Bug fix.

	* src/set.c (set_encoding, init_special_chars) setshow.h
	src/misc.c (init_encoding):  Move initialisation of special characters
	to a separate function, which is also called during program init on
	Windows.  Bug fix.

2016-11-17  Ethan A Merritt  <merritt@u.washington.edu>

	* term/pdf.trm configure.ac src/term.h:
	Mark the pdf terminal as DEPRECATED. The deprecation notice will first
	appear in version 5.0.6.  This patch removes the configuration option.
	The terminal source itself is still there so it remains possible to
	manually uncomment the commented-out #include statement in term.h.
	GmbH dropped support in 2007 for the free (as in beer) but license-
	restricted version of PDFlib.  The gnuplot pdf driver has not been
	touched since 2010 other than to accommodate new default terminal
	settings for version 5.  PDF output remains possible using the pdfcairo
	terminal, any latex terminal + pdflatex, and the export menu provided by
	the wxt and qt interactive terminals.

	* docs/gnuplot.doc docs/plotstyles.gnu docs/titlepag.tex:
	Repair broken hyperlink in docs.  Use color in the histogram plot
	styles figures.  Add Daniel Sebald to list of contributers.

2016-11-16  Ethan A Merritt  <merritt@u.washington.edu>

	* src/gadgets.h src/graph3d.c src/set.c:  Use the shared routine
	write_label() to handle 3D axis labels. This allows explicit rotation
	of xlabel and zlabel (ylabel rotation is suppressed so that the 2D
	default "ylabel rotate" does not affect 3D plots).  The revised zlabel
	code avoids printing the label twice (Bug #1277).

2016-11-15  Ethan A Merritt  <merritt@u.washington.edu>

	* docs/plotstyles.gnu docs/gnuplot.doc demo/html/* demo/fenceplot.dem:
	Add zerror+fenceplot demo to the documentation and the online demo set.

2016-11-15  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgraph.c (SaveAsEMF):  Option to save graph in EMF+ format.

	* src/wxterminal/wxt_term.h src/win/wxt_gui.cpp src/win/winmain.c:
	screendump command supports wxt terminal.

	 * src/win/wgraph.c (WndGraphProc):  Remove dead code in mouse handling:
	Single and double clicks are handled by the code in mouse.c and the
	window is not even configured to receive double click events.  Also make
	sure that mouse wheel "button"s are released again.

2016-11-14  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c src/axis.h src/boundary.c src/color.c src/graph3d.c
	src/graphics.c src/save.c src/set.c src/show.c:  Add a new field to
	the axis structure that stores tic label horizontal justification.
	Previous code was using axis->label->pos to store this, but that
	confounds justification of the tic labels and the axis label proper.

	* src/boundary: Revise calculation of space needed for x2 axis ticmarks.

	* src/save.c: saved timestamp command must use compatible syntax

2016-11-12  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graph3d.c: Check terminal supports filled_polygon before trying
	to carry out "with zerrorfill"

2016-11-10  Ethan A Merritt  <merritt@u.washington.edu>

	* src/color.c (ifilled_quadrangle):  If pm3d border linetype is
	LT_DEFAULT, draw quadrangle borders in current color.  Unfortunately
	this is still a magic number (lt -6) in the user interface.

	* src/qtterminal/QtGnuplotScene.{cpp,h}: Track current fillstyle so that
	qt terminal can distinguish between opaque and transparent pattern fill.

2016-11-08  Ethan A Merritt  <merritt@u.washington.edu>

	* src/boundary.c src/gadgets.c src/gadgets.h src/graph3d.c src/set.c
	src/unset.c src/show.c:  Use the shared routine write_label() to handle
	"set timestamp" in both 2D and 3D.  Place the timestamp relative to page
	borders rather than the plot borders.  Timestamp offsets no longer
	affect placement of plot borders.  A timestamp is still generated for
	each subplot in a multiplot but now they all end up in the same place
	rather than overlapping bits of the multiplot.  This could be improved.

2016-11-07  Hans-Bernhard Broeker  <broeker@physik.rwth-aachen.de>

	* src/win/wgraph.c (CopyPrint): Fix braces broken by #ifdef.

2016-11-05  Ethan A Merritt  <merritt@u.washington.edu>

	* src/gp_types.h src/graph3d.c src/graph3d.h src/plot3d.c src/pm3d.c
	src/pm3d.h src/tables.c demo/all.dem demo/zerror.dem docs/gnuplot.doc:

	New 3D plot style
	    splot <data> using <x>:<y>:<z>:<zlow>:<zhigh> with zerrorfill
	          {fillcolor <colorspec>}
	This produces a plot similar to the 2D filledcurves option to fill the
	area between two curves.  The primary linecolor is used to draw a line
	through the z values.  The fillcolor (defaults to the linecolor if not
	given) is used to fill the area between zlow and zhigh.  Depth sorting
	is possible using `set pm3d depthorder`.

2016-11-05  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgdiplus.cpp|h (drawgraph_gdiplus):  Add wrapper functions
	instead of trying to determine the target (screen/printer/metafile)
	from the device context using GDI functions.

	* src/win/wgraph.c (CopyPrint):  Also use GDI+ to print if the user
	selected the GDI+ backend.

	* src/win/wgdiplus.cpp src/win/wgraph.c (draw_enhanced_init):  Take
	DPI into account when calculating the scaling factor for super- and
	subscripts.  Makes special code for printing superfluous.

	* src/win/wgdiplus.cpp:  Default GDI+ dash patterns use a very narrow
	spacing which does not scale with the line width.  We now use our own
	custom dash patterns which resemble the GDI default patterns for unit
	line width.  This in particular improves the appearance of grid lines
	in polar plots.

	* src/set.c (encoding_micro):  Fix micro sign for CP1252 and add a few
	more encodings, including CP437 and CP850.

2016-11-03  Ethan A Merritt  <merritt@u.washington.edu>

	* src/gadgets.c src/gadgets.h src/graph3d.c src/save.c src/set.c
	src/show.c src/tables.c src/tables.h docs/gnuplot.doc:

	"set key" already offers 3 choices for placement of 3D plots:
	1) "at" user-specified position
	2) "outside" - shrinks the entire plot so that the key can be drawn
	   in one of the margins
	3) "inside" - (the default) rotates and scales with the plot itself
	   as the view changes.
	This patch introduces a 4th option
	4) "fixed" is like "inside" except that it is not affected by changing
	   the current view angles or scaling.
	"fixed" key placement does not move when the plot rotates. For 2D plots
	this is identical to "inside".  The new option is now the default.

2016-11-03  Craig DeForest  <zowie@users.sf.net>

	* src/datafile.c (plot_option_binary):  Interpretation of dimensions
	given via "binary record=(a,b)" contridicted that for dimensions given
	via "binary array=(a,b)".  This caused mangling of image data read in
	using the "record" keyword.  Change the interpretation to match that
	of "array".
	Bug #1873

2016-10-27  Ethan A Merritt  <merritt@u.washington.edu>

	* src/save.c src/show.c src/gadgets.c:  save/show style arrow was
	showing incorrect settings for head/heads/backhead, and reporting
	LT_DEFAULT as an actual line type.

	* src/misc.c (arrow_use_properties): If an arrowstyle has no explicit
	linetype or color, apply the current plot linecolor. This prevents 3D
	vector plots with a default linetype from being colored as if they
	were "lc palette z".
	Bug #1869

2016-10-27  Ethan A Merritt  <merritt@u.washington.edu>

	* src/plot2d.c src/plot3d.c: Recent reorganization of next_iteration()
	code makes it unnecessary to separately track highest iteration in each
	plot clause.

2016-10-26  Thomas Sefzick <t.sefzick@fz-juelich.de>

	* src/plot2d.c: Never decrease value of highest_iteration.
	Avoids missed plots when a plot command contains more than one
	iteration and the last iteration is shorter than the others.
	Bug #1871

2016-10-23  Ethan A Merritt  <merritt@u.washington.edu>

	* src/set.c (set_style):  Allow "set style textbox border" without a
	specific border color to default to black.

	* term/svg.trm:  Transition to SVG 2.0
	Remove DTD.  Remove option "fontfile" and references to SVG fonts.

	* src/axis.h src/axis.c src/show.c: Macros AXIS_IS_FIRST AXIS_IS_SECOND
	are used only once. Remove them.

	* src/internal.c: Clarify error message printed when an undefined
	variable is found in a string expression.
	Bug #1783

2016-10-18  Ethan A Merritt  <merritt@u.washington.edu>

	* src/parse.h src/parse.c:  Simplify the code that supports iteration.
	Part 4:  Iteration list no longer needs to be double-linked.

2016-10-17  Ethan A Merritt  <merritt@u.washington.edu>

	* src/parse.h src/parse.c:  Simplify the code that supports iteration.
	Part 1:  Do not try to pre-calculate and flag empty iterations.

	* src/parse.c:  Simplify the code that supports iteration.
	Part 2:  Do not pre-calculate whether an iteration is "just once".

	* src/parse.h src/parse.c:  Simplify the code that supports iteration.
	Part 3:  Re-write next_iteration() to use recursion.

	* src/parse.h src/parse.c demo/iterate.dem:  Dynamic reevaluation of
	iteration limits.  Allows inner loop to reference variable from outer
	loop:  E.g.    for [i=1:N] for [j=i:i+1] f(i,j)
	Bug #1817

2016-10-15  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/command.c (timed_pause) src/stdfn.h (GP_SLEEP):  Enforce usage of
	win_sleep() even if usleep() is available.
	Bug #1867

2016-10-13  Ethan A Merritt  <merritt@u.washington.edu>

	* src/wxterminal/wxt_gui.cpp:  Screen refresh must hold mutex lock,
	failure is triggered by resizing active plot window by dragging mouse.
	Bug #1845.

2016-10-10  Ethan A Merritt  <merritt@u.washington.edu>

	* src/eval.c src/save.c src/set.c src/show.c src/tables.c src/tables.h
	src/unset.c src/util.c src/util.h demo/special_chars.dem:

	New command "set micro" tells gnuplot to use an encoding-specific
	character sequence rather than "u" for the micro sign (unicode U+00B5)
	used as a prefix in scientific notation.  This affects the "%c" format
	used by gprintf() to label axis ticks.

2016-10-08  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgraph.c src/win/wmenu.c src/win/wtext.c:  Argument of the
	function ShowWindow is not a boolean.

	* src/win/wgdiplus.cpp:  Enable antialiasing for polygons without
	seams:  Draw a run of filled polygons to a bitmap four times as large
	as the canvas and scale down with interpolation.

	* src/color.c src/term_api.h:  Add layer calls for color box.

	* src/win/wgdiplus.cpp (W_image):  Draw images with GDI+ using nearest
	neighbour interpolation.

	* src/wxterminal/wxt_gui.cpp|h (wxt_cairo_create_platform_context):
	Let cairo manage the Windows GDI bitmap internally. Requires cairo 1.4.

	* src/wxterminal/wxt_gui.cpp (OnPrint):  Use wxDC::GetHDC() instead of
	GetHandle() since that is also available in wxWidgets 2.8.

	* src/win/wgraph.c (drawgraph):  Missed to recreate the brush in case
	of fractional solid fill was requested. Bugfix.

2016-10-06  Shigeharu Takeno  <shige@iee.niit.ac.jp>

	* docs/gnuplot.doc:  Fill in missing function definitions for "help"
	output.

2016-10-05  Ethan A Merritt  <merritt@u.washington.edu>

	* docs/gnuplot.doc docs/plotstyles.gnu src/save.c:  Refer to the plot
	style as "boxxyerror" rather than "boxxyerrorbars" to reduce confusion
	arising from the style not drawing bars of any sort.

2016-10-04  Hans-Bernhard Broeker  <broeker@physik.rwth-aachen.de>

	* src/win/wprinter.c: Has to include syscfg.h if definition of
	WINVER in there is to make any difference.

	* src/win/wpause.c: Dito.

2016-10-03 Allin Cottrell  <cottrell@wfu.edu>

	* src/win/wprinter.c:  Cross-compilation requires lower case include
	file names.

2016-10-03  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgdiplus.cpp src/win/wgraph.c: Implement oversampling for the
	GDI+ windows terminal, i.e. draw diagonal lines at fractional pixel
	positions to avoid "wobbling" effects.  Vertical or horizontal lines
	and point symbols are still snapped to the nearest pixel to avoid
	blurry lines.  Replaces the old "oversampling" method which drew on a
	bitmap four times as large and then scaled down.

	* term/win.trm:  Update documentation of graph-menu and wgnuplot.ini.

2016-10-01  Ethan A Merritt  <merritt@u.washington.edu>

	* src/term.c (enhanced_recursion): The enhanced text code was
	eating any whitespace that followed an opening '{'.  While this
	may not be noticeable in most cases, it breaks using the &{space}
	syntax to create or reproduce blank space in an enhanced text
	string.  Possibly the idea was to allow "{ /FontName
	text-in-new-font }" but the documentation has specifically
	disallowed this for many years.  Remove the offending loop that
	eats whitespace.  Bug #1863

	* src/boundary.c: Revised placement of x2label.

2016-10-01  Daniel J Sebald <daniel.sebald@ieee.org>

	* QtGnuplotItems.{h|cpp} (QtGnuplotEnhancedFragment::width):
	Introduce a true string width function rather than using boundingBox(),
	which ignores leading or trailing whitespace.  This repairs enhanced
	text overprint and place-holder markup in the qt terminal.
	Bug #1863

2016-09-28  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/mousecmn.h src/qtterminal/qt_term.cpp
	src/qtterminal/QtGnuplotEvent.h
	src/qtterminal/QtGnuplotWindow.cpp|h: Enable space-raises-console
	and terminal option "raise" for qt on Windows.  Since gnuplot and
	the qt terminal are realized as two different processes, the
	currently active process has to allow the other to "raise" itself.

	* src/win/winmain.c:  Change only the state of minimised windows when
	raising text or graph windows.  In particular that does leave
	maximised windows as they are.

2016-09-27  Ethan A Merritt  <merritt@u.washington.edu>

	* src/boundary.c: Use the shared routine write_label() to handle the 2D
	x, y, x2, and y2 axis labels rather than separate in-line code for each.
	This allows additional text properties for the axis labels, notably
	"boxed".  However this changes the effect of setting an offset for y, y2
	axis labels.  Previously this altered placement of the plot borders
	while leaving the absolute placement of the axis label on the page
	unchanged.  Now the plot borders remain fixed but the axis label moves.
	Bug #1550

	* term/svg.trm: Revert 2016-09-23 "in line images do not require png
	support".  Actually, they do.

	* src/plot2d.c (eval_plots):  Initialize fillcolor.

	* src/color.c: Use the shared routine write_label() to handle the 2D
	cb axis label.

	* src/stats.c: Do not use columnheader as a prefix for "stats" unless it
	is specifically requested.

2016-09-25  Ethan A Merritt  <merritt@u.washington.edu>

	* src/pm3d.c (set_plot_with_palette): When checking for plot elements
	that refer to palette coloring, go through the list of objects also.

2016-09-24  Ethan A Merritt  <merritt@u.washington.edu>

	* term/post.trm: postscript terminal support for rotation of boxed text.
	This happens to also remove incompatibility of "set minussign" and
	"set term post noadobeglyphnames" and utf8 encoding.

2016-09-24 Akira Kakuto <kakuto@fuk.kindai.ac.jp>

	* src/wxterminal/wxt_gui.cpp (OnExport):  VS2010 does not accept
	splitting the string argument for wxT().

2016-09-24  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgraph.c (MakeFonts):  Calculation of hchar and vtic lost
	precision.  Bugfix.

2016-09-23  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgdiplus.cpp (EnhancedPutText):  Fix reference of rotation
	for enhanced text.

	* src/win/wgraph.c src/win/wgdiplus.cpp:  Positioning of rotated text
	depends on the currently selected font and in particular on the font
	size.  Bugfix.

	* src/win/wgdiplus.cpp:  Take fontscale into account. Bugfix.

2016-09-23  Ethan A Merritt  <merritt@u.washington.edu>

	* term/svg.trm (SVG_image): Image support was conditional on png support
	but this can be relaxed for in-line images.

	* src/gadgets.c (write_label): If current textbox style has neither a
	border nor fill, then the "boxed" attribute can be ignored.

	* src/plot2d.c (cp_alloc): Initialize filledcurve_options to those from
	"set style data".

2016-09-22  Per Bothner  <per@bothner.com>

	* term/svg.trm (SVG_image): In domterm mode an embedded image should
	always be inline rather than linking to an external file.

2016-09-22  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/wxterminal/wxt_gui.cpp|h:  Add "print" toolbar button. For now,
	it is only available on Windows, but support could in principle be
	added for other platforms. See feature request #304.

	* src/wxterminal/wxt_gui.cpp:  Eliminate warnings about unused
	variables. Used define _WIN32 to test for Windows platform.

	* src/wxterminal/wxt_gui.cpp (wxtFrame::OnExport):  Save as enhanced
	metafile (emf). Only available on Windows.

2016-09-21  Ethan A Merritt  <merritt@u.washington.edu>

	* src/qtterminal/QtGnuplotScene.h src/qtterminal/QtGnuplotScene.cpp:
	qt terminal support for rotation of boxed text.

	* src/wxterminal/gp_cairo.c:
	cairo/wxt terminal support for rotation of boxed text.

2016-09-18  Ethan A Merritt  <merritt@u.washington.edu>

	* src/internal.c src/eval.h src/eval.c src/internal.h src/parse.c
	docs/gnuplot.doc:  New cardinality operator |A| reports number of
	entries in array A.   Example:  plot for [i = 1 : |A|] f(A[i])

2016-09-16  Ethan A Merritt  <merritt@u.washington.edu>

	* src/getcolor.c src/save.c src/show.c:  Remove unreachable case
	statements in color mode switch.  The fprintf warning they contained
	would have accessed uninitialized memory (found by canalyze static
	code analysis tool).

	* src/graph3d.c: Remove out-of-date comments.

	* src/graph3d.c (ztick_callback):  orientation of z-axis tick marks
	changes with azimuth.  "set zlabel rotate parallel" also.

2016-09-15  Ethan A Merritt  <merritt@u.washington.edu>

	* src/set.c docs/gnuplot.doc:  Ignore "set termopt {dashed|solid}".
	Remove use of this option from examples in the manual.

2016-09-14  Ethan A Merritt  <merritt@u.washington.edu>

	* src/multiplot.c:  Allow "boxed" attribute in the title for a multiplot
	layout. Example:  set multiplot layout 2,2 title "Example" boxed

2016-09-14  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgraph.c (drawgraph):  Fix a GDI resource leak which is
	only important when opening and closing a massive number of different
	graph windows.

2016-09-13  Ethan A Merritt  <merritt@u.washington.edu>

	* src/boundary.c src/graph3d.c src/set.c src/unset.c:  Write plot titles
	using the general routine write_label() rather than in-line code.
	This allows use of additional text properties, in particular "boxed".

	* src/graph3d.c (setup_3d_box_corners):  2016-09-06 revision to which
	plot edges have tic labels attached should not have been applied to
	"set view map" mode.

2016-09-12  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/mouse.c:  Change mouse pointer to indicate rotation during azimuth
	change via mouse.  Add a help text for dragging with mouse button 3.

	* src/mouse.c:  Revert mouse pointer to normal when enabling/disabling
	mouse mode.

	* src/win/wgraph.c (GraphInit):  Do not set an (automatic) window class
	mouse pointer.  As we set the pointer ourselves as required, that caused
	flickering of the mouse pointer.

	* src/win/wtext.c:  Change mouse pointer while marking text.

	* src/term/cairo.trm (cairotrm_init):  Redirection of output to a
	printer on Windows requires the use of gpoutfile.  Let pdfcairo on
	Windows always use the cairostream_write callback to enable printing
	of PDF files.

	* src/win/winmain.c (open_printer):  Open temporary file in binary mode
	as required e.g. for PDF data.

	* src/win/wgnuplib.rc src/win/wgraph.c (CopyPrint) src/win/wprinter.c
	(DumpPrinter):  Remove unused lower part of the "general" print
	property sheet by supplying an (empty) dialog template.  Add a note
	that printer settings will be ignored since the PRN file mechanism
	sends terminal output to the printer unaltered.

2016-09-11  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wprinter.c:  Previous change failed to apply default size
	when not the corresponding property sheet was not shown.

	* src/win/winmain.c (close_printer):  The code relied on a windows
	terminal graph window being opened, but should not.  Always supply a
	valid window handle to DumpPrinter().  Include the current terminal
	name in the print job title.

	* src/win/wprinter (DumpPrinter):  The Escape() PASSTHROUGH function
	was included in Windows 3(!) for backward compatibility with earlier
	versions and is no longer supported by some printer drivers.  Make
	use of the appropriate printer spooler API instead.  For constistency,
	use a print property sheet instead of a print-setup dialog here too.

2016-09-10  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graph3d.c src/graph3d.h src/mouse.c src/save.c src/set.c
	src/show.c src/unset.c src/eval.c docs/gnuplot.doc demo/azimuth.dem:

	New command "set view azimuth <angle-in-degrees>"
	Changing the view angles rot_x and rot_z cannot move the z axis out of
	the plane normal to the canvas horizontal. This patch adds a new angular
	setting "azimuth" that rotates the plane containing the z axis about
	the line of sight.  I.e. "set view azimuth 90" places the z axis
	parallel to the canvas horizontal rather than the canvas vertical.
	Click-and-drag with right mouse button provides interactive control of
	the azimuth.  Azimuth is ignored by 2D plots and by "set view map".

2016-09-09  Shigeharu Takeno  <shige@iee.niit.ac.jp>

	* docs/term-ja.diff docs/gnuplot-ja.doc:
	Sync Japanese documentation to doc version 1.1017

2016-09-08  Tatsuro MATSUOKA  <tmacchant3@yahoo.co.jp>

	* src/win/wgnuplot.exe.manifest src/win/wgnuplot.exe.manifest64:  Add
	compatibility flags vor Windows 7, 8, 8.1, and 10 to enable proper
	detection of the Windows version.
	Bug #1851

2016-09-08  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgraph.c src/win/winmain.c src/win/wprinter.c
	src/win/wcommon.h src/win/wgnuplib.h src/win/wgnuplib.rc:
	Replace the deprecated old-style print-setup dialog (which was shown
	when the user requests the windows terminal to print) by a print
	property sheet.  Integrate the previously separate dialog to request
	the print size.  This sadly requires quite a bit of code to implement
	a COM callback object.  Also we now properly clean-up printing
	resources.

	* src/eval.c:  Windows 10 also deprecated the VerifyVersionInfo API
	which is used by the external findversion.h, as well as GetVersionEx.
	Since the above patch fixes GetVersionEx's behaviour on all current
	Windows versions, there's no need to rely on findversion.h any more.
	See Feature Request 422

	* config/mingw/Makefile:  Resource target depends on manifest files.

2016-09-07  Ethan A Merritt  <merritt@u.washington.edu>

	* term/pslatex.trm:  For pslatex, epslatex, cairolatex "standalone"
	option, if the current encoding is utf8 then put a line in the output
	/usepackage[utf8x]{inputenc}
	Note that [utf8x] (not [utf8]) is needed to correctly process the
	degree sign and micro characters.

2016-09-07  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgraph.c src/win/wtext.c:  Ensure proper initalisation of the
	font chooser dialog also on non-english systems by using the LOGFONT
	fields to request bold or italic fonts instead of using strings.
	Request scalable fonts only, to ensure fonts can be scaled or rotated,
	or offer (some) Unicode characters.

2016-09-06  Daniel J Sebald <daniel.sebald@ieee.org>

	* src/graph3d.c (setup_3d_box_corners): Add quandrant processing for
	surface_rot_x similar to that for surface_rot_z.  This fixes
	inconsistent splot borders drawn when the base is upside down.
	Bug #1810

2016-09-06  Ethan A Merritt  <merritt@u.washington.edu>

	* src/stats.c: In the case of 'stats foo prefix columnhead' check that
	the string found in the column header is a legal identifier (i.e. rule
	out numbers and punctuation).

2016-09-05  Ethan A Merritt  <merritt@u.washington.edu>

	* src/tabulate.c( imploded ): The smoothing routine cp_implode()
	creates a new set of plots separated by dummy UNDEFINED points.
	However data files use a blank line to separate curves.  Thus
	  "set table foo; plot ... smooth freq"
	creates a file foo that is not in standard format, creating problems
	if it is read back in to plot later.  This patch replaces each
	UNDEFINED point with a blank line when smoothed data is tabulated.
	Bug #1274

2016-09-03  Ethan A Merritt  <merritt@u.washington.edu>

	* src/datafile.c term/svg.trm:  Remove dead code and comments.

	* src/stats.c:  Track and report number of lines treated as column
	headers rather than as data.

	* src/show.c:  Show state of 'autotitle columnheaders' even if the key
	is currently unset.

	* docs/gnuplot.doc:  Update sections referring to columnheaders.
	Note that the effect of `set key autotitle columnhead` extends to
	stats and fit commands, and applies even if the key is unset.

	* src/datafile.c (df_open):  Guarantee that first line of data is
	skipped if 'set key autotitle columnhead' is in effect regardless of
	whether the column headers are used.
	Bug #1751

2016-09-02  Ethan A Merritt  <merritt@u.washington.edu>

	* src/datafile.c (df_generate_pseudodata):
	Grid coordinates generated by splot '++' are subject to round-off error.
	This error is most noticeable at the plot boundary, where it may be that
	(sample_min + nsteps * stepsize != sample_max). This is more likely to
	be visible on 32-bit systems than on 64-bit systems.
	Force the final grid coordinate to be exactly sample_max.
	Bug #1850

2016-09-01  Ethan A Merritt  <merritt@u.washington.edu>

	* term/pslatex.trm:  The begin/end of plot bookkeeping of internal state
	that would otherwise be done by PS_layer() needs to be done instead by
	the replacement routine PSLATEX_layer().  In particular the final line
	a plot needs to be stroked and the linetype reset.
	Bug #1852

2016-08-28  Ethan A Merritt  <merritt@u.washington.edu>

	* demo/smooth.dem docs/gnuplot.doc:  Update docs for "smooth" option.
	Fix regression in demo caused by failure to promote N = points per bin
	to a real number.

2016-08-26  Per Bothner  <per@bothner.com>

	* term/svg.trm src/term.c (init_terminal):
	New terminal "domterm" wraps svg output in escape sequences compatible
	with in-line display in terminal emulators based on DomTerm
	(http://domterm.org). Conceptually similar to the tektronix, sixel,
	selanar etc graphic modes that interleaved with text output in
	old-school character cell terminals or emulators like xterm.

2016-08-25  Ethan A Merritt  <merritt@u.washington.edu>

	* src/color.c src/set.c src/gadgets.c src/gadgets.h src/tables.c
	src/tables.h src/save.c src/show.c docs/gnuplot.doc:  New keyword
	"set colorbox {{no}invert" flips the top/bottom orientation of a
	vertical gradient; i.e. the same color maps to the same numerical value
	but the orientation of the sample is inverted.  Display of horizontal
	gradients is not affected.
	Tracker issue #1808

	* src/wxterminal/wxt_gui.cpp (wxtFrame::OnExport):  Revisit the file
	export widget. I misread the code previously, thinking there was only a
	single global command list. Actually there is a global pointer but each
	window has its own command list.  So we really can export inactive plots
	as well as the active plot.  The global command list pointer is now
	unused so get rid of it.
	Bug #1843

2016-08-24  Ethan A Merritt  <merritt@u.washington.edu>

	* src/plot2d.c (refresh_bounds box_range_fiddling): Improved autoscaling
	of plots "with boxes". Extend y range to 0. Distinguish between absolute
	and relative boxwidth.
	Bug #1827

	* src/plot2d.c (eval_plots): "smooth {freq|fnorm|cum|cnorm}" operations
	replace the original data, which invalidates autoscaling during input.
	Now we save/restore autoscale state during input so that autoscaling of
	the smoothed data starts from a clean slate.
	Bug #1826

2016-08-22  Ethan A Merritt  <merritt@u.washington.edu>

	* src/gadgets.h (arrow_end_undefined) src/set.c src/graphics.c:
	Initialize arrow structure to have type arrow_end_undefined.
	If we see an arrow with that type later, it indicates corruption due
	to an error exit from "set arrow".

	* src/eval.c (evaluate_at): Make unsupported array operations fatal
	(int_error) rather than informational (int_warn).  The int_warn version
	eventually returned UNDEFINED or NaN to the caller, and not all callers
	were prepared to deal with that.  E.g.
	    array A[1]; set xrange [0:A]; set param; splot u,u,u ---> boom!

	* src/tabulate.c (output_number):  Oops. Forgot to check for log being
	implemented via nonlinear axes.  This should have been part of the
	nonlinear axis patch set.

2016-08-21  Ethan A Merritt  <merritt@u.washington.edu>

	* src/wxterminal/wxt_gui.cpp (wxtFrame::OnExport):  The Export widget
	on a plot window should dump a copy of the plot in that window, not a
	copy of the currently active plot.  Modify the OnExport function
	accordingly.  Unfortunately to generate PDF or SVG files we want to
	reexecute the list of commands that generated the plot, but we only
	keep such a list for the currently active plot.  So Export from
	inactive windows is limited to the clipboard or PNG files.
	Bug #1843

	* src/readline.c (getc_wrapper):  Clear errno before reading next
	character.  This fix contributed anonymously.
	Bug #1846 #1865

2016-08-19  Ethan A Merritt  <merritt@u.washington.edu>

	* src/util.c (squash_spaces) src/util.h src/command.c:
	Modify squash_spaces() utility routine to optionally leave a single
	space in place of whitespace or remove whitespace altogether.

	* src/datafile.h src/datafile.c src/stats.c docs/gnuplot.doc:
	Rearrange the order in which we parse the "stats" command.
	This allows passing "columnheader" or "columnheader(N)" to the
	"name" option rather than a fixed character string.
	Bug #1841

	* src/axis.c (eval_link_function) src/save.c (save_nonlinear):
	If there is an expression-parsing error while processing a
	"set nonlinear" command, the forward/reverse axis mapping can be
	left in a corrupted state.  Add a sanity check for this to prevent
	bad things from happening when the axis mapping function is invoked.

	* src/axis.c (gstrdms):  Sanity check user-provided format.
	Reject format characters that are not handled explicitly.

	* src/stats.c (statsrequest):  Early exit if there are no usable points.

	* src/fit.c (update): Fix error in error reporting (null filename).

2016-08-18  Ethan A Merritt  <merritt@u.washington.edu>

	* src/fit.c: Clear SAMPLE_AXIS before using it as scratch space.

	* src/eval.c src/eval.h (free_at): afl-fuzz found multiple crashes
	caused by trying to evaluate a defunct action table.  This patch wraps
	free_at() in a macro that clears the pointer to an action table after
	freeing it.

2016-08-17  Dima Kogan  <dima@secretsauce.net>

	* src/gp_types.h src/interpol.c src/plot2d.c src/tables.c
	docs/gnuplot.doc:  New option "smooth fnormal" plots normalized
	frequency, analogous to plot foo using 1:(1./total) smooth freq"

2016-08-17  Daniel J Sebald <daniel.sebald@ieee.org>

	* term/lua.trm: Warn on error from fflush() or ftruncate().
	Bug #1840

2016-08-17  AMD  <allanduncan@sf.net>

	* term/post.trm: Different treatment of simplex/duplex option
	depending on whether the PostScript support is limited to Level 1.

2016-08-16  Ethan A Merritt  <merritt@u.washington.edu>

	* src/misc.c (lp_parse) src/plot2d.c (eval_plots): Remove order
	dependence of the "fillcolor" keyword and confusion with line style.
	For example these commands were not working:
	    plot 'silver.dat' with boxes fs solid 1.0 border -1 fc "cyan"
	    plot 'silver.dat' with boxes fc "cyan" fs solid 1.0 border -1 lw 2

	* src/graphics.c (plot_filledcurves) src/plot2d.c (cp_extend)
	src/plot2d.c docs/gnuplot.doc:
	This is a CHANGE in filledcurves behaviour with repect to fillstyle.
	The fillstyle "border" attribute is now ignored except for filledcurves
	option "closed", the default. In order to make sure the border is
	drawn all the way around, duplicate the first point at the end.

2016-08-12  Ethan A Merritt  <merritt@u.washington.edu>

	* src/plot3d.c (eval_3dplots) src/plot2d.c (eval_plots):
	Check for legal log-scaled axis ranges before trying to plot.

	* src/axis.c (axis_log_value_checked):  Rewrite test for positive
	values so that it catches NaN as well as negative numbers.

	* src/command.c (link_command): More robust handling of error during
	'set link' or 'set nonlinear' commands. Do not fill in the
	axis->linked_to_* fields until after the points of potential failure.

	* src/eval.c src/eval.h (free_at): afl-fuzz found multiple crashes
	caused by trying to evaluate a defunct action table.  This patch wraps
	free_at() in a macro that clears the pointer to an action table after
	freeing it.

2016-08-11  Ethan A Merritt  <merritt@u.washington.edu>

	* src/plot2d.c (box_range_fiddling):  afl-fuzz found a crash caused by
	 an incorrect test for no data points.

	* src/command.c (link_command):  If the "set nonlinear" failed to
	complete it could leave an axis marked as nonlinear but with no mapping
	functions defined.  Now we reset the links on failure.

	* src/set.c (encoding_minus):  Comment out replacement of the SJIS minus
	sign character.  The character itself is correct but it is a full-width
	rather glyph so it does not mix well with half-width digits in a number.
	This problem is specific to SJIS.

2016-08-11  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgraph.c:  Print the error code if opening the print dialog
	should fail.

	* config/config.nt (HAVE_ERF, HAVE_ERFC, HAVE_STDBOOL_H, isnan
	EAM_OBJECTS):  Version dependent macros to re-enable compilation
	with at least VS2012 or newer.

2016-08-10  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgraph.c (CopyPrint) src/win/wprinter.c (DumpPrinter)
	src/win/wresourc.h src/win/wgnuplib.rc src/win/wgnuplot.rc:
	Add a progress bar to print progress dialog.  Bump minimum Windows
	version to XP here, too.

	* src/win/wgnuplib.rc:  Change (nominal) font size of most dialogs to
	8pt in order to match Windows default settings.

	* src/win/wresourc.h:  Message code for saving as bitmap was in conflict
	with the message code for hiding graph #2.  Bugfix.

	* src/win/wcommon.h src/win/wgraph.c src/win/wprinter.c:  Store the
	memory handles itself to save the user's printer selection (instead of
	the pointer returned by GlobalAlloc) and use them in all printer
	dialogs. Bugfix.

	* src/win/wprinter.c (DumpPrinter, PrintDlgProc) src/win/wgraph.c
	(CopyPrint) src/win/wgnuplib.h (GP_PRINT):  Changing the private data
	of some possibly unknown window is dangerous.  Store the pointer to the
	printer data in the dialog's 'WindowLong's instead.

	* src/win/wprinter (DumpPrinter):  The Escape() function always expects
	a byte encoded string, irrespective if UNICODE is defined or not.
	Explicit type casting may hide errors. Bugfix.

2016-08-09  Hans-Bernhard Broeker  <broeker@physik.rwth-aachen.de>

	* config/msvc/Makefile (#QTDIR, TOP, MOC, UIC, RCC, S, W, WX, Q)
	(T, D, M, {$(S)}.c.obj, {$(S)}.c.cobj, $(HELPFILE), doc2html.exe)
	($(M)bf_test.exe, demo_plugin.dll): Reduce slightly excessive use
	of double backslashes.
	(VERSION_CPPFLAGS): Define version numbering flags.
	(doc2html.exe): Pass version numbering flags.
	(COMMONLIBS): Add newly required lib shlwapi.

	* config/config.nt (HAVE_ERF, HAVE_ERFC, HAVE_STDBOOL_H, isnan):
	Configure macros for current version of MSVC (VS 2015).

2016-08-09  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgdiplus.cpp:  Fix two more memory leaks.

	* src/win/wcommon.h src/win/wgnuplib.h src/win/wgraph.c
	src/win/wgdiplus.cpp:  GDI+ implementation of enhanced text.
	Until now the GDI+ backend still used the GDI code to draw enhanced
	text, which caused differences in layout if text was rendered as
	"normal" or enhanced text.  We now re-use the previous GDI-only
	routines and introduce function pointers to call GDI or GDI+ code
	depending on if they are called from drawgraph() or
	drawgraph_gdiplus().

	* src/win/wmenu.c:  Loading of icon images requires GDI+.  Add an error
	message if support for it is not compiled in.  Fix the case when
	GNUPLOT_SHARE_DIR is not defined.

	* term/svg.trm:  The change on 2016-08-05 did not handle the case
	of GNUPLOT_JS_DIR being undefined.

	* src/win/wtext.c:  getc might be a macro and thus needs to be
	undefine'd before redefinition.

	* src/win/wgdiplus.cpp:  Include iostream.h before syscfg.h in order
	to avoid MSVC choking on the re-definition of stdio routines by
	wtext.h/winmain.c.  Do not use namespace std since this causes MSVC
	to throw an error because of the (re-)definition of bool in syscfg.h.

	* src/win/wmenu.c:  Move variable declaration to beginning of code
	block.  Required e.g. by MSVC 2012.

	* src/win/wgraph.c src/win/wgdiplus.cpp (W_hypertext):  Use the
	encoding which was active while plotting, not the current one, to
	display hypertext.

2016-08-09  Hans-Bernhard Broeker  <broeker@physik.rwth-aachen.de>

	* config/mingw/Makefile:  Enforce calling the lua executable instead
	of the lua wrapper script of Mingw64.  Better fix for the build failure
	of gnuplot-tikz.help.

2016-08-08  Bastian Maerkisch  <bmaerkisch@web.de>

	* config/mingw/Makefile:  Avoid warning messages when using clang.
	Qt 5.x assumes C++11. Omit C++ flags when building gp_cairo.c.
	Japanese help file was missing a graph from the demos.  Execute lua
	via the cmd.exe shell in order to avoid errors when redirecting its
	output.  Remove obsolete flag CONSOLE_SWITCH_CP.  Do not enable caca
	terminal by default.

2016-08-07  Ethan A Merritt  <merritt@u.washington.edu>

	* src/save.c src/set.c src/show.c src/tables.c src/tables.h src/unset.c
	src/util.c src/util.h docs/gnuplot.doc term/js/canvasmath.js:

	New command "set minussign" tells gprintf() to use an encoding-specific
	minus sign character for numeric output rather than the ascii hyphen
	character produced by sprintf().
	    UTF-8:	Unicode U+2212 "minus sign"
	    CP1252:	ALT+150 "en dash"
	    SJIS:	0x817c
	    default:	ascii \055 "hyphen"

	The substitution of minus sign for hyphen is not made during tabular
	output ("set table") or when the current terminal is a LaTeX terminal.
	It affects only numbers formatted by gprint().  Other hyphens are
	not affected even if they are in a gprintf format string.

	* src/boundary.c (do_key_layout):  Tweak vertical spacing of key titles
	to make the result more like previous versions (in particular
	the canvas terminal).  See patch of 2016-07-14

2016-08-06  Tatsuro MATSUOKA  <tmacchant3@yahoo.co.jp>

	* src/wxterminal/wxt_gui.h:  Correct spelling of include file name.
	Bug #1836

2016-08-06  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/command.c src/plot.c src/syscfg.h src/win/winmain.c|h
	src/win/wtext.c|h:  Enable support for encodings (including UTF-8) for
	console mode gnuplot on Windows.
	Patch #734

	* src/win/wmenu.c src/win/wgdiplus.c|h src/win/wgnuplot.mnu:  Images
	of toolbar icons can be read from a file.

2016-08-05  Ethan A Merritt  <merritt@u.washington.edu>

	* src/plot2d.c src/set.c src/mouse.c:  When logscaling is implemented
	via nonlinear axes, any test for "if (R_AXIS.log)" must come _after_
	a test for "if nonlinear(&R_AXIS)". Only affects logscaled polar axis.
	Nonlinear axes part 19

2016-08-05  Bastian Maerkisch  <bmaerkisch@web.de>

	* term/canvas.trm term/lua.trm term/svg.trm term/post.trm src/plot.c
	src/win/winmain.c|h:  The code to determine paths relative to the
	gnuplot executable on Windows spread by copy and paste.  Let all those
	sites call a single new function instead and fix an improper handling
	of wide strings which was overlooked due to an explicit type cast.
	Fix memory leaks while at it.
	Bug #1837

2016-08-04  Ethan A Merritt  <merritt@u.washington.edu>

	* term/svg.trm:  Better vertical justification of rotated text.

	* src/qtterminal/QtGnuplotScene.cpp src/qtterminal/QtGnuplotItems.cpp:
	*.pcf (bitmap) fonts are non-rotatable. Furthermore Qt can die horribly
	while trying (seen with Qt 5.4.2). To make matters worse, requesting
	font "Times" may give you the Adobe pcf font Times (perfect name match)
	rather than a rotatable ttf or odf font like TimesNewRoman.  This patch
	adds style strategy QFont::ForceOutline to forbid selection of a
	bitmap font.

2016-08-03  Ethan A Merritt  <merritt@u.washington.edu>

	* src/set.c src/gadgets.h src/plot2d.c demo/rotate_labels.dem
	docs/gnuplot.doc demo/all.dem:  New option `rotate variable` to assign
	a separate rotation angle for each point in a 2D plot using the
	contents of the 4th entry in the `using` specifier.
	    plot foo using 1:2:3:4 with labels rotate variable

	* src/datafile.c:  Matrix dimensions were not being adjusted to account
	for subsampling by "every" in the using specifier, so "with image"
	plots came out mangled.  This was a regression from 4.6.6
	Bug #1835

	* demo/matrix_every.dem demo/all.dem:  Add demo that serves as a unit
	test for the above regression and fix.

2016-08-02  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.h src/plot2d.c:
	Stricter definition of nonlinear(axis) allows to distinguish nonlinear
	axes from linked (linear) axes.

	* src/axis.h demo/nonlinear2.dem:
	Rework tic and particularly minitic generation for nonlinear axes,
	including special case code for logscale axes.  The default minitics
	for log-scale axes in this mode are now always equivalent to
	"set mtics base" (i.e. unit intervals 1-9 for log10).
	Nonlinear axes part 17

2016-08-01  Ethan A Merritt  <merritt@u.washington.edu>

	* src/unset.c:  "unset y2mtics" was clearing the setting for x, not y2.

	* src/axis.h src/command.c src/unset.c: Internal flag ticdef->logscaling
	was not being cleared by "unset log" or "set nonlinear".
	Nonlinear axes part 16

2016-07-31  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/wxterminal/wxt_gui.cpp:  Handle errors when creating a cairo
	surface.
	Bug #1621

2016-07-29  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graph3d.c:  "splot ... with dots" was accidentally broken by the
	addition of multibyte PT_CHARACTER support.  This was a regression from
	released versions of 5.0.

2016-07-27  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgraph.c src/win/wgdiplus.cpp|h src/win/wresourc.h:  Add an
	option to the menu to save the current graph as bitmap.  Supports all
	encoders available to GDI+.  On my system that is (TIFF, JPEG, GIF,
	PNG, and BMP).  Defaults to PNG.

	* src/win/wgraph.c (SaveAsEMF):  Tweak flags for GetSaveFileName() to
	make sure that the file/path is not read-only and to preserve the
	current working directory.

2016-07-26  Bastian Maerkisch  <bmaerkisch@web.de>

	* win/gnuplot.iss:  Enforce inclusion of directory and program group
	pages since the default changed in Inno setup version 5.5.7.
	Bug #1831

2016-07-25  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgraph.c src/win/wmenu.c:  Use the "large" icon set for the
	toolbar if the nominal resolution is larger than 96dpi.  Use
	TB_ADDBUTTON instead of TB_LOADIMAGES as this somehow eliminates
	another major resource leak.

	* src/win/wgraph.c (drawgraph) src/win/wgdiplus.cpp(drawgraph_gdiplus):
	Missing cleanup of cached point symbols caused a sizeable resource
	leak. Bugfix.

2016-07-24  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgnuplot.exe.manifest src/win/wgnuplot.exe.manifest64
	src/win/wgraph.c src/win/winmain.c|h src/win/wtext.c:
	Windows scales gnuplot's windows according to the monitor's scaling
	factor.  This in turn may be based on the monitor's DPI or an explicit
	user setting.  In consequence gnuplot's text window and plot output look
	blurred e.g. on high-resolution screens.  This changeset makes gnuplot
	(system) DPI aware so that Windows no longer scales automatically
	(at least in the most common case).  Window sizes in wgnuplot.ini are
	(still) interpreted to be given in the default resolution of 96dpi.
	See also bug #1807.

	* src/win/wtext.c (DoLine):  Fix off-by-one error which caused the
	area below the last line to contain garbage in some cases.

2016-07-23  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgdiplus.cpp src/win/wgraph.c:  Textbox fillcolor and
	bordercolor support for windows terminal.  Transparency works
	except when using the GDI only variant with antialiasing disabled.

	* src/win/wgdiplus.cpp:  Use StringFormat::GenericTypographic() to draw
	text.  This reduces differences in text placement between GDI and GDI+
	output.

2016-07-22  Ethan A Merritt  <merritt@u.washington.edu>

	* src/gadgets.c src/gadgets.h src/save.c src/save.h src/set.c
	src/show.c docs/gnuplot.doc:
	Bookkeeping and core code implementation of textbox fillcolor and
	bordercolor. Note that transparency is possible if the fillcolor
	contains an alpha component.

	    set style textbox {noborder | border {<border_color}}
	                      {fillcolor <fill_color>}

	* src/qtterminal/QtGnuplotScene.cpp src/wxterminal/gp_cairo.c
	term/cairo.trm term/gd.trm term/lua/gnuplot-tikz.lua term/post.trm
	term/pslatex.trm term/tkcanvas.trm src/gplt_x11.c:
	Textbox fillcolor support for individual terminals.

	* demo/all.dem demo/textbox.dem:   New demo

2016-07-21  Bastian Maerkisch  <bmaerkisch@web.de>

	Enable UNICODE build on Windows.
	Patch #727

	* src/command.c src/show.c src/win/wcommon.h src/win/wgdiplus.cpp
	src/win/wgnuplib.c|h src/win/wgraph.c src/win/winmain.c|h
	src/win/wprinter.c src/win/wtext.c term/gd.trm term/win.trm
	config/mingw/Makefile config/watcom/Makefile:

	Windows offers two versions of its API:  a (multi-byte) variant
	termed "ANSI" and a Unicode (wchar_t) variant "W".  A set of TCHAR
	macros and types enables writing code which can be compiled with
	or without the UNICODE/_UNICODE flags being set.  With this change
	gnuplot on Windows now uses the Unicode variant by default.  While this
	at first looks like a massive set of changes, most of it is actually
	rather simple:
	  - Wrap strings constants in TEXT() macros.
	  - Use TCHAR types instead of plain char types.
	  - Replace string functions by tchar equivalents:
		_tcsdup (strdup) wsprintf (sprintf) _tcscmp (strcmp)
		_tcscpy (strcpy) _tcsncpy (strncpy) _tcscat (strcat)
		_tcsstr (strstr)
	  - Modify printf format strings.
	In addition we now explicitly call "ANSI" functions, or provide
	conversions from CHAR to WCHAR or vice versa in some cases.

	* src/show.c (show_version):  Add UNICODE build information to output of
	"show version long".

	* src/external.c|h:  Use dll_open_w() also for console mode gnuplot
	on Windows.

	* src/command.c src/show.c src/win/wgnuplib.h src/win/wgraph.c
	term/win.trm:  Define TCHARFMT to abstract the format string required
	for printf etc. for TCHAR strings.  Use it to fix a few format strings.
	Note that Mingw64 seems to accept %ls but not %ws which according
	to MSDN are supposed to mean the same thing.

2016-07-21  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgdiplus.c wrc/win/wgnuplib.h src/win/wgraph.c term/win.trm:
	Aggregate related move/vector requests in a polyline.  This saves
	space in the internal list of drawing commands and accelerates
	re-drawing since the terminal code does not have to do this repeatedly.

2016-07-20  Ethan A Merritt  <merritt@u.washington.edu>

	* src/history.c (write_history_list):  Recent regression caused the
	the history list numbering to be off-by-one. E.g. "history !N"
	mistakenly re-executed command N-1 rather than command N.
	See also Bug #1763

2016-07-19  Jun Takimoto <takimoto-j@kba.biglobe.ne.jp>

	* term/aquaterm.trm:  The AQUA_boxfill() routine scales very badly
	with the total number of rectangles, making it horribly slow when
	invoked by "plot $foo with image pixels".  Set the terminal flag
	TERM_POLYGON_PIXELS so that the image processing code will call
	term->filled_polygon() in preference to term->fillbox().

2016-07-15  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgdiplus.cpp (W_enhanced_text):  Apply text color to enhanced
	text.
	Bug #1829

2016-07-14  Ethan A Merritt  <merritt@u.washington.edu>

	* docs/gnuplot.doc docs/plotstyles.gnu demo/custom_key.dem:
	Add custom key demo figure to the documentation.

	* src/boundary.c (do_key_layout):
	The command 'set key spacing <foo>' adjusts the vertical spacing of
	entries in the key.  However a complicated minimum size test caused the
	result to be discontinuous as a function of <foo>.
	I.e. 'set key spacing 2' came out the same as 'set key spacing 1'
	but both were smaller than 'set key spacing 1.8'.
	This patch makes the vertical spacing a simple multiplier for
	character height in the current font.  It also dissociates the
	height of the key sample itself from the line spacing.

2016-07-08  Ethan A Merritt  <merritt@u.washington.edu>

	* src/gadgets.c (write_label): Consolidate code to create a textbox for
	this label.

	* term/pslatex.trm: Implement textbox margins.

	* src/qtterminal/qt_term.cpp src/qtterminal/QtGnuplotScene.cpp
	src/qtterminal/QtGnuplotScene.h:  Implement textbox margins.

	* src/wxterminal/gp_cairo.c (gp_cairo_boxed_text): Reduce textbox
	margin size and linewidth to better match other terminals.

2016-07-04  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/screenbuf.c|h src/win/wtext.c:  Handling of colored text
	was lost when re-working the text window's internals for the 4.6
	release in 2011.  Turns out that it is not too hard to re-enable
	that again.

2016-07-03  Ethan A Merritt  <merritt@u.washington.edu>

	* src/util.c (print_line_with_error):  Replace macros
	PRINT_MESSAGE_TO_STDERR PRINT_SPACES_UPTO_TOKEN PRINT_FILE_AND_LINE
	with new utility routine.  Add code to reconstruct the original input
	line number by counting \n characters embedded in a command line
	produced by concatenation of successive lines in a bracketed clause.

	* src/graphics.c(plot_betweencurves):  The filled curve options y=foo,
	below y=foo, etc were reworked to piggyback on the 'fill between' code
	by pre-loading ymax with foo on data input.  However this mechanism
	breaks if the curve is smoothed because ymax is lost during smoothing.
	Revert the case of smooth + filledcurves + y=foo to use the original
	FILLEDCURVES_ATY1 code.  This original rationale (IIRC) was to get
	better clipping but since we now have good general case polygon
	clipping perhaps all the piggyback cases should be reverted.

2016-07-02  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/command.c (changedir):  Handle encodings (Windows).

	* src/term.c:  Replace local function prototypes with proper include.

	* src/win/wtext.c:  Ctrl-C copies text to clipboard if there's
	selected text or sets the Ctrl-C (break) flag otherwise.

	* src/win/wtext.c (UpdateScrollBars):  The size of the scroll bar
	thumb reflects the length or width of the scrollable area.

2016-07-02  Jun Takimoto <takimoto-j@kba.biglobe.ne.jp>

	* configure.ac:  The change of 2016/05/23 to the --with-readline=DIR
	code did not properly handle the case when libedit is installed and thus
	found by AC_CHECK_HEADERS, but we really want to point to GNU readline
	installed in DIR.

2016-06-22  Ethan A Merritt  <merritt@u.washington.edu>

	* RELEASE_NOTES demo/plugin/Makefile.am:  Note compiler flags needed
	to build gnuplot using Solaris SunPro C compiler.
	Bugs #1786 #1821

2016-06-20  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wtext.c (UpdateCaretPos):  Fix a resource leak which occurred
	only if the encondig is set to utf8 or sjis.

	* src/readline.c (readline):  VREPRINT conflicts with hard-coded ^R for
	reverse-search.  Deactivate that section.

	* src/history.c (gp_read_history):  Cast argument of isspace() to
	unsigned char.

	* src/history.c (write_history_list):  Avoid adding extra leading
	spaces when saving to a file.  Index of history_get is zero-based
	relative to history_base.

	* src/history.c (write_history_list):  Let the built-in readline use
	the same code as is used for GNU readline and libedit.

2016-06-17  Ethan A Merritt  <merritt@u.washington.edu>

	* parse.h plot2d.c plot3d.c:  Tracking the wrong iteration
	variable (iteration_current rather than iteration) caused plot
	command iteration with a negative increment to fail to iterate at all.
	E.g. 'plot for [i=9:1:-1] foo' plotted only the single plot with i=9.
	Bug #1819

	* src/graph3d.c (draw_3d_graphbox): Don't draw ztics or tic labels
	at view angle rot_x=0 (projection along z axis).

2016-06-15  Ethan A Merritt  <merritt@u.washington.edu>

	* src/datafile.c (check_missing):  Fix test for explicit 'set missing'
	string in a csv file (previous check assumed the string was followed by
	whitespace rather than a field separator).

	* src/graphics.c:  Rearrange code to avoid compiler warning about
	unused variable image_z_axis.

2016-06-14  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/readline.c src/plot.c config/config.mgw config/mingw/Makefile:
	Allow console mode gnuplot on Windows to use GNU readline, which is
	more powerful than the builtin code, but still does not handle Unicode
	input on Windows.

2016-06-13  Daniel J Sebald <daniel.sebald@ieee.org>

	* term/tkcanvas.trm:  Error check for ftruncate().
	Bug #1798

2016-06-12  Daniel J Sebald <daniel.sebald@ieee.org>

	* src/graph3d.c:  Better fix for bug #1809 (placement of xyplane
	independent of tics or grid lines).

2016-06-12  Shigeharu Takeno  <shige@iee.niit.ac.jp>

	* src/gplt_x11.c (gpXTextExtents):  Wrap call to XTextExtents() in a
	routine that checks first for multibyte support.

2016-06-09  Ethan A Merritt  <merritt@u.washington.edu>

	* src/set.c (set_table) docs/gnuplot.doc:  New option to append tabular
	plot output to an existing file.  "set print" already works this way.
	    set table "outfile" {append}

	* src/multiplot.c (multiplot_start):  Remove alarming warning messages
	if default values for inter-plot spacing are used.

	* src/axis.c src/axis.h src/plot3d.c:  Remove unused macro definitions.

2016-06-08  Ethan A Merritt  <merritt@u.washington.edu>

	* src/stats.c:
	Since we now store the data value itself rather than log(value), there
	is no longer a problem running stats while the axes are log-scaled.

	* src/stats.c:  An unreadable line in a data file should not be a fatal
	error in "stats".  Print a warning and keep going.

2016-06-07  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graph3d.c demo/piecewise.dem:  Consistent placement of xyplane
	regardless of whether tics or grid lines are present.
	Bug #1809

2016-06-05  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.h (ACTUAL_STORE_WITH_LOG_AND_UPDATE_RANGE):
	Since we now store the data value itself rather than log(value), there
	is no longer a need to replace non-positive values with NaN on input.
	Nonlinear axes part 15

2016-06-04  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.h (ACTUAL_STORE_WITH_LOG_AND_UPDATE_RANGE):
	Only update axis->data_min/max if the point being stored is INRANGE.
	Bug #1804

2016-05-31  Ethan A Merritt  <merritt@u.washington.edu>

	* set/set.c (set_palette):  Disallow "set palette maxcolors 1" because
	this causes divide-by-zero errors during color smoothing.
	Reported originally as an Octave bug
	https://bugzilla.redhat.com/show_bug.cgi?id=1340660

2016-05-27  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/readline.c src/gnuplot.doc:  ^R starts a backward-search through
	the history.  Searches the command history as you type.  Use ^R/^S to
	find the next/previous match.

	* src/history.c (history_find_by_number, history_find,
	history_find_all):  Share the functions for GNU readline and the
	built-in code.  Remove the old specialised code.

2016-05-27  Ethan A Merritt  <merritt@u.washington.edu>

	Nonlinear axes part 14.

	* src/axis.h src/save.c src/set.c src/unset.c src/pm3d.c src/pm3d.h:

	- Turn all the log/delog macros into no-ops, including z2cb.
	This reduces the size of the gnuplot executable by 1-2% and removes
	any behavioral dependence on the axis->log flag in the core code.

	- Repurpose the axis->log flag to special-case nonlinear axes that
	were set up using the "set log" command.  This makes the save and show
	commands report axes as log-scaled if they were set up by "set log"
	but not if they were manually defined using "set nonlinear" even though
	the result is otherwise the same.  It also allows mousing of logscaled
	axes in the svg and canvas terminals.

	The implementation of "set log" has now been almost entirely replaced.
	This should be transparent to users.  I know of only a few exceptions.

	- In some cases the range limits chosen for autoscaled log axes come
	out slightly different with the new implementation.  In most cases this
	is an improvement, but it is possible there are other cases where the
	new autoscaled range is less satisfactory.
	Bug #1590

	- Log scaling proper and choice of log-scale axis tics are now
	separable. This addresses several long-standing bugs, including
	Bug #10 filed back in 2000!  I.e. even if the axis is log-scaled,
	you can still user "set tics <inc>" or "set tics nolog".
	Bug #10 Bug #1250

	- Minor axis tics now work as expected over all logscale axis ranges.
	Bug #1748

	- The new code is slightly slower.  Speed will be recovered in a
	separate patch.

2016-05-26  Ethan A Merritt  <merritt@u.washington.edu>

	* src/pm3d.c src/pm3d.h:  Make z2cb() a macro that calls the original
	routine.  This will allow us to replace it cleanly with a no-op later.

	* src/set.c src/unset.c src/axis.h src/command.c src/axis.c:
	Nonlinear axes part 13.
	Re-implement the "set log <axis>" command internally as the pair of
	commands "set nonlinear <axis> via log10(x) inv 10**x; set xtics log".
	Similarly for an explicit base "set log <axis> <base>" and for
	"unset log".  The new code is selected by #define NONLINEAR_AXES 1
	The orignial code is still in place and can be selected either by
	1) ./configure --without-nonlinear-axes
	   (equivalent to #undef NONLINEAR_AXES)
	2) #define NONLINEAR_AXES 0
	   nonlinear axis support selected but "set log" command doesn't use it.

	Note: at this stage the "show" and "save" commands report logscaled
	axes as nonlinear but do not recognize that this is from "set log".
	The next patch set will repair this.

2016-05-26  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/readline.c (fn_completion):  Allow filename completion for system
	commands '!' and after pipe symbols '<', '|'.
	Bug #1747

2016-05-25  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/gp_hist.h:  Make (now) internal variables static.

	* src/readline.c:  Use the new readline-compatible functions to access
	the history.

	* src/command.c src/gp_hist.h src/history.c:  Use the new add_history
	function to add items to history.  Remove the old one.

	* src/gp_hist.h src/history.c:  Add functions similar to the GNU
	history library.  These will eventually be used to merge codepaths
	which use GNU readline/history and the built-in readline to ensure
	consistent behaviour.

	* src/command.c (history_command):  The `history !` command replaced
	the last command in the history list by the search result.  That used
	to be the history command itself, but since 2016-03-31 history
	commands are no longer stored in the history.  Now simply re-add
	the search result to the history.  Bug fix.

	* src/syscfg.h src/command.c src/gp_hist.h src/history.c src/show.c:
	New define USE_READLINE instead of a growing list of checks for
	(more or less) GNU readline compatible libraries.  Prepares for
	using WinEditLine on Windows.

	* src/plot.c (main) src/command.c (rlgets)
	src/readline.c|h (readline_ipc):  Move initialisation of
	rl_getc_wrapper from readline_ipc() to main() also for GNU readline.
	Remove the wrapper function readline_ipc.

2016-05-23  Ethan A Merritt  <merritt@u.washington.edu>

	* src/datafile.c:  partial "every" specifiers are not compatible with
	image plots.  Ignore them when figuring out image dimensions.
	Bug #1796

2016-05-23  Bastian Maerkisch  <bmaerkisch@web.de>

	* term/win.trm:  Fix a few format specifiers for POINT members which
	are of type long int.

	* configure.ac:  Auto-detect if --with-readline=DIR refers to GNU
	readline or NetBSD editline.

	* src/win/wtext.c:  When pasting, escape tab characters by ^V instead
	of replacing them by space.
	Bug #1444

	* src/readline.c docs/gnuplot.c:  Ctrl-V disables the interpretation
	of the following key as editing command.  Hence, tabs can now be
	inserted again by pressing ^V TAB.  On Windows, Ctrl-V is not passed
	on to the built-in readline, though, but interpreted as "paste".

	* src/win/wmenu.c src/win/wgnuplib.h:  Use UTF16 "W" APIs to handle
	Unicode.  This affects all menu dialog boxes (open/save, directory,
	input).  It is still assumed that wgnuplot.mnu is encoded using the
	ANSI codepage.  Reformat source while at it.
	Part 5 of wgnuplot Unicode support.
	Patch #727

2016-05-22  Daniel J Sebald <daniel.sebald@ieee.org>

	* term/write_png_image.c:  gdImageDestroy() needed on code paths for
	both error and success.

2016-05-21  Daniel J Sebald <daniel.sebald@ieee.org>

	* term/write_png_image.c:  Add utility routines to encode the png
	image in Base64 for in-line inclusion.

	* term/svg.trm:  If the "standalone" terminal option is chosen, images
	will be embedded as a Base64 byte stream object rather than saved as an
	external *.png file and included by reference.
	Bug tracker item #1135

2016-05-21  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wmenu.c:  Use standard file API instead of _lopen and
	friends.

	* src/misc.c (encoding_from_locale):  On Windows, if the current
	encoding cannot be determined from the locale, fall back to deduce
	it from the currently active codepage.  Avoids an error with
	OpenWatcom, which only handles the C locale.

	* src/readline.c src/win/wtext.c src/win/wcommon.h src/win/wgnuplib.h:
	Screen updates during line-editing in wgnuplot are really slow since
	it needs to redraw the line for every character which is printed.  This
	is even more noticeable now that it needs to determine the on-screen
	width of text in order to take care of wide Unicode characters.

	This change improves the speed of screen output by eliminating
	unnecessary intermediate redraws by adding suspend/resume calls to
	several readline functions, which need to print and 'erase' (i.e.
	overwrite) multiple characters.  Screen output is temporarily
	disabled and changes are only saved to wgnuplot's buffers.  Only when
	the operation is finished, the current input line is redrawn.

2016-05-20  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/text.c (TextUpdateStatus):  Mingw64's swprintf seems to have
	a problem with the %S format.  Use swprintf_s and format %hs instead.
	Bug #1794

	* config/config.mgw:  Add a work-around for the missing swprintf_s
	in MinGW32's library.

2016-05-19  Ethan A Merritt  <merritt@u.washington.edu>

	* configure.ac:  Make --without-nonlinear-axes option match the help
	message.

	* src/axis.c (clone_linked_axes): Silence warnings generated by testing
	axis mappings at the current extrema (axis->set_m[in|ax]) if it is a
	dependent autoscaled axis.

	* src/command.c (link_command): Nonlinear axes part 12.
	As it stands, bad things happen if an axis ends up linked to another
	visible axis ("set link") and also to a shadow axis ("set nonlinear").
	This patch adds checks to both commands to prevent this from happening.

2016-05-18  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wtext.c src/win/wpause.c src/win/wcommon.h:  Show the current
	encoding in the status bar of the text window.

	* src/win/wpause.c:  Use default GUI font (not the archaic system font).
	Match the size of the dialog box to the actual length of the message.

	* src/win/wtext.c (DragFunc, M_PASTE) src/win/wpause.c:  Make sure to
	use wide character APIs for Unicode windows. Bug fix.

2016-05-17  <ceprio@users.sf.net>

	* term/js/gnuplot_svg.js: Apply screen transform to mouse coordinates,
	so that browser-mediated changes of scale and origin are accounted for.
	In particular this handles the case where the size of an svg image is
	not the same as the object it is embedded in.

2016-05-17  Ethan A Merritt  <merritt@u.washington.edu>

	* src/plot3d.c (get_3ddata):  The 7-column input case of "with vectors"
	was broken by code refactoring (2016-02-29). Clean this up and store
	color information in both head and tail of vector.
	Bug #1793

2016-05-15  Ethan A Merritt  <merritt@u.washington.edu>

	* term/post.trm: Do not read beyond the end of a font spec.

2016-05-13  Tatsuro MATSUOKA  <tmacchant3@yahoo.co.jp>

	* src/internal.c (GP_MATHERR):  The matherr mechanism is not supported
	by Mingw64 in both 32bit and 64bit mode.  BM: But it is available with
	MSVC, so re-enable it there also for 64bit builds.
	Bug #1791

	* src/config/mingw/Makefile:  Add default path for QT in Mingw64 32bit
	builds.

2016-05-13  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/fit.c (fit_command):  Since memory requirements are linear in the
	number of datapoints, double max_data if we need to enlarge the
	internal buffers.  Remove the associated message.
	Feature Request #444.

2016-05-11  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c (extend_primary_ticrange): Snap logscale range to nearest
	even power if it is already closer than epsilon (a.k.a. "set zero").
	Bug #1590

2016-05-09  Shigeharu Takeno  <shige@iee.niit.ac.jp>

	* docs/term-ja.diff docs/gnuplot-ja.doc:
	Sync Japanese documentation to doc version 1.988

2016-05-08  Ethan A Merritt  <merritt@u.washington.edu>

	* src/pm3d.c src/command.c src/mouse.c src/plot2d.c: Where possible,
	use macro nonlinear(AXIS *) rather than #ifdef NONLINEAR_AXES.

	* src/axis.h src/contour.c src/datafile.c src/graph3d.c src/graph3d.h
	src/plot3d.c src/util3d.c src/axis.c src/boundary.c:
	Nonlinear axes part 11.  3D plot axes x, y, z, countours.

	* demo/all.dem demo/nonlinear5.dem:  logscale z with contours

2016-05-07  Bastian Maerkisch  <bmaerkisch@web.de>

	Let wgnuplot handle Unicode (not console mode gnuplot)
	Patch #727

	Part 4 - File APIs.

	Windows C runtimes do not handle UTF-8.  We work around this
	restriction by using the "wide" (UTF-16) variants of the API and
	translating from the internal encoding to UTF-16 when required.

	* src/win/winmain.c (win_fopen) src/syscfg.h:  Wrap calls to fopen()
	in a new routine win_fopen() on Windows which uses _wfopen().

	* src/win/command.c (do_system): Use _wsystem() instead of system().

	* src/win/winmain.c (fake_popen, fake_pclose):  Handle encodings by
	using _wsystem().

	* src/stdfn.c (opendir, closedir, readdir, rewinddir):  Handle
	encodings by using UTF-16 internally.  Convert search results to a
	byte encoded format according to `encoding`.  This most notably brings
	encoding/unicode support for tab-completion on the command line.

	* src/external.c|h (DLL_OPEN):  Handle encodings for the file name of
	external libraries.

2016-05-07  Ethan A Merritt  <merritt@u.washington.edu>

	* src/gp_types.h (intNaN) src/axis.h (invalid_coordinate):
	If an expression returns "undefined" or NaN inside a function returning
	a real then the return value itself can be set to NaN. Inside a function
	returning an int, as for example the terminal coordinate mapping
	functions, this does not work. Now we define an integer equivalent
	intNaN with leading bit 1 and all trailing bits 0 (max negative value in
	two's complement representation).  Most callers can test via a generic
	macro:  if (invalid_coordinate(x,y)) ...

	* src/graphics.c:  Filter out invalid coordinates produced by axis
	mapping functions.  As an example this fixes bad postscript output
	produced by nonlinear1.dem.

	* src/axis.h:  New macro nonlinear(AXIS *) becomes a noop if configured
	without support for nonlinear axes.

	* src/save.c:  "save" command can use a loop to save the log status of
	all axes rather than running through them in-line one by one.

2016-05-07  Bastian Maerkisch  <bmaerkisch@web.de>

	Let wgnuplot handle Unicode (not console mode gnuplot)
	Patch #727

	Part 3 - GUI.

	* src/win/wtext.c (M_PASTE):  Always ask the clipboard for UTF-16
	encoded text.  This is always possible since Windows will convert
	other encodings (OEM/ANSI) for us.

	* src/win/wtext.c (TextCopyClip):  Now that strings for display
	are stored internally in UTF-16 format, use Unicode to copy to
	clipboard, too.

	* src/win/wgnuplib.h src/win/wgraph.c src/win/winmain.c src/win/wtext.c:
	Drag'n'drop handles Unicode encoded file and directory names.

	* src/win/winmain.c (Pause) src/win/wpause.c src/win/wcommon.h
	src/win/wgnuplib.c|h: Create pause dialog box as Unicode window.
	Pause() will do the text conversion according to current encoding.

	* src/command.c (pause_command):  Converting the string encoding
	is now only required for console mode gnuplot.

	* src/win/wmenu.c:  Temporary fix of string type of argument for
	MessageBox.

2016-05-07  Bastian Maerkisch  <bmaerkisch@web.de>

	* config/watcom/Makefile:  Fix compilation by adding definitions
	of version and patchlevel to flags.

	* config/config.oww:  Add some more defines for function names.

	* src/win/wgnuplib.h src/win/winmain.c:  Remove old compiler
	specific checks which are no longer required.

	* src/win/wgnuplib.h src/win/wgraph.c src/win/wpause.c
	src/win/wprinter.c src/win/wtext.c:  No need to have functions use
	WINAPI (stdcall) calling convention.  Remove define WDPROC.

2016-05-06  Ethan A Merritt  <merritt@u.washington.edu>

	* term/emf.trm:  Better (though still not perfect) estimation of the
	space occupied by a UTF-8 string. Till now each byte in a multi-byte
	character was being counted as occupying space.
	Bug #1787

	* src/term.h:  The above change means that estimate.trm must be
	included earlier in term.h than emf.trm.  Bump it to the top.

	* src/axis.h src/gadgets.c (apply_pm3dcolor) src/pm3d.c (z2cb):
	Use existing macros axis_do_log() and friends rather than doing
	hard-coded calculations with axis->log_base.

	* src/graph3d.c (draw_3d_graphbox): Fix think-o in revision to 3D axis
	label placement - should not multiply the constant offset by tic scale.
	Bug #1790

2016-05-06  Bastian Maerkisch  <bmaerkisch@web.de>

	Let wgnuplot handle Unicode (not console mode gnuplot)
	Patch #727

	Part 2 - Screen Output.

	* src/win/wtext.c src/win/screenbuf.c|h src/win/wgnuplib.h:  All output
	to the terminal window is stored in a buffer.  Change the internal data
	type of this buffer from "char" to "WCHAR".  This enables support for
	UCS-2 (i.e. BMP) characters.

	* src/win/wtext.c (TextPutCh):  All of gnuplot's screen output during
	line-editing passes through this function.  Make sure to properly
	convert codes to UTF-16 for storage in the buffer (includes UTF-8 and
	S-JIS sequences).

	Part 1 - Input.

	* src/text.c (WM_CHAR) src/win/wcommon.h src/win/wgnuplib.c:  Use "W"
	API variant to create text window to receive UTF-16 codes in WM_CHAR
	messages.  Convert them to the `encoding` set by the user for internal
	storage.  Handles basic multilingual plane (BMP) only.

	* src/misc.c|h (encoding_from_locale init_encoding) src/plot.c
	src/set.c:  When using the built-in readline, initialize the
	`encoding` according to current locale.  This is required since
	the behaviour of the built-in readline depends on `encoding` for
	utf8 and sjis.  Do this by extracting the code which handles
	`set encoding locale` to new functions in misc.c.

	* src/win/winmain.c|h (UnicodeText AnsiText WinGetCodePage
	WinGetEncoding) src/command.c src/win/wcommon.h src/win/wgraph
	src/win/wgdiplus.cpp:  Move code to convert a text from a given
	encoding to UTF-16 (UnicodeText) from wgraph.c to winmain.c.
	Extract mapping of gnuplot's encoding values to a Windows
	codepage (WinGetCodePage).  Move the inverse code from command.c
	to WinGetEncoding in winmain.c.  Implement AnsiText to convert
	from UTF-16 to a byte encoded string.

2016-05-05  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/readline.c src/util.c|h:  The internal readline already
	handles UTF-8 multi-byte sequences.  Extend that mechanism
	to S-JIS. Likely most useful on Windows.
	Patch #729

2016-05-04  Ethan A Merritt  <merritt@u.washington.edu>

	* src/save.c:  "rotate parallel" was not being saved correctly.

	* src/graph3d.c:  Revise placement of axis labels in 3D plots.
	Remove dead code.  Use same axis-to-label gap on both x and y.
	Fix inconsistent use of h_tic or v_tic to define gap size.
	Bug #1781

2016-05-01  Matthew Halverson  <mhalver@users.sf.net>

	* term/svg.trm: Do not flag svg terminal as TERM_BINARY.

2016-05-01  Ethan A Merritt  <merritt@u.washington.edu>

	* src/command.c (link_command): Do not recalculate axis ranges after
	"unset link" for an axis that was not linked anyhow.

	* src/axis.c (parse_range):  The in-line range for a nonlinear axis
	must be transferred to its corresponding primary axis.

2016-04-27  Ethan A Merritt  <merritt@u.washington.edu>

	* src/fit.c (call_gnuplot):  More robust handling of undefined value
	returned by function being fit.

	* src/datafile.c (df_generate_pseudodata): Nonlinear axes part 10.
	Sampling along '+' should track linear/nonlinear state of primary
	plot axis.

2016-04-26  Ethan A Merritt  <merritt@u.washington.edu>

	* src/command.c src/plot2d.c src/set.c src/axis.c:
	Nonlinear axes part 9.
	Handle nonlinear polar axis r.  This completes support for 2D axes.

	* src/internal.c (f_assign):  In most places any numerical array index
	is accepted, but inside an assignment non-integral indexes caused an
	error.  Now the index is taken as floor(value) as it is elsewhere.

2016-04-25  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c src/color.c src/command.c src/mouse.c src/parse.c
	src/plot2d.c src/pm3d.c src/save.c src/unset.c demo/nonlinear4.dem:
	Nonlinear axes parts 7 and 8
	Handle nonlinear x2, y2 axes (2D) and cb axis (2D and 3D).

2016-04-24  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c src/axis.h src/set.c src/save.c:
	Nonlinear axes part 4
	New command "set tics logscale" lets the new nonlinear axis code use
	the old logscale tic placement code.  Thus the effect of the old command
	"set log x" can be replicated by
	    set nonlinear x via log10(x) inverse 10**x
	    set xtics logscale

	* docs/gnuplot.doc:  Nonlinear axes part 5 (documentation).

	* demo/all.dem demo/probably_tux.demo
	demo/nonlinear1.dem demo/nonlinear2.dem demo/nonlinear3.dem:
	Nonlinear axes part 6 (demos)

2016-04-23  Ethan A Merritt  <merritt@u.washington.edu>

	* configure.ac src/axis.h:  Preparation for nonlinear axis code.
	Nonlinear axes part 1
	New configuration option --without-nonlinear-axes will allow to disable
	code that depends on #ifdef NONLINEAR_AXES.

	* src/graphics.c (adjust_offsets) src/plot2d.c (eval_plots):
	Revise tests for linked axes to distinguish between "set nonlinear"
	and "set link".

	* src/axis.c src/axis.h src/command.c src/mouse.c src/plot2d.c src/save.c
	src/save.h src/set.c src/show.c src/tables.c src/tables.h src/unset.c:
	Nonlinear axes part 2
	New command "set nonlinear <axis> via f(axis) inverse g(axis)"
	At this stage only the x and y axes are supported.

	* src/axis.c src/plot2d.c:
	Nonlinear axes part 3
	When plotting functions on a nonlinear axis, choose the samples evenly
	along the linear axis it is linked to.

2016-04-22  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graph3d.h src/util3d.c:  Move macro map_x3d() and friends from
	a shared header to the only file where they are used.

2016-04-21  Tatsuro MATSUOKA  <tmacchant3@yahoo.co.jp>

	* win/gnuplot.iss: Restore <BOM> to indicate utf-8 enconding.
	Reverts change 2016-04-10

	* config/mingw/Makefile:  Add warning that it is required to use the
	unicode version of Inno Setup Compiler rather than the standard version
	because gnuplot.iss is now encoded utf-8 with BOM.

2016-04-20  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graphics.c (process_image):  There are two paths through the
	code that extracts image data from an ascii input stream, depending
	on whether the x or y coordinate varies fastest.  The fix for Bug #1767
	corrected one path but broke the other.  Now we fix the broken path so
	that both are working, at least on test data.
	Bug #1782

2016-04-16  Ethan A Merritt  <merritt@u.washington.edu>

	* src/util3d.c (apply_3dhead_properties) src/util3d.h src/hidden3d.c
	src/graph3d.c:  After consolidation of 2D and 3D axis initialization
	into axis_set_scale_and_range() (3-Mar-2016) there is no longer any
	reason to have separate 2D and 3D versions of apply_head_properties
	for arrows.

	* src/graph3d.c (get_arrow3d):  Fix typo introduced in 5.0 that caused
	arrows defined by "from ... rto ..." to be mangled in 3D plots.

	* src/fit.c (fit_command): Replace misleading use of SECOND_Z_AXIS.

	* src/fit.c (fit_command): Avoid using globals x_axis/y_axis/z_axis.

	* src/axis.c:  Disallow commands affecting z2, e.g. "set log z2"

	* src/graphics.c (attach_title_to_plot): Bad things happen if you try
	to attach a title to the end point of a plot with no points (NODATA).

2016-04-15  Shigeharu Takeno  <shige@iee.niit.ac.jp>

	* docs/gnuplot.doc:  Edits to description of dashtype and pt <char>.

	* src/term.c:  Windows requires mode "wb" for pipe output, BSD requires
	"w" (no "b" character), linux will accept either.
	Bug #1756

2016-04-11  Ethan A Merritt  <merritt@u.washington.edu>

	* src/plot2d.c (refresh_bounds):  Patch from 2016-01-18 to fix bug
	#1709 introduced a regression.   Minimal example:
		'set log x; plot '-'; replot'
	failed to delog/log the updated min/max axis limits.
	Bug #1774

2016-04-10  Tatsuro MATSUOKA  <tmacchant3@yahoo.co.jp>

	* win/gnuplot.iss: Remove <BOM> marker from start of file, since this
	makes autoconfigure fail on MinGW. >>> NB: Reverted 2016-04-21

2016-04-08  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/util.c (existdir) src/misc.c (recursivefullname):  Use Windows
	implementations of getdir() and friends in stdfn.c instead of platform
	specific code (or the ones provided by OpenWatcom).

2016-04-06  Ethan A Merritt  <merritt@u.washington.edu>

	* term/emf.trm:  Enhanced text mode was over-zealously skipping new
	set_font requests if successive writes requested the same font+property.
	This caused it to lose italic/bold/etc properties.
	Prevent this by clearing the font history at the end of each enhanced
	text write.
	Bug #1772

2016-04-04  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graphics.c (process_image):  There is not currently a fool-proof
	mechanism for inferring image dimension from a set of x/y/z coords read
	as ascii data.  But we can do better than transposing the row/column
	count by mistake.  Note that this same transposition was previously
	fixed for the case of ascii matrix data input (Bug #1654)
	Bug #1767

2016-04-02  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c (eval_link_function):  Test for "undefined" status on
	return from link evaluation.

2016-04-01  Ethan A Merritt  <merritt@u.washington.edu>

	* src/term_api.h src/graphics.c term/qt.trm:  The qt terminal output
	for "with image pixels" suffers from bad inter-pixel artifacts. This
	seems due to use of term->fillbox() rather than term->filled_polygon().
	The qt fillbox routine is probably fixable but for now we add a
	terminal flag TERM_POLYGON_PIXELS that tells the image code to use
	polygons instead.

2016-03-31  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/command.c (rlgets) docs/gnuplot.doc:  Do not add lines to
	command line history which start with a history command.
	Bug #1763

2016-03-31  Ethan A Merritt  <merritt@u.washington.edu>

	* src/history.c (add_history):  The documentation states that
	"set history N" will save N lines on history to a file on program exit.
	This is true in practice for both the readline-based history code and
	the built-in history code.  However the builtin code also truncates and
	renumbers the active history list in the current session.  This makes
	the numbers essentially useless once the list reaches N entries.
	Remove this unwanted secondary effect in the built-in version.
	Bug #1763.

	* src/axis.c (gen_tics):  Promote logscale base from 0 to 10 on entry
	rather than later having to test for nonzero each time.

2016-03-30  Bastian Maerkisch  <bmaerkisch@web.de>

	* config/mingw/Makefile:  Use local version of gnuplot to generate
	plots of the tutorial.

	* config/mingw/Makefile:  Collecting all required DLLs for a Windows
	binary package can be tedious.  When activated via the DLLS=1 option,
	we now try to at least automatically copy all DLLs from Mingw-w64.
	Applies to targets `install`, `installer`, and `zip`.

2016-03-29  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wmenu.c:  Remove the alternative code which would use a
	modified file-open-dialog to select a directory.  This wasn't working
	since Vista anyway and was never included in any official binary.

	* src/command.c:  The Windows specific winsystem() has been deactivated
	for a long time. Remove it.

	* src/readline.c:  The return value of the *_getch() functions should
	be int, not char, in order to avoid confusion between EOF (-1) and
	(char)0xff.
	Bug 1558

	* src/qtterminal/qtconversion.cpp:  Avoid use of isnan() in C++ code.
	The C++11 standard has it as a function in the std namespace, whereas
	older compilers provude it as a macro or as ::isnan(). Use (var != var)
	instead.

2016-03-25  Ethan A Merritt  <merritt@u.washington.edu>

	* axis.c (eval_link_function) graphics.c (plot_lines):
	If map_x() or map_y() trigger eval_link_function(), it may return NaN.
	In this case the mapped coordinate value is nonsense and the "undefined"
	flag is TRUE.  Check this flag to avoid drawing spurious line segments
	in plot with lines.

	* src/axis.c src/axis.h src/plot2d.c:  New routine init_sample_range().
	Always use SAMPLE_AXIS to hold bookkeeping values for function sampling,
	rather than sometimes using a real axis, sometimes a parametrics axis,
	and sometimes SAMPLE_AXIS.

2016-03-24  Ethan A Merritt  <merritt@u.washington.edu>

	* src/command.c (array_command):
	Sanity check: array name must start with a letter.

	* src/command.c (command is_array_assignment):
	Change the order of parsing: check for array assignment before trying
	to interpret the first input token as a command keyword.  E.g.
	"array q[2]; q[1] = 1" must not interpret the initial 'q' as shorthand
	for 'quit'.
	Bug #1762

2016-03-24  Bastian Maerkisch  <bmaerkisch@web.de>

	* config/mingw/Makefile:  The proper way to invoke shell commands in
	GNU makefiles is via $(shell ...).  Using backticks relies on the
	shell doing the replacement and is not always what we want.
	Bug #1752

2016-03-21  Ethan A Merritt  <merritt@u.washington.edu>

	* src/datafile.c src/datafile.h src/unset.c: The df_fgets() change
	4 days ago caused a regression because input buffer initialization was
	missed in some paths.  Rename the shared buffer to df_line.
	Move the initialization into a new routine df_init() called via
	reset_command() on program entry.
	Bug #1758

	* src/axis.c (clone_linked_axes): If an endpoint of a linked axis was
	exactly zero, the forward/reverse link check would complain because of a
	spurious divide-by-zero.  Now we test for this case separately.

	* src/graphics.c (do_plot plot_points):  The "dots" plot style is
	implemented internally as pointtype 0, although this was never stated in
	the documentation. Apparently some users discovered and used pointtype 0
	routinely and were unhappy that it stopped working in version 5.
	Neither the original behavior nor its removal was intentional, but it is
	easy enough to restore the pre-version 5 behaviour so we do it now.
	Bug #1733

2016-03-20  Matthew Halverson <mhalver@users.sf.net>

	* src/term.c (term_set_output):  Open pipes in binary mode if the
	terminal has the TERM_BINARY flag set.
	Bug #1756

2016-03-17  Ethan A Merritt  <merritt@u.washington.edu>

	* src/plot2d.c:  If pointtype PT_CHARACTER is the default for a plot
	then allow text options like "tc rgb 'foo'" in the plot command.

	* src/command.c src/eval.c src/parse.c:  Disentangle gpfree_string() and
	gpfree_array().  Most callers should avoid the latter.

	* src/graph3d.c src/graphics.c src/hidden3d.c:  "pt variable" point
	types were off-by-1 on output.
	Bug #1754

	* src/datafile.c src/datafile.h src/datablock.c:
	There was already a routine df_gets() in datafile.c that safely reads in
	an arbitrary length line of data.  Split this into a public function
	df_fgets() and a private wrapper df_gets().  Share the public function
	with data input in datablock.c:datablock_command.  This removes the
	limit of 1024 characters per line read in to a datablock.

2016-03-15  Ethan A Merritt  <merritt@u.washington.edu>

	* src/qtterminal/qt_term.cpp:  Revise "set term qt <N> close" so that
	1) It closes window with id N but leaves the current window id unchanged
	2) It executes the command immediately rather than queueing it
	Bug #1753

	* src/qtterminal/QtGnuplotWindow.cpp:  Do not set the DeleteOnClose
	attribute of plot windows.  This avoids an error message if you send a
	new plot after explicitly closing the current plot window.
	Bug #1753 #1554

2016-03-13  Ethan A Merritt  <merritt@u.washington.edu>

	src/axis.h src/mouse.c src/save.c: Minor code cleanup for linked axes.

2016-03-10  Ethan A Merritt  <merritt@u.washington.edu>

	* src/save.c (save_link) src/save.h src/show.c:  New routine so that
	"show/save link" is distinct from "show/save xrange".

2016-03-09 Allin Cottrell  <cottrell@wfu.edu>

	* term/aquaterm.trm: Incorrect argument type to abs() or fabs().

2016-03-08  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.h src/axis.c src/command.c src/unset.c src/set.c:
	Add a new field axis->linked_to_secondary so that the handling of linked
	axes is more symmetric.  Now you can do "set [*]range" on either end of
	the linkage and the min/max/etc for the other end of the linkage will be
	recalculated automatically.

	* src/axis.h src/axis.c src/boundary.c src/graph3d.c:  Replace
	AXIS_SETSCALE(AXIS_INDEX, ) and axis_set_graphical_range(AXIS_INDEX, )
	with a single combined routine axis_set_scale_and_range(AXIS *, ).

	* src/axis.c src/graphics.c:  More cleanup and generalization of linked
	axis code.

2016-03-07  Shigeharu Takeno  <shige@iee.niit.ac.jp>

	* term/tkcanvas.trm src/win/wgnuplot.mnu:  Typos.

	* docs/term-ja.diff docs/gnuplot-ja.doc
	src/win/wgnuplot-ja.mnu win/README-Windows-ja.txt:
	Sync Japanese documentation to doc version 1.982

2016-03-06  Bastian Maerkisch  <bmaerkisch@web.de>

	* config/mingw/Makefile win/gnuplot.iss:  Support MSYS2/Mingw-w64 as
	well as MSYS/MinGW and compilation using clang.  Ability to build
	64bit or 32bit zip package and installer.  New make flags MINGW64,
	CLANG, COLOR-GCC, and M32.  Default to 64bit builds when using
	Mingw-w64, use M32 flag to select 32bit builds.

	* src/win/wcommon.h src/win/wgdiplus.cpp src/win/wgnuplib.h
	src/win/wgraph.c:  Fix several issues found by clang, with the most
	important being wrong delete's in wgdiplus.cpp.

	* scanner.c (get_num):  strtoll() on Windows may consume zero
	characters causing an infinite loop for the input "0x".
	Bug #1745

	* src/win/wgraph.c (MakeFonts, TryCreateFont):  Do not rely on GDI
	supplying a sensible substitute when a requested font is not
	available.  Instead, fall back to the user-supplied default font or
	the terminal's default font if the former is not available.
	Bug #1669

2016-03-05  Ethan A Merritt  <merritt@u.washington.edu>

	* src/wxterminal/gp_cairo.c (gp_cairo_set_linewidth):  Change the
	minimum linewidth supported by pdfcairo to match the other cairo
	terminals.  Reduce all of them to 0.20 pts (was 0.25 or 0.50).

	* src/axis.c src/graphics.c:  More cleanup of linked axis code.

2016-03-03  Ethan A Merritt  <merritt@u.washington.edu>

	* src/plot2d.c (get_data):  Introduction of "pt variable" increased the
	maximum number of data columns for "with points" to 5.  If the plot
	command really does consume 5 columns, fine.  But if get_data returns
	5 columns for a simple 'plot with points' command, we have to ignore the
	extra columns gracefully.
	Bugfix

	* src/axis.c src/axis.h src/eval.c src/eval.h:
	Move eval_link_function() from eval.c to axis.c

	* src/axis.c src/axis.h src/eval.c src/eval.h src/command.c
	src/graph3d.c src/graphics.c src/mouse.c src/plot2d.c src/set.c:
	Revise clone_linked_axes() and eval_link_function() to use
	(AXIS *) pointers rather than AXIS_INDEX.

	* src/axis.c (clone_linked_axes): Warn that the program cannot
	currently handle via/inverse mapping of linked logscale axes.
	Bug #1736

2016-03-02  Ethan A Merritt  <merritt@u.washington.edu>

	* src/command.c (link_command): Accept "unset link <specific axis>"
	(regression since 5.0).

2016-03-01  Ethan A Merritt  <merritt@u.washington.edu>

	* src/internal.c (f_assign): Sanity check for array index that
	is found to be zero during expression evaluation.

	* graphics.c (map_position_double): Fix stupid typo that tried to map a
	linked y axis through the x mapping function. This always mis-placed
	objects and labels whose position is given in terms of y2 whenever y2 is
	linked to y1. Furthermore placement on either x2 or y2 could be wrong if
	the most recent plot did not use that same linked axis.

2016-02-29  Ethan A Merritt  <merritt@u.washington.edu>

	* src/gp_types.h src/graph3d.c src/graphics.c src/misc.c src/plot2d.c
	src/plot3d.c src/save.c src/term_api.h src/hidden3d.c docs/gnuplot.doc:
	Add support for "pointtype variable".  If there are multiple "variable"
	properties in the same [s]plot command, the order of columns in the
	using spec is
		[s]plot DATA using x:y:z:pointsize:pointtype:color
	"pointtype variable" is only allowed with "points" or "linespoints".
	Only numerical point types are possible; if you want variable character
	pointtypes use "with labels" instead.

	* src/stats.c:  "array A[n];  stats A" should default to single-column
	analysis (equivalent to stats A using 2) since the properties of the
	index are uninteresting.

2016-02-28  Ethan A Merritt  <merritt@u.washington.edu>

	* src/util.h src/util.c (common_error_exit):  Move the code that resets
	various gnuplot state variables after an error from int_error() to a new
	common path routine common_error_exit() shared with os_error().  Ensure
	that GPVAL_ERRNO and GPVAL_ERRMSG are set in both cases.
	Bug #1741

2016-02-26  Hans-Bernhard Broeker  <broeker@physik.rwth-aachen.de>

	* src/win/wgnuplot.mnu: Update the Windows GUI menu definitions a
	bit.

2016-02-20  Ethan A Merritt  <merritt@u.washington.edu>

	* src/parse.c (parse_assignment_expression): In order to support
	assignment to an array element (e.g. A[i] = foo) a slot for the
	array index is always pushed onto the evaluation stack even if no
	array is involved.  However this slot was not being initialized to
	a valid PUSHC descriptor, so "show at" and certain other
	operations could fail even though they don't really care about
	this dummy slot.  Now we initialize it to report that a NOTDEFINED
	variable was pushed.

	* src/command.c src/eval.c (push) src/internal.c src/parse.c: Back
	off to the original idea that bare array names are not legal for
	expression evaluation.  The previous work-around of copying the
	entire array on every reference imposed a huge overhead for
	accessing the value of an individual entry. The previous code is
	left in place via #ifdef ARRAY_COPY_ON_REFERENCE to serve as a
	model for later expansion to support some subset of operations
	requiring a copy (e.g. simple assigment B=A or concatenation C =
	A.B).

2016-02-18  Ethan A Merritt  <merritt@u.washington.edu>

	* src/command.c src/eval.c (push): Evaluation of expressions that
	contain a bare array name is problematic because any attempt to
	access the actual array contents during or after evaluation
	requires that they be duplicated on push() and freed
	later. Freeing is the tricky part, particularly if the array
	contains STRING elements.  This patch seems OK in preliminary
	testing, but at this point the only only possible operations are
	indexing and assignment. If other operations are added later they
	may reveal inadequacies in the alloc/free tracking.

2016-02-14  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/wxterminal/wxt_gui.h:  Use local events to avoid warnings about
	incompatible linkage on Windows.

	* config/mingw/Makefile:  Use MinGW's own implementations of
	printf etc. which are C99 compliant.

	* src/win/wtext.h:  Avoid warnings about the re-definition of
	popen/pclose with fake pipe support using MSYS2/Mingw-w64.

	* src/wxterminal/wxt_gui.cpp|h:  Fixes to make the wxt terminal work
	with wxWidgets 3 on Windows:
	1) Disable wxWidgets debug assertions in release builds. This does
	not solve the problem with a setlocale(LC_ALL, NULL) == "C" test in
	wxLocale, but at least gets rid of the warning.
	2) Flush the cairo surface before blitting the internal bitmap to
	screen.

	* src/win/wgraph.c:  Include direct.h for _chdir().

	* term/tkcanvas.trm (TK_init):  TK_image requires WRITE_PNG_IMAGE to be
	defined.

2016-02-12  Jun Takimoto <takimoto-j@kba.biglobe.ne.jp>

	* term/tkcanvas.trm:  More fixes suggested by clang warning messages.

2016-02-11  Bastian Maerkisch  <bmaerkisch@web.de>

	* term/wxterminal/wxt_gui.cpp (wxt_raise_window):  On Windows, only
	Restore() the window if it is iconized.  Fixes accidental resize of
	maximized windows.

	* term/tkcanvas.trm (TK_vector):  Fix for vector commands without
	preceeding move as e.g. in "with line lc variable".

	* src/fit.c:  Fix order of using specs printed to log-file.
	Bug #1657

	* docs/term-ja.diff:  Remove japanese documentation for sun, next, and
	openstep terminals which were removed on 2016-01-11.

2016-02-11  Ethan A Merritt  <merritt@u.washington.edu>

	* src/term.c src/axis.h src/plot3d.c: Remove dead code and old comments.
	Comment out the call to AXIS_WRITEBACK that appears to be a vestige from
	a code reorganization in the version 3.8 era. There are no other users
	of this macro.

	* src/set.c src/show.c:  set/show arrow length wants only a single
	coordinate, not three.  (See patch of 2015-12-19).

2016-02-10  Bastian Maerkisch  <bmaerkisch@web.de>

	* term/dumb.trm:  Include stdint.h to make sure that uint32_t is defined
	(MSVC).

	* config/config.nt config/config.nt:  Sync with output of configure.

	* config/mingw/Makefile:  Use gnuplot's default settings to generate
	plots for the documentation.

	* configure.ac:  Cairo terminals require pango 1.22
	(pango_layout_get_baseline) now.  Consequently they do no longer build
	on RH5 etc.

2016-02-10  Ethan A Merritt  <merritt@u.washington.edu>

	* src/command.c (print_command):  Do not allow printing a datablock into
	itself, which could cause infinite recursion.

	* src/stats.c: Reset data input mode to 2D at start of stats command.
	This produces consistent results for "stats FOO matrix", even if the
	previous command was "splot".
	Bug #1739

2016-02-08  Anton Gladky <gladk@debian.org>

	* term/tkcanvas.trm:  Replace statements of the form
	fprintf(gpoutfile, string) because they trigger a compiler warning/error
	with  -Werror=format-security.

2016-02-08  Ethan A Merritt  <merritt@u.washington.edu>

	* src/datafile.c src/parse.c src/parse.h:

	Add bookkeeping to allow 'plot', 'stats', and 'fit' commands to work
	on data stored in an array.
	    array A[200]
	    do for [i=1:200] { A[i] = sin(pi * i/100.) }
	    plot A title "sin(x) in centiradians"

	*  demo/array.dem docs/gnuplot.doc:
	Documentation and demo for use of arrays in 'fit' and 'plot'.

	* src/command.c src/save.h src/save.c (save_array_content):
	Dump content of arrays in a "print" or "save" statement, analogous to
	printing/saving content of user-declared variables.

2016-02-07  Ethan A Merritt  <merritt@u.washington.edu>

	* src/command.c src/command.h src/eval.c src/eval.h src/gp_types.h
	src/internal.c src/internal.h src/parse.c src/tables.c src/util.c
	src/save.c:  Basic support of arrays.

	Introduce support for arrays as an indexed list of variables.
	An array must be declared before its entries can be accessed.
	Each entry A[i] acts as a normal gnuplot user variable (integer, string,
	complex).  Variables held in an array need not be of the same type.
	    array A[2] = [ "apples", "oranges" ]
	    set title sprintf("Comparing %s and %s",A[1],A[2])
	    plot for [n = 1:2] A[n] title A[n]

	* docs/gnuplot.doc demo/array.dem demo/all.dem demo/html/*:
	Documentation and demo for basic use of arrays.

>>> Earlier entries are in ChangeLog.5
