
 1. The hidden line algorithm is not perfect.  We have put in an option
    to draw both sides of the surface in the same linetype, thus avoiding
    this problem completely.  We should put in an option of not drawing
    the back at all.

 2. In the Atari version, windows are not currently supported.  This
    means gnuplot 3.4 will not run with MultiAES.  We hope to correct
    this shortly in gpcontrb.tar.z.
    [Status of this bug: unknown]

 3. autoscale writeback is probably broken.  One problem is that
    the range is written back before the range is extented to a
    whole number of tics. eg  if data is 0.9->10.1, that is what
    gets written back, but the plot is 0 -> 11.  If autoscale
    is switched off, you do get 0.9->10.1 since switching off
    autoscale switches off the extend-to-tic-multiple stuff.

    Also, writeback with log scales writes back the log of the min/max
    [Status: unknown]

 4. m[]tics bug when plotting time data
    There is an initialization problem when plotting time data with an
    interval calculation; an inordinate number of m[]tics are automatically
    drawn, e.g., 

      set xdata time; set ydata time
      set timefmt "%d/%m"
      set format x "%b %d"
      set xrange ["01/12":"06/12"]
      set xtics "01/12", 172800, "05/12"
      plot x

    The problem can be avoided by initializing via a plot before the 
    interval calculation:
      [...]
      set xrange ["01/12":"06/12"]
      plot x
      set xtics "01/12", 172800, "05/12"
      plot x

 5. "\n" does not work in the format for the tics in splot

 6. Error bars don't work in polar plots

 7. arrows and labels are not clipped (2D and 3D)

 8. contour line clipping of 3D data plots
    The following tips for plotting contours were kindly supplied by Don Taber
    <dtaber@blackrat.risc.rockwell.com> and Paul Halsema <phalsema@harris.com>.

    Splotting gives little control over the appearance of contour lines.
    You can do a better job by extracting the contours with the table
    terminal and then plotting the resulting file.  You should 'set
    nosurface' to eliminate the surface isolines from the file generated
    by the table terminal.

    All the contours will be written to a single file.  To plot them with
    different line styles, you can use one of several approaches.  The
    simplest is to use the 'index' feature.  This has the advantage of
    using only gnuplot internals.  Other approaches use a utility
    such as sed, awk, or perl to either break up the file or generate
    a more sophisticated command file for plotting it.

    The following gnuplot script extracts circular contours from a
    paraboloid of revolution and plots the resulting file. It then
    uses 'index' to provide different linestyles.  Finally, it runs
    an awk script to generate a command file for plotting the file.

       set cntrparam levels discrete 20, 40, 60
       set contour base
       set nosurface
       splot x**2 + y**2
       set term table
       set output 'circles'
       replot
       set term linux  # or whatever your original term was
       set output

       plot 'circles'   # all one linestyle

       plot 'circles' index 0 t '20', 'circles' index 1 t '40', 'circles' index 2 t '60'  # different linestyles

       !awk -f contr.awk circles > circles.gnu
       load 'circles.gnu'

    Where the gawk script (contr.awk) contains the following:

#!/usr/bin/nawk -f
#          ^---Replace with your favorite variant
# courtesy of Paul Halsema (phalsema@harris.com)
# and Emmanuel Bigler <bigler@jsbach.univ-fcomte.fr>
#
# This script operates on a file generated by a gnuplot splot command with
# a table terminal type.  The output should be redirected to another file
# which can then be loaded into gnuplot.  This results in a contour plot
# that is more appealing for presentation purposes.  Providing the optional
# parameter n will put a label on the contour at every nth point.
#
# Sample usage (in gnuplot):
# !nawk -f contr.awk -v n=12 circles > circles.gnu
# load 'circles.gnu'
#
# If you make this script executable and place it somewhere in your path,
# then it can be called directly as in:
#
# !nawk -f contr.awk -v n=12 circles > circles.gnu
# load 'circles.gnu'

BEGIN {
  fmt1="%s \\\n     index %d title '%s'";
  fmt2="%s, \\\n  '' index %d title '%s'";
# Add any gnuplot commands that you always want performed here
  print "set key out";
  print "set key title '" FILENAME "'";
  print "set data style lines";
  print
# End of general commands section
  pltcmd="plot '"FILENAME"'";
}

{
# Generate a fragment of the plot command for each contour
  if ($2=="Contour")
  {
    split($3,indx,",");
    titl=$5;
    if ($3=="0,") { pltcmd=sprintf(fmt1, pltcmd, indx[1], titl); }
    else          { pltcmd=sprintf(fmt2, pltcmd, indx[1], titl); }
  }
# Add labels at every nth point along a contour
  if( (n!=0) && ($0 !~ /^\#/) && ($0 !~ /^$/) && ((NR%n)==1))
    {printf("set label '%s' at %f,%f center\n",$3,$1,$2);}
}

END {
# Write out the entire plot command
  printf "\n%s\n", pltcmd;
}

 9. There is an initialization problem of when plotting time data with an
    interval calculation; an inordinate number of m[]tics are automatically
    drawn, e.g., 

       set xdata time; set ydata time
       set timefmt "%d/%m"
       set format x "%b %d"
       set xrange ["01/12":"06/12"]
       set xtics "01/12", 172800, "05/12"
       plot x

    The problem can be avoided by initializing via a plot before the 
    interval calculation:
       [...]
       set xrange ["01/12":"06/12"]
       plot x
       set xtics "01/12", 172800, "05/12"
       plot x

10. (Not really a bug)
  Terminal drivers which are accompanied by external executables
  could cause some trouble: their subprocesses (started by fork() e.g.)
  may inherit handles to open file(s) from the main process.
  If the filesystem doesn't allow deleting open files these file are
  locked for the time the terminal driver is running.

11. OS/2 gcc optimiser bug
  The following gnuplot commands demonstrate a bug in gcc's optimiser
  under OS/2. The workaround is to use "-O2 -ffloat-store" instead of "-O2".

reset
set key
set xlabel "Year"
set xdata time
set timefmt "%y%m%d"
set format x "%y"
set xrange ["900621" : "950126"]
set ylabel "Price per $100 principal"
plot '-' using 1:2 title 'Fitted IO' with lines 1
900621 20
950126 55
e

12. compiling help file with Visual C++ 4.0/Windows NT
  The help compiler is unable to compile gnuplot.rtf, possibly because
  it cannot handle the new RTF spec. There is no workaround, but
  VC++ 5.0/6.0 users should have no problems.
 
13. The 16bit Windows version, compiled by Borland C++ 3.1, crashes with
  a protection violation in 'all.dem', on the first plot that tries
  to read a datafile. Heap corruption suspected.

(Moved from old WhatsNew file, needs cleaning up)

BUGS outstanding
  illegal trailing tab on fig output
  minor tics missing on HPUX ?
  terminal settings get propagated when terminal is changed (now fixed ?)
  set ?range [] writeback is broken for logscales.
  source file copyrights are out of date - what should go on new files ?
  to be documented - ms-windows cannot do wide, dashed lines (well, win32 can,
  but...)

OTHER ISSUES
  set mapping spherical is not 'real' spherical polars
  terminals are no longer allowed to do their own scaling
  break up some of the drivers (eg epson and family) into their
    own files. *maybe* we can provide libraries of generic routines
    (particularly tex) which can be used by all interested drivers,
    and because they are a library, they are linked only if
    any relevant drivers are installed. bitmap.c could also be
    linked in this way.
  Now that all drivers are new format, do we need to explore separate
    compilation of the drivers into their own .obj files for DOS ?
  hidden line is still slower than in 3.5
  have I got all os/2 and (in particular) mac changes ?
  filled boxes ?
  substitution using backquotes should not have a length limit
  the source indentation stinks - may I pass it through gnu indent,
     or will that mess up use of patches which did not make it into
     the release.
     
