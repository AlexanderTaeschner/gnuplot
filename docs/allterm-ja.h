START_HELP(00psglobal)
#ifndef JAPANESE_DOC
#define PS_COMMON_OPTS1 \
"                               {level1 | leveldefault | level3}",\
"                               {color | colour | monochrome}",\
"                               {background <rgbcolor> | nobackground}",\
"                               {dashlength | dl <DL>}",\
"                               {linewidth | lw <LW>} {pointscale | ps <PS>}",\
"                               {rounded | butt}",\
"                               {clip | noclip}",\
"                               {palfuncparam <samples>{,<maxdeviation>}}",\
"                               {size <XX>{unit},<YY>{unit}}",
#define PS_COMMON_OPTS2 \
"                               {blacktext | colortext | colourtext}",\
"                               {{font} \"fontname{,fontsize}\" {<fontsize>}}",\
"                               {fontscale <scale>}",
#define PS_COMMON_PROLOG_INFO \
" If you see the error message",\
"       \"Can't find PostScript prologue file ... \"",\
" Please see and follow the instructions in `postscript prologue`.",\
"",
#define PS_COMMON_DOC1 \
" The option `color` enables color, while `monochrome` prefers black and white",\
" drawing elements. Further, `monochrome` uses gray `palette` but it does not",\
" change color of objects specified with an explicit `colorspec`."\
"",\
" `dashlength` or `dl` scales the length of dashed-line segments by <DL>,",\
" which is a floating-point number greater than zero.",\
" `linewidth` or `lw` scales all linewidths by <LW>.",\
"",\
" By default the generated PostScript code uses language features that were",\
" introduced in PostScript Level 2, notably filters and pattern-fill of",\
" irregular objects such as filledcurves.  PostScript Level 2 features are",\
" conditionally protected so that PostScript Level 1 interpreters do not issue",\
" errors but, rather, display a message or a PostScript Level 1 approximation.",\
" The `level1` option substitutes PostScript Level 1 approximations of these",\
" features and uses no PostScript Level 2 code.  This may be required by some",\
" old printers and old versions of Adobe Illustrator.  The flag `level1` can be",\
" toggled later by editing a single line in the PostScript output file to force",\
" PostScript Level 1 interpretation.  In the case of files containing level 2",\
" code, the above features will not appear or will be replaced by a note when",\
" this flag is set or when the interpreting program does not indicate that it",\
" understands level 2 PostScript or higher. The flag `level3` enables PNG",\
" encoding for bitmapped images, which can reduce the output size considerably.",\
"",\
" `rounded` sets line caps and line joins to be rounded; `butt` is the",\
" default, butt caps and mitered joins.",\
"",\
" `clip` tells PostScript to clip all output to the bounding box;",\
" `noclip` is the default.",\
"",\
" `palfuncparam` controls how `set palette functions` are encoded as gradients",\
" in the output. Analytic color component functions (set via",\
" `set palette functions`) are encoded as linear interpolated gradients in the",\
" postscript output:  The color component functions are sampled at <samples>",\
" points and all points are removed from this gradient which can be removed",\
" without changing the resulting colors by more than <maxdeviation>. For",\
" almost every useful palette you may safely leave the defaults of",\
" <samples>=2000 and <maxdeviation>=0.003 untouched.",\
"",\
" The default size for postscript output is 10 inches x 7 inches. The default",\
" for eps output is 5 x 3.5 inches.  The `size` option changes this to",\
" whatever the user requests. By default the X and Y sizes are taken to be in",\
" inches, but other units are possibly (currently only cm). The BoundingBox",\
" of the plot is correctly adjusted to contain the resized image.",\
" Screen coordinates always run from 0.0 to 1.0 along the full length of the",\
" plot edges as specified by the `size` option.",\
"",
""
#else /* JAPANESE_DOC */
#define PS_COMMON_OPTS1 \
"                               {level1 | leveldefault | level3}",\
"                               {color | colour | monochrome}",\
"                               {background <rgbcolor> | nobackground}",\
"                               {dashlength | dl <DL>}",\
"                               {linewidth | lw <LW>} {pointscale | ps <PS>}",\
"                               {rounded | butt}",\
"                               {clip | noclip}",\
"                               {palfuncparam <samples>{,<maxdeviation>}}",\
"                               {size <XX>{unit},<YY>{unit}}",
#define PS_COMMON_OPTS2 \
"                               {blacktext | colortext | colourtext}",\
"                               {{font} \"fontname{,fontsize}\" {<fontsize>}}",\
"                               {fontscale <scale>}",
#define PS_COMMON_PROLOG_INFO \
" 以下のようなエラーメッセージが出た場合:",\
"       \"Can't find PostScript prologue file ... \"",\
" 以下参照: `postscript prologue`。そしてその指示に従ってください。",\
"",
#define PS_COMMON_DOC1 \
" オプション `color` はカラーを有効にし、`monochrome` は各要素を黒と白",\
" 描画します。さらに、`monochrome` は灰色の `palette` も使用しますが、",\
" これは、明示的に `colorspec` で指定された部品の色を変更しません。",\
"",\
" `dashlength` または `dl` は点線の線分の長さを <DL> (0 より大きい実数)",\
" に設定し、",\
" `linewidth` または `lw` は全ての線の幅を <LW> に設定します。",\
"",\
" デフォルトでは、生成される PostScript コードは、特にフィルタリングや",\
" filledcurves のようなでこぼこな領域のパターン塗りつぶしにおいて、",\
" PostScript Level 2 として紹介されている言語機能を使います。PostScript",\
" Level 2 の機能は条件的に保護されていて、PostScript Level 1 のインター",\
" プリタがエラーを出さず、むしろメッセージか PostScript Level 1 による",\
" 近似であることを表示するようになっています。`level1` オプションは、こ",\
" れらの機能を近似する PostScript Level1 で代用し、PostScript Level 2 ",\
" コードを一切使用しません。これは古いプリンタや、Adobe Illustrator の",\
" 古いバージョンなどで必要になるかもしれません。このフラグ `level1` は",\
" 出力された PostScript ファイルのある一行を手で編集することで、後から",\
" 強制的に PostScript Level 1 機能を ON/OFF にすることもできます。level",\
" 2 のコードが含まれている場合、上の機能は現われないか、このフラグがセ",\
" ットされた場合、あるいは PostScript インタプリタプログラムが level 2",\
" 以上の PostScript を解釈するとは言わなかった場合に警告文に置き換わり",\
" ます。`level3` オプションは、ビットマップ画像の PNG 化の機能を有効に" ,\
" します。それにより出力サイズをかなり削減できます。",\
"",\
" `rounded` は、線の端や接合部を丸くし、デフォルトの `butt` は尖った端と",\
" 角張った接合部を使用します。",\
"",\
" `clip` は、PostScript にすべての出力を BoundingBox (PostScript の外枠)",\
" でクリップすることを指示します; デフォルトは `noclip` です。",\
"",\
" `palfuncparam` は `set palette functions` から出力の傾きをどのようにコ",\
" ード化するかを制御します。解析的な色の成分関数 (`set palatte functions` ",\
" で設定される) は、postscript 出力では傾きの線形補完を用いてコード化さ",\
" れます: まず色の成分関数が <samples> 個の点で標本化され、そしてそれら",\
" の点は、結果として線形補完との偏差が <maxdeviation> 以内に収まるように",\
" 削除されます。ほとんど全ての有効なパレットで、デフォルトの <samples>",\
" =2000 と <maxdeviation>=0.003 の値をそのまま使うのが良いでしょう。",\
"",\
" PostScript 出力のデフォルトの大きさは 10 インチ x 7 インチです。EPS ",\
" 出力のデフォルトの大きさは 5 x 3.5 インチです。オプション `size` は",\
" これらをユーザが指定したものに変更します。デフォルトでは X と Y のサ",\
" イズの単位はインチとみなされますが、他の単位 (現在は cm のみ) も使う",\
" ことはできます。描画の BoundingBox (PostScript ファイルの外枠) は、",\
" サイズが変更された画像を丁度含むように正しく設定されます。",\
" スクリーン座標は、オプション `size` で指定された描画枠の全体が 0.0",\
" から 1.0 になります。",\
" 注意: `これは、以前は、出力形式での設定よりも、コマンド set size で",\
" 設定した方がいい、と言っていたことの変更を意味します`。以前の方法で",\
" は BoundingBox は変更されずに残ってしまい、スクリーン座標が実際の描",\
" 画の限界に対応していませんでした。",\
"",
""
#endif /* JAPANESE_DOC */
END_HELP(00psglobal)
START_HELP(aifm)
#ifndef JAPANESE_DOC
"1 aifm",
"?commands set terminal aifm",
"?set terminal aifm",
"?set term aifm",
"?terminal aifm",
"?term aifm",
"?aifm",
"",
" `NOTE: Legacy terminal`, originally written for Adobe Illustrator 3.0+.",
" Since Adobe Illustrator understands PostScript level 1 commands directly,",
" you should use `set terminal post level1` instead.",
"",
" Syntax:",
"       set terminal aifm {color|monochrome} {\"<fontname>\"} {<fontsize>}",
""
#else /* JAPANESE_DOC */
"1 aifm",
"?commands set terminal aifm",
"?set terminal aifm",
"?set term aifm",
"?terminal aifm",
"?term aifm",
"?aifm",
"",
" `注意: 古い (legacy) 出力形式`、元々は Adobe Illustrator 3.0+ 用。Adobe",
" Illustrator はレベル 1 の PostScriptファイルを直接認識するので、これの",
" 代わりに `set terminal post level1` 使うべきでしょう。",
"",
" 書式:",
"       set terminal aifm {color|monochrome} {\"<fontname>\"} {<fontsize>}",
""
#endif /* JAPANESE_DOC */
END_HELP(ai)
START_HELP(aqua)
#ifndef JAPANESE_DOC
"1 aqua",
"?commands set terminal aqua",
"?set terminal aqua",
"?set term aqua",
"?terminal aqua",
"?term aqua",
"?aqua",
" This terminal relies on AquaTerm.app for display on MacOS.",
"",
" Syntax:",
"       set terminal aqua {<n>} {title \"<wintitle>\"} {size <x> <y>}",
"                         {font \"<fontname>{,<fontsize>}\"}",
"                         {linewidth <lw>}\"}",
"                         {{no}enhanced} {solid|dashed} {dl <dashlength>}}",
"",
" where <n> is the number of the window to draw in (default is 0),",
" <wintitle> is the name shown in the title bar (default \"Figure <n>\"),",
" <x> <y> is the size of the plot (default is 846x594 pt = 11.75x8.25 in).",
"",
" Use <fontname> to specify the font (default is \"Times-Roman\"),",
" and <fontsize> to specify the font size (default is 14.0 pt).",
"",
" The aqua terminal supports enhanced text mode (see `enhanced`), except for",
" overprint. Font support is limited to the fonts available on the system.",
" Character encoding can be selected by `set encoding` and currently supports",
" iso_latin_1, iso_latin_2, cp1250, and UTF8 (default).",
"",
" Lines can be drawn either solid or dashed, (default is solid) and the dash",
" spacing can be modified by <dashlength> which is a multiplier > 0.",
""
#else /* JAPANESE_DOC */
"1 aqua",
"?commands set terminal aqua",
"?set terminal aqua",
"?set term aqua",
"?terminal aqua",
"?term aqua",
"?aqua",
"?Aqua",
" この出力形式は Mac OS X 上の表示に関する AquaTerm.app に依存しています。",
"",
" 書式:",
"       set terminal aqua {<n>} {title \"<wintitle>\"} {size <x> <y>}",
"                         {font \"<fontname>{,<fontsize>}\"}",
"                         {linewidth <lw>}\"}",
"                         {{no}enhanced} {solid|dashed} {dl <dashlength>}}",
"",
" <n> は描画するウィンドウの番号 (デフォルトでは 0)",
" <wintitle> はタイトルバーに表示される名前 (デフォルトは \"Figure <n>\"),",
" <x> <y> は描画サイズ (デフォルトは 846x594 pt = 11.75x8.25 インチ) です。",
"",
" 使用するフォントは <fontname> で指定し (デフォルトは \"Times-Roman\")、",
" フォントサイズは <fontsize> で指定します (デフォルトは 14.0 pt)。",
"",
" aqua 出力形式は、拡張文字列処理モード (enhanced text mode; 以下参照:",
" `enhanced`) を、重ね書き以外はサポートしてます。フォントの使用はシステ",
" ムで有効なフォントに制限されています。文字エンコーディングは、",
" `set encoding` で選択できますが、現在は iso_latin_1, iso_latin_2,",
" cp1250 と UTF8 (default) をサポートしています。",
"",
" 曲線は、実線か点線 (デフォルトは実線) のいずれかで描画でき、点線の間隔は",
" 倍率 <dashlength> (>0) で変更できます。",
""
#endif /* JAPANESE_DOC */
END_HELP(aqua)
START_HELP(be)
#ifndef JAPANESE_DOC
"1 be",
"?commands set terminal be",
"?set terminal be",
"?set term be",
"?terminal be",
"?term be",
"?be",
"?BE",
" The `be` terminal type is present if gnuplot is built for the `beos`",
" operating system and for use with X servers.  It is selected at program",
" startup if the `DISPLAY` environment variable is set, if the `TERM`",
" environment variable is set to `xterm`, or if the `-display` command",
" line option is used.",
"",
" Syntax:",
"           set terminal be {reset} {<n>}",
"",
" Multiple plot windows are supported: `set terminal be <n>` directs the",
" output to plot window number n.  If n>0, the terminal number will be",
" appended to the window title and the icon will be labeled `gplt <n>`.",
" The active window may distinguished by a change in cursor (from default",
" to crosshair.)",
"",
" Plot windows remain open even when the `gnuplot` driver is changed to a",
" different device.  A plot window can be closed by pressing the letter q",
" while that window has input focus, or by choosing `close` from a window",
" manager menu.  All plot windows can be closed by specifying `reset`, which",
" actually terminates the subprocess which maintains the windows (unless",
" `-persist` was specified).",
"",
" Plot windows will automatically be closed at the end of the session",
" unless the `-persist` option was given.",
"",
" The size or aspect ratio of a plot may be changed by resizing the `gnuplot`",
" window.",
"",
" Linewidths and pointsizes may be changed from within `gnuplot` with",
" `set linestyle`.",
"",
" For terminal type `be`, `gnuplot` accepts (when initialized) the standard",
" X Toolkit options and resources such as geometry, font, and name from the",
" command line arguments or a configuration file.  See the X(1) man page",
" (or its equivalent) for a description of such options.",
"",
" A number of other `gnuplot` options are available for the `be` terminal.",
" These may be specified either as command-line options when `gnuplot` is",
" invoked or as resources in the configuration file \".Xdefaults\".  They are",
" set upon initialization and cannot be altered during a `gnuplot` session.",
"2 command-line_options",
"?commands set terminal be command-line-options",
"?set terminal be command-line-options",
"?set term be command-line-options",
"?be command-line-options",
" In addition to the X Toolkit options, the following options may be specified",
" on the command line when starting `gnuplot` or as resources in your",
" \".Xdefaults\" file:",
"@start table - first is interactive cleartext form",
"  `-mono`        forces monochrome rendering on color displays.",
"  `-gray`        requests grayscale rendering on grayscale or color displays.",
"                         (Grayscale displays receive monochrome rendering by default.)",
"  `-clear`   requests that the window be cleared momentarily before a",
"                         new plot is displayed.",
"  `-raise`   raises plot window after each plot",
"  `-noraise` does not raise plot window after each plot",
"  `-persist` plots windows survive after main gnuplot program exits",
"#\\begin{tabular}{|cl|} \\hline",
"#`-mono`  & forces monochrome rendering on color displays.\\\\",
"#`-gray`  & requests grayscale rendering on grayscale or color displays.\\\\",
"#                 & (Grayscale displays receive monochrome rendering by default.) \\\\",
"#`-clear` & requests that the window be cleared momentarily before a\\\\",
"#                 & new plot is displayed. \\\\",
"#`-raise` & raises plot window after each plot. \\\\",
"#`-noraise` & does not raise plot window after each plot. \\\\",
"#`-persist`&plots windows survive after main gnuplot program exits. \\\\",
"%c l .",
"%`-mono`@forces monochrome rendering on color displays.",
"%`-gray`@requests grayscale rendering on grayscale or color displays.",
"%           @(Grayscale displays receive monochrome rendering by default.)",
"%`-clear`@requests that the window be cleared momentarily before a",
"%                @new plot is displayed.",
"%`-raise`@raises plot window after each plot",
"%`-noraise`@does not raise plot window after each plot",
"%`-persist`@plots windows survive after main gnuplot program exits",
"@end table",
" The options are shown above in their command-line syntax.  When entered as",
" resources in \".Xdefaults\", they require a different syntax.",
"",
" Example:",
"           gnuplot*gray: on",
"",
" `gnuplot` also provides a command line option (`-pointsize <v>`) and a",
" resource, `gnuplot*pointsize: <v>`, to control the size of points plotted",
" with the `points` plotting style.  The value `v` is a real number (greater",
" than 0 and less than or equal to ten) used as a scaling factor for point",
" sizes.  For example, `-pointsize 2` uses points twice the default size, and",
" `-pointsize 0.5` uses points half the normal size.",
"2 monochrome_options",
"?commands set terminal be monochrome_options",
"?set terminal be monochrome_options",
"?set term be monochrome_options",
"?be monochrome_options",
" For monochrome displays, `gnuplot` does not honor foreground or background",
" colors.  The default is black-on-white.  `-rv` or `gnuplot*reverseVideo: on`",
" requests white-on-black.",
"",
"2 color_resources",
"?commands set terminal be color_resources",
"?set terminal be color_resources",
"?set term be color_resources",
"?be color_resources",
" For color displays, `gnuplot` honors the following resources (shown here",
" with their default values) or the greyscale resources.  The values may be",
" color names as listed in the BE rgb.txt file on your system, hexadecimal",
" RGB color specifications (see BE documentation), or a color name followed",
" by a comma and an `intensity` value from 0 to 1.  For example, `blue, 0.5`",
" means a half intensity blue.",
"@start table - first is interactive cleartext form",
"  gnuplot*background:  white",
"  gnuplot*textColor:   black",
"  gnuplot*borderColor: black",
"  gnuplot*axisColor:   black",
"  gnuplot*line1Color:  red",
"  gnuplot*line2Color:  green",
"  gnuplot*line3Color:  blue",
"  gnuplot*line4Color:  magenta",
"  gnuplot*line5Color:  cyan",
"  gnuplot*line6Color:  sienna",
"  gnuplot*line7Color:  orange",
"  gnuplot*line8Color:  coral",
"#\\begin{tabular}{|cl|} \\hline",
"#&gnuplot*background: white\\\\",
"#&gnuplot*textColor: black\\\\",
"#&gnuplot*borderColor: black\\\\",
"#&gnuplot*axisColor: black\\\\",
"#&gnuplot*line1Color: red\\\\",
"#&gnuplot*line2Color: green\\\\",
"#&gnuplot*line3Color: blue\\\\",
"#&gnuplot*line4Color: magenta\\\\",
"#&gnuplot*line5Color: cyan\\\\",
"#&gnuplot*line6Color: sienna\\\\",
"#&gnuplot*line7Color: orange\\\\",
"#&gnuplot*line8Color: coral\\\\",
"%c l .",
"%@gnuplot*background: white",
"%@gnuplot*textColor: black",
"%@gnuplot*borderColor: black",
"%@gnuplot*axisColor: black",
"%@gnuplot*line1Color: red",
"%@gnuplot*line2Color: green",
"%@gnuplot*line3Color: blue",
"%@gnuplot*line4Color: magenta",
"%@gnuplot*line5Color: cyan",
"%@gnuplot*line6Color: sienna",
"%@gnuplot*line7Color: orange",
"%@gnuplot*line8Color: coral",
"@end table",
"",
" The command-line syntax for these is, for example,",
"",
" Example:",
"           gnuplot -background coral",
"",
"2 grayscale_resources",
"?commands set terminal be grayscale_resources",
"?set terminal be grayscale_resources",
"?set term be grayscale_resources",
"?be grayscale_resources",
" When `-gray` is selected, `gnuplot` honors the following resources for",
" grayscale or color displays (shown here with their default values).  Note",
" that the default background is black.",
"@start table - first is interactive cleartext form",
"  gnuplot*background: black",
"  gnuplot*textGray:   white",
"  gnuplot*borderGray: gray50",
"  gnuplot*axisGray:   gray50",
"  gnuplot*line1Gray:  gray100",
"  gnuplot*line2Gray:  gray60",
"  gnuplot*line3Gray:  gray80",
"  gnuplot*line4Gray:  gray40",
"  gnuplot*line5Gray:  gray90",
"  gnuplot*line6Gray:  gray50",
"  gnuplot*line7Gray:  gray70",
"  gnuplot*line8Gray:  gray30",
"#\\begin{tabular}{|cl|} \\hline",
"#&gnuplot*background: black\\\\",
"#&gnuplot*textGray: white\\\\",
"#&gnuplot*borderGray: gray50\\\\",
"#&gnuplot*axisGray: gray50\\\\",
"#&gnuplot*line1Gray: gray100\\\\",
"#&gnuplot*line2Gray: gray60\\\\",
"#&gnuplot*line3Gray: gray80\\\\",
"#&gnuplot*line4Gray: gray40\\\\",
"#&gnuplot*line5Gray: gray90\\\\",
"#&gnuplot*line6Gray: gray50\\\\",
"#&gnuplot*line7Gray: gray70\\\\",
"#&gnuplot*line8Gray: gray30\\\\",
"%c l .",
"%@gnuplot*background: black",
"%@gnuplot*textGray: white",
"%@gnuplot*borderGray: gray50",
"%@gnuplot*axisGray: gray50",
"%@gnuplot*line1Gray: gray100",
"%@gnuplot*line2Gray: gray60",
"%@gnuplot*line3Gray: gray80",
"%@gnuplot*line4Gray: gray40",
"%@gnuplot*line5Gray: gray90",
"%@gnuplot*line6Gray: gray50",
"%@gnuplot*line7Gray: gray70",
"%@gnuplot*line8Gray: gray30",
"@end table",
"",
"2 line_resources",
"?commands set terminal be line_resources",
"?set terminal be line_resources",
"?set term be line_resources",
"?be line_resources",
" `gnuplot` honors the following resources for setting the width (in pixels) of",
" plot lines (shown here with their default values.)  0 or 1 means a minimal",
" width line of 1 pixel width.  A value of 2 or 3 may improve the appearance of",
" some plots.",
"@start table - first is interactive cleartext form",
"  gnuplot*borderWidth: 2",
"  gnuplot*axisWidth:   0",
"  gnuplot*line1Width:  0",
"  gnuplot*line2Width:  0",
"  gnuplot*line3Width:  0",
"  gnuplot*line4Width:  0",
"  gnuplot*line5Width:  0",
"  gnuplot*line6Width:  0",
"  gnuplot*line7Width:  0",
"  gnuplot*line8Width:  0",
"#\\begin{tabular}{|cl|} \\hline",
"#&gnuplot*borderWidth: 2\\\\",
"#&gnuplot*axisWidth: 0\\\\",
"#&gnuplot*line1Width: 0\\\\",
"#&gnuplot*line2Width: 0\\\\",
"#&gnuplot*line3Width: 0\\\\",
"#&gnuplot*line4Width: 0\\\\",
"#&gnuplot*line5Width: 0\\\\",
"#&gnuplot*line6Width: 0\\\\",
"#&gnuplot*line7Width: 0\\\\",
"#&gnuplot*line8Width: 0\\\\",
"%c l .",
"%@gnuplot*borderWidth: 2",
"%@gnuplot*axisWidth: 0",
"%@gnuplot*line1Width: 0",
"%@gnuplot*line2Width: 0",
"%@gnuplot*line3Width: 0",
"%@gnuplot*line4Width: 0",
"%@gnuplot*line5Width: 0",
"%@gnuplot*line6Width: 0",
"%@gnuplot*line7Width: 0",
"%@gnuplot*line8Width: 0",
"@end table",
"",
" `gnuplot` honors the following resources for setting the dash style used for",
" plotting lines.  0 means a solid line.  A two-digit number `jk` (`j` and `k`",
" are >= 1  and <= 9) means a dashed line with a repeated pattern of `j` pixels",
" on followed by `k` pixels off.  For example, '16' is a \"dotted\" line with one",
" pixel on followed by six pixels off.  More elaborate on/off patterns can be",
" specified with a four-digit value.  For example, '4441' is four on, four off,",
" four on, one off.  The default values shown below are for monochrome displays",
" or monochrome rendering on color or grayscale displays.  For color displays,",
" the default for each is 0 (solid line) except for `axisDashes` which defaults",
" to a '16' dotted line.",
"@start table - first is interactive cleartext form",
"  gnuplot*borderDashes:   0",
"  gnuplot*axisDashes:        16",
"  gnuplot*line1Dashes:        0",
"  gnuplot*line2Dashes:   42",
"  gnuplot*line3Dashes:   13",
"  gnuplot*line4Dashes:   44",
"  gnuplot*line5Dashes:   15",
"  gnuplot*line6Dashes: 4441",
"  gnuplot*line7Dashes:   42",
"  gnuplot*line8Dashes:   13",
"#\\begin{tabular}{|cl|} \\hline",
"#&gnuplot*borderDashes: 0\\\\",
"#&gnuplot*axisDashes: 16\\\\",
"#&gnuplot*line1Dashes: 0\\\\",
"#&gnuplot*line2Dashes: 42\\\\",
"#&gnuplot*line3Dashes: 13\\\\",
"#&gnuplot*line4Dashes: 44\\\\",
"#&gnuplot*line5Dashes: 15\\\\",
"#&gnuplot*line6Dashes: 4441\\\\",
"#&gnuplot*line7Dashes: 42\\\\",
"#&gnuplot*line8Dashes: 13\\\\",
"%c l .",
"%@gnuplot*borderDashes: 0",
"%@gnuplot*axisDashes: 16",
"%@gnuplot*line1Dashes: 0",
"%@gnuplot*line2Dashes: 42",
"%@gnuplot*line3Dashes: 13",
"%@gnuplot*line4Dashes: 44",
"%@gnuplot*line5Dashes: 15",
"%@gnuplot*line6Dashes: 4441",
"%@gnuplot*line7Dashes: 42",
"%@gnuplot*line8Dashes: 13",
"@end table"
#else /* JAPANESE_DOC */
"1 be",
"?commands set terminal be",
"?set terminal be",
"?set term be",
"?terminal be",
"?term be",
"?be",
"?BE",
" 出力形式 `be` は、X サーバを利用する`beos` オペレーティングシステム上",
" で gnuplot をコンパイルする人のためのものです。環境変数 `DISPLAY` がセ",
" ットされているか、環境変数 `TERM` が `xterm` にセットされているか、ま",
" たはコマンドラインオプションとして `-display` が使われていれば、プログ",
" ラムの起動時にこの出力形式が選択されます。",
"",
" 書式:",
"           set terminal be {reset} {<n>}",
"",
" 複数のグラフ描画ウィンドウをサポートしています。`set terminal be <n>`",
" は番号 n のウィンドウに出力します。n>0 の場合、その番号はウィンドウタ",
" イトルとアイコン名に `gplt <n>` として付けられます。現在のウィンドウは",
" カーソル記号の変化で区別できます (デフォルトカーソルから十字カーソルへ)。",
"",
" `gnuplot` ドライバが別な出力ドライバに変更されても、描画ウィンドウは開",
" いたままになります。描画ウィンドウは、そのウィンドウにカーソルを置いて",
" 文字 q を押すか、ウィンドウマネージャのメニューの `close` を選択すれば",
" 閉じることができます。`reset` を実行すれば全てのウィンドウを一度に閉じ",
" れます。それは実際にウィンドウを管理している子プロセスを終了します (も",
" し `-persist` が指定されていなければ)。",
"",
" 描画ウィンドウは `-persisit` オプションが与えられていなければ、対話の",
" 終了時に自動的に閉じられます。",
"",
" 描画サイズとアスペクト比は、`gnuplot` のウィンドウをリサイズすることで",
" も変更できます。",
"",
" 線の幅と点のサイズは `gnuplot` の `set linestyle` で変更可能です。",
"",
" 出力ドライバ `be` に関しては、`gnuplot` は (起動時に)、コマンドライン、",
" または設定ファイルから、geometry や font, name などの通常の X Toolkit",
" オプションやリソースの指定を受け付けます。それらのオプションについては",
" X(1) マニュアルページ (やそれと同等のもの) を参照してください。",
"",
" 他にも `be` 出力形式用の多くの `gnuplot` のオプションがあります。これ",
" らは `gnuplot` を呼ぶときにコマンドラインオプションとして指定するか、",
" または設定ファイル \".Xdefaults\" のリソースとして指定できます。これらは",
" 起動時に設定されるので、`gnuplot` 実行時には変更できません。",
"2 コマンドラインオプション (command-line_options)",
"?commands set terminal be command-line-options",
"?set terminal be command-line-options",
"?set term be command-line-options",
"?be command-line-options",
" X Toolkit オプションに加え、以下のオプションが gnuplot の立ち上げ時の",
" コマンドラインで、またはユーザのファイル \".Xdefaults\" 内のリソースとし",
" て指定できます:",
"@start table - まずは対話型テキスト形式",
"  `-mono`    カラーディスプレイ上で強制的に白黒描画",
"  `-gray`    グレイスケールまたはカラーディスプレイ上でのグレイスケール描画",
"             (デフォルトではグレイスケールディスプレイは白黒描画を受け付ける)",
"  `-clear`   新しい描画を表示する前に (瞬間的に) 画面を消去",
"  `-raise`   各描画後に描画ウィンドウを最前面へ出す",
"  `-noraise` 各描画後に描画ウィンドウを最前面へ出すことはしない",
"  `-persist` gnuplot プログラム終了後も描画ウィンドウを残す",
"#\\begin{tabular}{|cl|} \\hline",
"#`-mono`  & カラーディスプレイ上で強制的に白黒描画\\\\",
"#`-gray`  & グレイスケールまたはカラーディスプレイ上でのグレイスケール描画\\\\",
"#            & (デフォルトではグレイスケールディスプレイは白黒描画を受け付ける)\\\\",
"#`-clear` & 新しい描画を表示する前に (瞬間的に) 画面を消去\\\\",
"#`-raise` & 各描画後に描画ウィンドウを最前面へ出す\\\\",
"#`-noraise` & 各描画後に描画ウィンドウを最前面へ出すことはしない\\\\",
"#`-persist` & gnuplot プログラム終了後も描画ウィンドウを残す\\\\",
"%c l .",
"%`-mono`@カラーディスプレイ上で強制的に白黒描画",
"%`-gray`@グレイスケールまたはカラーディスプレイ上でのグレイスケール描画",
"%           @(デフォルトではグレイスケールディスプレイは白黒描画を受け付ける)",
"%`-clear`@新しい描画を表示する前に (瞬間的に) 画面を消去",
"%`-raise`@各描画後に描画ウィンドウを最前面へ出す",
"%`-noraise`@各描画後に描画ウィンドウを最前面へ出すことはしない",
"%`-persist`@gnuplot プログラム終了後も描画ウィンドウを残す",
"@end table",
" 上記のオプション、はコマンドライン上での指定書式で、\".Xdefaults\" にリ",
" ソースとして指定するときは異なる書式を使います。",
"",
" 例:",
"           gnuplot*gray: on",
"",
" `gnuplot` は描画スタイル `points` で描画する点のサイズの制御にも、コマンド",
" ラインオプション (`-pointsize <v>`) とリソース (`gnuplot*pointsize: <v>`)",
" を提供しています。値 `v` は点のサイズの拡大率として使われる実数値",
" (0 < v <= 10) で、例えば `-pointsize 2` はデフォルトのサイズの 2 倍、",
" `-pointsize 0.5` は普通のサイズの半分の点が使われます。",
"2 白黒オプション (monochrome_options)",
"?commands set terminal be monochrome_options",
"?set terminal be monochrome_options",
"?set term be monochrome_options",
"?be monochrome_options",
" 白黒ディスプレイに対しては `gnuplot` は描画色 (foreground) も背景色",
" (background) も与えません。デフォルトでは背景は白、描画は黒です。`-rv`",
" や `gnuplot*reverseVideo: on` の場合には背景が黒で描画は白になります。",
"",
"2 カラーリソース (color_resources)",
"?commands set terminal be color_resources",
"?set terminal be color_resources",
"?set term be color_resources",
"?be color_resources",
" カラーディスプレイに対しては、`gnuplot` は以下のリソース (ここではその",
" デフォルトの値を示します)、または白黒階調 (greyscale) のリソースを参照",
" します。リソースの値はシステム上の BE rgb.txt ファイルに書かれている色",
" 名、または 16 進の色指定 (BE のマニュアルを参照) か、色名と強度 (0 か",
" ら 1 の間の値) をコンマで区切った値を使用できます。例えば `blue, 0.5`",
" は半分の強度の青、を意味します。",
"@start table - まずは対話型テキスト形式",
"  gnuplot*background:  white",
"  gnuplot*textColor:   black",
"  gnuplot*borderColor: black",
"  gnuplot*axisColor:   black",
"  gnuplot*line1Color:  red",
"  gnuplot*line2Color:  green",
"  gnuplot*line3Color:  blue",
"  gnuplot*line4Color:  magenta",
"  gnuplot*line5Color:  cyan",
"  gnuplot*line6Color:  sienna",
"  gnuplot*line7Color:  orange",
"  gnuplot*line8Color:  coral",
"#\\begin{tabular}{|cl|} \\hline",
"#&gnuplot*background: white\\\\",
"#&gnuplot*textColor: black\\\\",
"#&gnuplot*borderColor: black\\\\",
"#&gnuplot*axisColor: black\\\\",
"#&gnuplot*line1Color: red\\\\",
"#&gnuplot*line2Color: green\\\\",
"#&gnuplot*line3Color: blue\\\\",
"#&gnuplot*line4Color: magenta\\\\",
"#&gnuplot*line5Color: cyan\\\\",
"#&gnuplot*line6Color: sienna\\\\",
"#&gnuplot*line7Color: orange\\\\",
"#&gnuplot*line8Color: coral\\\\",
"%c l .",
"%@gnuplot*background: white",
"%@gnuplot*textColor: black",
"%@gnuplot*borderColor: black",
"%@gnuplot*axisColor: black",
"%@gnuplot*line1Color: red",
"%@gnuplot*line2Color: green",
"%@gnuplot*line3Color: blue",
"%@gnuplot*line4Color: magenta",
"%@gnuplot*line5Color: cyan",
"%@gnuplot*line6Color: sienna",
"%@gnuplot*line7Color: orange",
"%@gnuplot*line8Color: coral",
"@end table",
"",
" これらに関するコマンドラインの書式は、例えば以下の通りです。",
"",
" 例:",
"           gnuplot -background coral",
"",
"2 灰色階調リソース (grayscale_resources)",
"?commands set terminal be grayscale_resources",
"?set terminal be grayscale_resources",
"?set term be grayscale_resources",
"?be grayscale_resources",
" `-gray` を選択すると、`gnuplot` は、グレイスケールまたはカラーディスプ",
" レイに対して、以下のリソースを参照します (ここではそのデフォルトの値を",
" 示します)。デフォルトの背景色は黒であることに注意してください。",
"@start table - まずは対話型テキスト形式",
"  gnuplot*background: black",
"  gnuplot*textGray:   white",
"  gnuplot*borderGray: gray50",
"  gnuplot*axisGray:   gray50",
"  gnuplot*line1Gray:  gray100",
"  gnuplot*line2Gray:  gray60",
"  gnuplot*line3Gray:  gray80",
"  gnuplot*line4Gray:  gray40",
"  gnuplot*line5Gray:  gray90",
"  gnuplot*line6Gray:  gray50",
"  gnuplot*line7Gray:  gray70",
"  gnuplot*line8Gray:  gray30",
"#\\begin{tabular}{|cl|} \\hline",
"#&gnuplot*background: black\\\\",
"#&gnuplot*textGray: white\\\\",
"#&gnuplot*borderGray: gray50\\\\",
"#&gnuplot*axisGray: gray50\\\\",
"#&gnuplot*line1Gray: gray100\\\\",
"#&gnuplot*line2Gray: gray60\\\\",
"#&gnuplot*line3Gray: gray80\\\\",
"#&gnuplot*line4Gray: gray40\\\\",
"#&gnuplot*line5Gray: gray90\\\\",
"#&gnuplot*line6Gray: gray50\\\\",
"#&gnuplot*line7Gray: gray70\\\\",
"#&gnuplot*line8Gray: gray30\\\\",
"%c l .",
"%@gnuplot*background: black",
"%@gnuplot*textGray: white",
"%@gnuplot*borderGray: gray50",
"%@gnuplot*axisGray: gray50",
"%@gnuplot*line1Gray: gray100",
"%@gnuplot*line2Gray: gray60",
"%@gnuplot*line3Gray: gray80",
"%@gnuplot*line4Gray: gray40",
"%@gnuplot*line5Gray: gray90",
"%@gnuplot*line6Gray: gray50",
"%@gnuplot*line7Gray: gray70",
"%@gnuplot*line8Gray: gray30",
"@end table",
"",
"2 線描画リソース (line_resources)",
"?commands set terminal be line_resources",
"?set terminal be line_resources",
"?set term be line_resources",
"?be line_resources",
" `gnuplot` は描画の線の幅 (ピクセル単位) の設定のために以下のリソースを",
" 参照します (ここではそのデフォルトの値を示します)。0 または 1 は最小の",
" 線幅の 1 ピクセル幅を意味します。2 または 3 の値によってグラフの外観を",
" 改善できる場合もあるでしょう。",
"@start table - まずは対話型テキスト形式",
"  gnuplot*borderWidth: 2",
"  gnuplot*axisWidth:   0",
"  gnuplot*line1Width:  0",
"  gnuplot*line2Width:  0",
"  gnuplot*line3Width:  0",
"  gnuplot*line4Width:  0",
"  gnuplot*line5Width:  0",
"  gnuplot*line6Width:  0",
"  gnuplot*line7Width:  0",
"  gnuplot*line8Width:  0",
"#\\begin{tabular}{|cl|} \\hline",
"#&gnuplot*borderWidth: 2\\\\",
"#&gnuplot*axisWidth: 0\\\\",
"#&gnuplot*line1Width: 0\\\\",
"#&gnuplot*line2Width: 0\\\\",
"#&gnuplot*line3Width: 0\\\\",
"#&gnuplot*line4Width: 0\\\\",
"#&gnuplot*line5Width: 0\\\\",
"#&gnuplot*line6Width: 0\\\\",
"#&gnuplot*line7Width: 0\\\\",
"#&gnuplot*line8Width: 0\\\\",
"%c l .",
"%@gnuplot*borderWidth: 2",
"%@gnuplot*axisWidth: 0",
"%@gnuplot*line1Width: 0",
"%@gnuplot*line2Width: 0",
"%@gnuplot*line3Width: 0",
"%@gnuplot*line4Width: 0",
"%@gnuplot*line5Width: 0",
"%@gnuplot*line6Width: 0",
"%@gnuplot*line7Width: 0",
"%@gnuplot*line8Width: 0",
"@end table",
"",
" `gnuplot` は線描画で使用する点線の形式の設定用に以下のリソースを参照し",
" ます。0 は実線を意味します。2 桁の 10 進数 `jk` (`j` と `k` は 1 から",
" 9 までの値) は、`j` 個のピクセルの描画に `k` 個の空白のピクセルが続く",
" パターンの繰り返しからなる点線を意味します。例えば '16' は 1 個のピク",
" セルの後に 6 つの空白が続くパターンの点線になります。さらに、4 桁の 10",
" 進数でより詳細なピクセルと空白の列のパターンを指定できます。例えば、",
" '4441' は 4 つのピクセル、4 つの空白、4 つのピクセル、1 つの空白のパタ",
" ーンを意味します。以下のデフォルトのリソース値は、白黒ディスプレイ、あ",
" るいはカラーや白黒階調 (grayscale) ディスプレイ上の白黒描画における値",
" です。カラーディスプレイではそれらのデフォルトの値はほとんど 0 (実線)",
" で、`axisDashes` のみがデフォルトで '16' の点線となっています。",
"@start table - まずは対話型テキスト形式",
"  gnuplot*borderDashes:   0",
"  gnuplot*axisDashes:        16",
"  gnuplot*line1Dashes:        0",
"  gnuplot*line2Dashes:   42",
"  gnuplot*line3Dashes:   13",
"  gnuplot*line4Dashes:   44",
"  gnuplot*line5Dashes:   15",
"  gnuplot*line6Dashes: 4441",
"  gnuplot*line7Dashes:   42",
"  gnuplot*line8Dashes:   13",
"#\\begin{tabular}{|cl|} \\hline",
"#&gnuplot*borderDashes: 0\\\\",
"#&gnuplot*axisDashes: 16\\\\",
"#&gnuplot*line1Dashes: 0\\\\",
"#&gnuplot*line2Dashes: 42\\\\",
"#&gnuplot*line3Dashes: 13\\\\",
"#&gnuplot*line4Dashes: 44\\\\",
"#&gnuplot*line5Dashes: 15\\\\",
"#&gnuplot*line6Dashes: 4441\\\\",
"#&gnuplot*line7Dashes: 42\\\\",
"#&gnuplot*line8Dashes: 13\\\\",
"%c l .",
"%@gnuplot*borderDashes: 0",
"%@gnuplot*axisDashes: 16",
"%@gnuplot*line1Dashes: 0",
"%@gnuplot*line2Dashes: 42",
"%@gnuplot*line3Dashes: 13",
"%@gnuplot*line4Dashes: 44",
"%@gnuplot*line5Dashes: 15",
"%@gnuplot*line6Dashes: 4441",
"%@gnuplot*line7Dashes: 42",
"%@gnuplot*line8Dashes: 13",
"@end table"
#endif /* JAPANESE_DOC */
END_HELP(be)
START_HELP(block)
#ifndef JAPANESE_DOC
"1 block",
"?set terminal block",
"?block",
" The `block` terminal generates pseudo-graphic output using Unicode block or",
" Braille characters to increase the resolution.  It is an alternative for",
" terminal graphics.  It requires a UTF-8 capable terminal or viewer.  Drawing",
" uses the internal bitmap code.  Text is printed on top of the graphics",
" using the `dumb` terminal's routines.",
"",
" Syntax:",
"         set term block",
"                 {dot | half | quadrants | sextants | octants | braille |",
"                   sextpua | octpua}",
"                 {{no}enhanced}",
"                 {size <x>, <y>}",
#ifndef NO_DUMB_COLOR_SUPPORT
"                 {mono | ansi | ansi256 | ansirgb}",
"                 {{no}optimize}",
#endif
"                 {[no]attributes}",
"                 {numpoints | charpoints | gppoints}",
"                 {[no]animate}",
"",
" `size` sets the terminal size in character cells.",
"",
" `dot`, `half`, `quadrants`, `sextants`, or `braille` select the character",
" set used for the creation of pseudo-graphics.  `dot` uses simple dots,",
" while `half` uses half-block characters.  `quadrants` uses block characters",
" which yield double resolution in both directions.  `sextants` uses 2x3 block",
" characters, and `braille` uses Braille characters which give a 2x4",
" pseudo-resolution.  `octants` uses the proposed 2x4 block characters.",
" `sextpua` and `octpua` use the sextants or octants, respectively, in the",
" CreativeKorp private-use-area (PUA) which might be only available with their",
" `FairfaxHD` and `KreativeSquare` fonts.",
"",
" Note that the 2x3 block characters ('sextants') have only been included in",
" Unicode 13.  Hence, font support is still limited.  Similarly for Braille.",
" Usable fonts include e.g. `unscii`, `IBM 3270`, `GNU Unifont`, `DejaVu Sans`,",
" and, `FairfaxHD`.  2x4 block characters ('octants') have only been accepted",
" for inclusion in a future Unicode standard in 2022 and are available in the",
" `FairfaxHD` font.",
#ifndef NO_DUMB_COLOR_SUPPORT
"",
" The `ansi`, `ansi256`, and `ansirgb` options will include escape sequences",
" in the output to output colors.  Note that these might not be handled by",
" your terminal.  Default is `mono`.  See `terminal dumb` for a list of",
" escape sequences.",
"",
" The `attributes` option enables bold and italic text on terminals or",
" emulators that support these escape sequences, see `terminal dumb`.",
"",
" Using block characters increases the pseudo-resolution of the bitmap.  But",
" this is not the case for the color.  Multiple 'pixels' necessarily share the",
" same color.  This is dealt with by averaging the color of all pixels in a",
" charcell.  With `optimize`, the terminal tries to improve by setting both,",
" the background and foreground colors.  This trick works perfectly for the",
" `half` mode, but is increasingly difficult for `quadrants`, `sextants`,",
" or `octants`. For `braille` this cannot be used.",
#endif
"",
" `gppoints` draws point symbols using graphics commands. Due to the low",
" resolution of the terminal, this is mostly viable for `braille` or",
" `octant` mode, and probably most useful for error bars.",
" `charpoints` uses Unicode symbol characters instead.  Note that these",
" are also always drawn on top of the graphics.",
" `numpoints` uses super- and subscript numerals to double the vertical",
" resolution. For `sextants`, points in the character cell's center position",
" have to be drawn using ordinary numerals, though. Note that the bitmap",
" resolution is still different and lines and symbols in general do not align",
" exactly when using `charpoints` or `numpoints`.",
"",
" The `animate` option resets the cursor position to the top left of the plot",
" after every plot so that successive plots overwrite the same area on the",
" screen rather than having earlier plots scroll off the top. This may be",
" desirable in order to create an in-place animation.",
""
#else /* JAPANESE_DOC */
"1 block",
"?set terminal block",
"?block",
" `block` 出力形式は、Unicode ブロック要素 (Block element; U+2580-259F)",
" 文字、または点字文字 (Braille Patterns; U+2800-28FF) を使って解像度を向",
" 上させた疑似グラフィック出力を作成します。これは端末 (ターミナル) グラ",
" フィックの代用品です。それには、UTF-8 が表示できる端末、またはビューワ",
" が必要です。描画には、内部ビットマップコードを用います。テキストは",
" `dumb` 出力形式ルーチンを用いて、グラフィックスの一番上に表示します。",
"",
" 書式:",
"         set term block",
"                 {dot | half | quadrants | sextants | octants | braille |",
"                   sextpua | octpua}",
"                 {{no}enhanced}",
"                 {size <x>, <y>}",
#ifndef NO_DUMB_COLOR_SUPPORT
"                 {mono | ansi | ansi256 | ansirgb}",
"                 {{no}optimize}",
#endif
"                 {[no]attributes}",
"                 {numpoints | charpoints | gppoints}",
"                 {[no]animate}",
"",
" `size` は、ターミナルサイズを文字セル単位で設定します。",
"",
" `dot`, `half`, `quadrants`, `sextants`, `braille` は、疑似グラフィック",
" の生成に用いる文字セットの選択です。`dot` は単純なドットを、`half` は半",
" ブロック文字群を使用します。`quadrants` は、縦横両方向に 2 倍の解像度を",
" 生む四分ブロック文字群を使います。`sextants` は、2x3 の六分ブロック文字",
" 群を使用します。`braille` は点字記号を使い、これは 2x4 の疑似解像度を提",
" 供します。`octants` は、提案された 2x4 ブロック文字を使います。`sectpua`",
" と `octpua` は、KreativeKorp 私用領域 (PUA) 内の 2x3, 2x4 ブロック文字",
" をそれぞれ使用しますが、そのうち利用可能なのは多分 `FairfaxHD` と",
" `KreativeSquare` フォントのみです。",
"",
" 2x3 の六分ブロック文字 ('sextants') は、Unicode 13 にのみ含まれているこ",
" とに注意してください。よって、それをサポートするフォントは未だ限定的で",
" す。それは点字記号についても同様です。利用可能なフォントには、例えば",
" `unscii`, `IBM 3270`, `GNU Unifont`, `DejaVu Sans`, `FairfaxHD` などが",
" あります。2x4 ブロック文字 ('octants') は、まだ 2022 年に将来の Unicode",
" 規格に入ることが決まった段階にすぎません。`FairfaxHD` フォントには含ま",
" れています。",
#ifndef NO_DUMB_COLOR_SUPPORT
"",
" オプション `ansi`, `ansi256`, `ansirgb` は、出力に色を表示させるための",
" エスケープシーケンスを含ませます。これらは、あなたの端末が処理できない",
" かもしれないことに注意してください。デフォルトは `mono` (白黒) です。",
" エスケープシーケンスの一覧については、以下参照: `terminal dumb`。",
"",
" オプション `attributes` は、太字やイタリック体文字用のエスケープシーケ",
" ンスをサポートする端末、エミュレーター上でそれらの文字出力を可能にしま",
" す。以下参照 `terminal dumb`。",
"",
" ブロック文字群を使うことで、ビットマップの疑似解像度は上がりますが、こ",
" れはカラーに対してはそうではありません。複数の `pixel` が同じ色を共有す",
" る必要があります。これは、ひとつの文字セルで、すべてのピクセルの色の平",
" 均を取ることで処理しています。`optimize` をつけると、この出力形式は背景",
" 色と前景色の両方の設定によってそれを改善しようとします。この手法は、",
" `half` モードでは完全に機能しますが、`quadrants`, `sextants`, `octants`",
" では難しさが増していきます。また、`braille` では使用できません。",
#endif
"",
" `gppoints` は、グラフィックコマンドを使って点記号を描きます。端末の低解",
" 像度性のため、`braille` と `octant` モードではこれは大抵実用的です。多",
" 分エラーバーとしては最も有用でしょう。",
" `charpoints` は、代わりに Unicode 記号文字を使用します。これらも常にグ",
" ラフィックの一番上に描かれることに注意してください。",
" `numpoints` は上付き下付きの数字を使用し、垂直方向に 2 倍の解像度にしま",
" す。しかし `sextants` に対しては、文字の枠の中心位置の点は、通常の数字",
" で描く必要があります。`charpoints` か `numpoints` を使っている場合、ビ",
" ットマップの解像度はそれでも異なり、線と記号は一般に正確には揃わないこ",
" とに注意してください。",
"",
" オプション `animate` は、各描画後に、カーソル位置をグラフの左上にリセッ",
" トし、前のグラフを上にスクロールして消す代わりにスクリーンの同じ領域に",
" 次のグラフを上書きするようにします。これは、同じ場所でのアニメーション",
" を作成するためには有用でしょう。",
""
#endif /* JAPANESE_DOC */
END_HELP(block)
START_HELP(caca)
#ifndef JAPANESE_DOC
"1 caca",
"?commands set terminal caca",
"?set terminal caca",
"?set term caca",
"?terminal caca",
"?term caca",
"?caca",
" [EXPERIMENTAL] ",
" The `caca` terminal is a mostly-for-fun output mode that uses `libcaca` to",
" plot using ascii characters.  In contrast to the `dumb` terminal it includes",
" support for color, box fill, images, rotated text, filled polygons,",
" and mouse interaction.",
"",
" Syntax:",
"       set terminal caca {{driver | format} {default | <driver> | list}}",
"                         {color | monochrome}",
"                         {{no}inverted}",
"                         {enhanced | noenhanced}",
"                         {background <rgb color>}",
"                         {title \"<plot window title>\"}",
"                         {size <width>,<height>}",
"                         {charset ascii|blocks|unicode}",
"",
" The `driver` option selects the `libcaca` display driver or export `format`.",
" Use `default` is to let `libcaca` choose the platform default display driver.",
" The default driver can be changed by setting the environment variable",
" CACA_DRIVER before starting `gnuplot`.",
" Use `set term caca driver list` to print a list of supported output modes.",
"",
" The `color` and `monochrome` options select colored or mono output.",
" Note that this also changes line symbols.",
" Use the `inverted` option if you prefer a black background over the default",
" white. This also changes the color of black default linetypes to white.",
"",
" Enhanced text support can be activated using the `enhanced` option,",
" see `enhanced text`.",
"",
" The title of the output window can be changed with the `title` option, if",
" supported by the `libcaca` driver.",
"",
" The `size` option selects the size of the canvas in characters.",
" The default is 80 by 25.  If supported by the backend, the canvas size will",
" be automatically adjusted to the current window/terminal size.",
" The default size of the \"x11\" and \"gl\" window can be controlled via the",
" CACA_GEOMETRY environment variable.  The geometry of the window of the",
" \"win32\" driver can be controlled and permanently changed via the app menu.",
"",
" The `charset` option selects the character set used for lines, points,",
" filling of polygons and boxes and dithering of images.  Note that some",
" backend/terminal/font combinations might not support some characters of the",
" `blocks` or `unicode` character set.  On Windows it is recommend to use",
" a non-raster font such as \"Lucida Console\" or \"Consolas\".",
"",
" The caca terminal supports mouse interaction. Please beware that some",
" backends of `libcaca` (e.g. slang, ncurses) only update the mouse position",
" on mouse clicks.  Modifier keys (ctrl, alt, shift) are not supported by",
" `libcaca` and are thus unavailable.",
"",
" The default `encoding` of the `caca` terminal is utf8. It also supports",
" the cp437 `encoding`.",
"",
" The number of colors supported by `libcaca` backends differs.  Most backends",
" support 16 foreground and 16 background colors only, whereas e.g. the ",
" \"x11\" backend supports truecolor.",
"",
" Depending on the terminal and `libcaca` backend, only 8 different background",
" colors might be supported.  Bright colors (with the most most significant bit",
" of the background color set) are then interpreted as indicator for blinking",
" text.  Try using `background rgb \"gray\"` in that case.",
"",
" See also the libcaca web site at",
"^ <a href=\"http://caca.zoy.org/wiki/libcaca\">",
"           http://caca.zoy.org/wiki/libcaca",
"^ </a>",
" and libcaca environment variables",
"^ <a href=\"http://caca.zoy.org/doxygen/libcaca/libcaca-env.html\">",
"           http://caca.zoy.org/doxygen/libcaca/libcaca-env.html",
"^ </a>",
""
"2 caca limitations and bugs",
"?terminal caca limitations",
"?terminal caca bugs",
"?term caca limitations",
"?term caca bugs",
"?caca limitations",
"?caca bugs",
" The `caca` terminal has known bugs and limitations:",
"",
" Unicode support depends on the driver and the terminal.",
" The \"x11\" backend supports unicode since libcaca version 0.99.beta17.",
" Due to a bug in `libcaca` <0.99.beta20, the \"slang\" driver does not",
" support unicode.",
" Note that `libcaca` <0.99.beta19 contains a bug which results in an",
" endless loop if you supply illegal 8bit sequences.",
"",
" Bright background colors may cause blinking.",
"",
" Modifier keys are not supported for mousing, see `term caca`.",
"",
" Rotated enhanced text, and transparency are not supported.",
" The `size` option is not considered for on-screen display.",
"",
" In order to correctly draw the key box, use",
"",
"       set key width 1 height 1",
"",
" Alignment of enhanced text is wrong if it contains utf8 characters.",
" Resizing of Windows console window does not work correctly due to a bug in",
" libcaca.",
" Closing the terminal window by clicking the \"X\" on the title line",
" will terminate wgnuplot. Press \"q\" to close the window."
#else /* JAPANESE_DOC */
"1 caca",
"?commands set terminal caca",
"?set terminal caca",
"?set term caca",
"?terminal caca",
"?term caca",
"?caca",
" [試験段階]",
" `caca` 出力形式は、`libcaca` を使ってアスキー文字によるグラフを描く、ほ",
" ぼ娯楽的な出力モードです。`dumb` 出力形式と比べると、こちらは色、箱の塗",
" り潰し、画像、文字列の回転、多角形の塗り潰し、マウス操作をサポートして",
" います。",
"",
" 書式:",
"       set terminal caca {{driver | format} {default | <driver> | list}}",
"                         {color | monochrome}",
"                         {{no}inverted}",
"                         {enhanced | noenhanced}",
"                         {background <rgb color>}",
"                         {title \"<plot window title>\"}",
"                         {size <width>,<height>}",
"                         {charset ascii|blocks|unicode}",
"",
" オプション `driver` (または `format`) は、表示ドライバとして `libcaca`",
" を選択するか、または出力ドライバを選択します。",
" `default` は、`libcaca` にその環境のデフォルトのディスプレイドライバを",
" 選択させます。デフォルトのドライバは、`gnuplot` の起動前に環境変数",
" CACA_DRIVER を設定しておくことで変更できます。",
" `set term caca driver list` を使用すると、サポートする出力モードの一覧",
" を表示します。",
"",
" オプション `color` と `monochrome` は、カラーか白黒出力を選択します。",
" これは、線の記号も変更することに注意してください。",
" デフォルトの白背景を黒背景にしたい場合は、オプション `inverted` を使っ",
" てください。これは、デフォルトの線種の黒を白にも変えます。",
"",
" 拡張文字列処理は、オプション `enhanced` を使うことで有効になります。以",
" 下参照: `enhanced text`。",
"",
" 出力ウィンドウのタイトルは、`libcaca` ドライバがサポートしていれば、オ",
" プション `title` で変更できます。",
"",
" オプション `size` は、キャンバスのサイズを文字単位で選択します。デフォ",
" ルトは 80 x 25 です。バックエンドがサポートしていれば、キャンバスサイズ",
" は、現在のウィンドウ/ターミナルのサイズに自動的に合います。\"x11\" と",
" \"gl\" ウィンドウのデフォルトのサイズは、環境変数 CACA_GEOMETRY で制御",
" できます。\"win32\" ドライバでのウィンドウの位置・サイズ情報は、アプリ",
" ケーションメニューで制御、及び恒常的な変更が行えます。",
"",
" オプション `charset` は、曲線、点、多角形や長方形の塗り潰し、画像の中間",
" 色表現などで使われる文字集合を選択します。バックエンドとターミナルとフ",
" ォントの組み合わせによっては、`blocks` か `unicode` の文字集合はサポー",
" トしない可能性もあることに注意してください。特に Windows では、",
" \"Lucida Console\" や \"Consolas\" のような非ラスタフォントの使用を勧め",
" ます。",
"",
" caca 出力形式は、マウス操作をサポートしています。`libcaca` のいくつかの",
" バックエンド (例えば slang や ncurses) はマウスクリックしたマウスの位置",
" しか更新しないことに注意してください。修飾キー (Ctrl, Alt, Shift) は、",
" `libcaca` ではサポートしていないので、利用できません。",
"",
" `caca` 出力形式のデフォルトの `encoding` は utf8 です。cp437 `encoding`",
" もサポートしています。",
"",
" `libcaca` のサポートする色の数は、バックエンドにより異なります。たいて",
" いのバックエンドは、16 色の前景色と 16 色の背景色のみをサポートしていま",
" すが、例えば \"x11\" バックエンドは、Truecolor をサポートしています。",
"",
" 出力形式と `libcaca` バックエンドによっては、背景色 8 色しかサポートさ",
" ない場合もあります。明色 (背景色の中で最も重要) は、文字を輝かせている",
" と解釈されます。この場合、`background rgb \"gray\"` を使用してみてくだ",
" さい。",
"",
" 以下の libcaca Web サイト",
"^ <a href=\"http://caca.zoy.org/wiki/libcaca\">",
"           http://caca.zoy.org/wiki/libcaca",
"^ </a>",
" および libcaca 環境変数に関する説明",
"^ <a href=\"http://caca.zoy.org/doxygen/libcaca/libcaca-env.html\">",
"           http://caca.zoy.org/doxygen/libcaca/libcaca-env.html",
"^ </a>",
" も参照してみてください。",
""
"2 caca limitations and bugs",
"?terminal caca limitations",
"?terminal caca bugs",
"?term caca limitations",
"?term caca bugs",
"?caca limitations",
"?caca bugs",
" `caca` 出力形式には、既知のバグと制限があります:",
"",
" Unicode のサポートは、ドライバと出力形式依存です。",
" \"x11\" バックエンドは libcaca version 0.99.beta17 から unicode をサポ",
" ートしていますが、`libcaca` < 0.99.beta20 でのバグのため、\"slang\" ド",
" ライバは unicode をサポートしていません。",
" `libcaca` < 0.99.beta19 には、不正な 8 ビット列を与えると無限ループを引",
" き起こすというバグがあることに注意してください。",
"",
" 明るい背景色は点滅することがあります。",
"",
" マウス操作では修飾キーはサポートしません。以下参照: `term caca`。",
"",
" 拡張文字列の回転、および透明化はサポートしていません。`size` オプション",
" は、オンスクリーンディスプレイでは考慮されません。",
"",
" 凡例 (key) の箱を正しく描くには、以下のようにしてください:",
"",
"       set key width 1 height 1",
"",
" 拡張文字列の位置合わせは、UTF-8 文字列が含まれている場合はうまくいきま",
" せん。",
" Windows のコンソールウィンドウのリサイズは、libcaca のバグのため正しく",
" 機能しません。",
" タイトル行の上で \"X\" をクリックしてターミナルウィンドウを閉じる機能は",
" wgnuplot を終了させてしまいますので、ウィンドウを閉じるには \"q\" を打",
" ってください。"
#endif /* JAPANESE_DOC */
END_HELP(caca)
START_HELP(cairolatex)
#ifndef JAPANESE_DOC
"1 cairolatex",
"?set terminal cairolatex",
"?terminal cairolatex",
"?set term cairolatex",
"?term cairolatex",
"?cairolatex",
" The `cairolatex` terminal device generates encapsulated PostScript (*.eps),",
" PDF, or PNG output using the cairo and pango support libraries and uses LaTeX",
" for text output using the same routines as the `epslatex` terminal.",
"",
" Syntax:",
"       set terminal cairolatex",
"                      {eps | pdf | png}",
"                      {standalone | input}",
"                      {blacktext | colortext | colourtext}",
"                      {header <header> | noheader}",
"                      {mono|color}",
"                      {{no}transparent} {{no}crop} {background <rgbcolor>}",
"                      {font <font>} {fontscale <scale>}",
"                      {linewidth <lw>} {rounded|butt|square} {dashlength <dl>}",
"                      {size <XX>{unit},<YY>{unit}}",
"                      {resolution <dpi>}",
"",
" The cairolatex terminal prints a plot like `terminal epscairo` or",
" `terminal pdfcairo` but transfers the texts to LaTeX instead of including",
" them in the graph. For reference of options not explained here see `pdfcairo`.",
"",
" `eps`, `pdf`, or `png` select the type of graphics output. Use `eps` with",
" latex/dvips and `pdf` for pdflatex.  If your plot has a huge number",
" of points use `png` to keep the filesize down.  When using the `png` option,",
" the terminal accepts an extra option `resolution` to control the pixel",
" density of the resulting PNG.  The argument of `resolution` is an integer",
" with the implied unit of DPI.",
"",
" `blacktext` forces all text to be written in black even in color mode;",
"",
" The `cairolatex` driver offers a special way of controlling text positioning:",
" (a) If any text string begins with '{', you also need to include a '}' at the",
" end of the text, and the whole text will be centered both horizontally",
" and vertically by LaTeX.  (b) If the text string begins with '[', you need",
" to continue it with: a position specification (up to two out of t,b,l,r,c),",
" ']{', the text itself, and finally, '}'. The text itself may be anything",
" LaTeX can typeset as an LR-box. \\rule{}{}'s may help for best positioning.",
" See also the documentation for the `pslatex` terminal driver.",
" To create multiline labels, use \\shortstack, for example",
"    set ylabel '[r]{\\shortstack{first line \\\\ second line}}'",
"",
" The `back` option of `set label` commands is handled slightly different",
" than in other terminals. Labels using 'back' are printed behind all other",
" elements of the plot while labels using 'front' are printed above",
" everything else.",
"",
" The driver produces two different files, one for the eps, pdf, or png part of",
" the figure and one for the LaTeX part. The name of the LaTeX file is taken",
" from the `set output` command. The name of the eps/pdf/png file is derived by",
" replacing the file extension (normally '.tex') with '.eps'/'.pdf'/'.png'",
" instead. There is no LaTeX output if no output file is given!  Remember to",
" close the `output file` before next plot unless in `multiplot` mode.",
"",
" In your LaTeX documents use '\\input{filename}' to include the figure.",
" The '.eps'/'.pdf'/'.png' file is included by the command",
" \\includegraphics{...}, so you must also include \\usepackage{graphicx} in",
" the LaTeX preamble.  If you want to use coloured text (option `colourtext`)",
" you also have to include \\usepackage{color} in the LaTeX preamble.",
"",
" The behaviour concerning font selection depends on the header mode.",
" In all cases, the given font size is used for the calculation of proper",
" spacing. When not using the `standalone` mode the actual LaTeX font and",
" font size at the point of inclusion is taken, so use LaTeX commands for",
" changing fonts. If you use e.g. 12pt as font size for your LaTeX",
" document, use '\", 12\"' as options. The font name is ignored. If using",
" `standalone` the given font and font size are used, see below for a",
" detailed description.",
"",
" If text is printed coloured is controlled by the TeX booleans \\ifGPcolor",
" and \\ifGPblacktext. Only if \\ifGPcolor is true and \\ifGPblacktext is",
" false, text is printed coloured. You may either change them in the",
" generated TeX file or provide them globally in your TeX file, for example",
" by using",
"    \\newif\\ifGPblacktext",
"    \\GPblacktexttrue",
" in the preamble of your document. The local assignment is only done if no",
" global value is given.",
"",
" When using the cairolatex terminal give the name of the TeX file in the",
" `set output` command including the file extension (normally \".tex\").",
" The graph filename is generated by replacing the extension.",
"",
" If using the `standalone` mode a complete LaTeX header is added to the",
" LaTeX file; and \"-inc\" is added to the filename of the gaph file.",
" The `standalone` mode generates a TeX file that produces",
" output with the correct size when using dvips, pdfTeX, or VTeX.",
" The default, `input`, generates a file that has to be included into a",
" LaTeX document using the \\input command.",
"",
" If a font other than \"\" or \"default\" is given it is interpreted as",
" LaTeX font name.  It contains up to three parts, separated by a comma:",
" 'fontname,fontseries,fontshape'.  If the default fontshape or fontseries",
" are requested, they can be omitted.  Thus, the real syntax for the fontname",
" is '{fontname}{,fontseries}{,fontshape}'.  The naming convention for all",
" parts is given by the LaTeX font scheme.  The fontname is 3 to 4 characters",
" long and is built as follows: One character for the font vendor, two",
" characters for the name of the font, and optionally one additional",
" character for special fonts, e.g., 'j' for fonts with old-style numerals",
" or 'x' for expert fonts. The names of many fonts is described in",
"^ <a href=\"http://www.tug.org/fontname/fontname.pdf\">",
"           http://www.tug.org/fontname/fontname.pdf",
"^ </a>",
" For example, 'cmr' stands for Computer Modern Roman, 'ptm' for Times-Roman,",
" and 'phv' for Helvetica.  The font series denotes the thickness of the",
" glyphs, in most cases 'm' for normal (\"medium\") and 'bx' or 'b' for bold",
" fonts.  The font shape is 'n' for upright, 'it' for italics, 'sl' for",
" slanted, or 'sc' for small caps, in general.  Some fonts may provide",
" different font series or shapes.",
"",
" Examples:",
"",
" Use Times-Roman boldface (with the same shape as in the surrounding text):",
"       set terminal cairolatex font 'ptm,bx'",
" Use Helvetica, boldface, italics:",
"       set terminal cairolatex font 'phv,bx,it'",
" Continue to use the surrounding font in slanted shape:",
"       set terminal cairolatex font ',,sl'",
" Use small capitals:",
"       set terminal cairolatex font ',,sc'",
"",
" By this method, only text fonts are changed. If you also want to change",
" the math fonts you have to use the \"gnuplot.cfg\" file or the `header`",
" option, described below.",
"",
" In `standalone` mode, the font size is taken from the given font size in the",
" `set terminal` command. To be able to use a specified font size, a file",
" \"size<size>.clo\" has to reside in the LaTeX search path.  By default,",
" 10pt, 11pt, and 12pt are supported.  If the package \"extsizes\" is",
" installed, 8pt, 9pt, 14pt, 17pt, and 20pt are added.",
"",
" The `header` option takes a string as argument.  This string is written",
" into the generated LaTeX file.  If using the `standalone` mode, it is",
" written into the preamble, directly before the \\begin{document} command.",
" In the `input` mode, it is placed directly after the \\begingroup command",
" to ensure that all settings are local to the plot.",
"",
" Examples:",
"",
" Use T1 fontencoding, change the text and math font to Times-Roman as well",
" as the sans-serif font to Helvetica:",
"     set terminal cairolatex standalone header \\",
"     \"\\\\usepackage[T1]{fontenc}\\n\\\\usepackage{mathptmx}\\n\\\\usepackage{helvet}\"",
" Use a boldface font in the plot, not influencing the text outside the plot:",
"     set terminal cairolatex input header \"\\\\bfseries\"",
"",
" If the file \"gnuplot.cfg\" is found by LaTeX it is input in the preamble",
" the LaTeX document, when using `standalone` mode.  It can be used for",
" further settings, e.g., changing the document font to Times-Roman,",
" Helvetica, and Courier, including math fonts (handled by \"mathptmx.sty\"):",
"       \\usepackage{mathptmx}",
"       \\usepackage[scaled=0.92]{helvet}",
"       \\usepackage{courier}",
" The file \"gnuplot.cfg\" is loaded before the header information given",
" by the `header` command.  Thus, you can use `header` to overwrite some of",
" settings performed using \"gnuplot.cfg\"",
""
#else /* JAPANESE_DOC */
"1 cairolatex",
"?set terminal cairolatex",
"?terminal cairolatex",
"?set term cairolatex",
"?term cairolatex",
"?cairolatex",
" 出力形式 `cairolatex` は、cairo と pango の補助ライブラリを使って、EPS",
" (Encapsulated PostScript), PDF, PNG 出力を生成しますが、文字列出力には",
" 出力形式 `epslatex` と同じやり方で LaTeX を使用します。",
"",
" 書式:",
"       set terminal cairolatex",
"                      {eps | pdf | png}",
"                      {standalone | input}",
"                      {blacktext | colortext | colourtext}",
"                      {header <header> | noheader}",
"                      {mono|color}",
"                      {{no}transparent} {{no}crop} {background <rgbcolor>}",
"                      {font <font>} {fontscale <scale>}",
"                      {linewidth <lw>} {rounded|butt|square} {dashlength <dl>}",
"                      {size <XX>{unit},<YY>{unit}}",
"                      {resolution <dpi>}",
"",
" cairolatex 出力形式は、epscairo 出力形式 (`termnal epscairo`) や",
" pdfcairo 出力形式 (`terminal pdfcairo`) と同等のグラフを出力しますが、",
" テキスト文字列はグラフの中に入れるのではなく、LaTeX に渡します。以下で",
" 触れないオプションについては、以下参照: `pdfcairo`。",
"",
" `eps`, `pdf`, `png` は、グラフ出力の形式を選択します。latex/dvips 用に",
" は `eps` を、pdflatex 用には `pdf` を使用してください。もしあなたのグラ",
" フが大量の点数を持つ場合は、ファイルサイズを減らすために `png` を使用し",
" てください。オプション `png` を使用した場合、追加オプション `resolution`",
" も受け付け、結果の PNG のピクセル密度を制御できます。`resolution` の引",
" 数は整数で、DPI の暗黙の単位で与えます。",
"",
" `blacktext` は、カラーモードでもすべての文字列を黒で書くようにします。",
"",
" `cairolatex` 出力ドライバは、文字列の位置の特別な制御方法を提供します:",
" (a) '{' で始まるすべての文字列は、'}' もその文字列の最後に必要ですが、",
" その文字列全体を LaTeX で横にも縦にもセンタリングします。",
" (b) '[' で始まる文字列は、その次に位置指定文字 (t,b,l,r,c のうち 2 つま",
" で)、']{'、対象文字列、と続き最後に '}' で閉じますが、この文字列は、",
" LaTeX が LR-box として処理できるものならなんでも構いません。位置合わせ",
" を完全に行うには、\\rule{}{} も有用でしょう。以下も参照: `pslatex`。",
" 複数行に渡るラベルを生成する場合、\\shortstack を使用してください。例:",
"    set ylabel '[r]{\\shortstack{first line \\\\ second line}}'",
"",
" コマンド `set label` のオプション `back` は、他の出力形式とはやや異なる",
" 方法で処理します。`back` を使用したラベルは、他のすべての描画要素の後ろ",
" に印字し、`front` を使用したラベルは、他のすべての上に印字します。",
"",
" このドライバは 2 つの異なるファイルを作成します。一つは図の eps か pdf",
" か png 部分で、もう一つは LaTeX 部分です。その LaTeX ファイルの名前は、",
" コマンド `set output` のものを使用し、eps/pdf/png ファイルの名前は、そ",
" の拡張子 (通常は '.tex') を '.eps'/'.pdf'/'.png' に置き換えたものを使用",
" します。出力ファイルを指定しなかった場合は、LaTeX 出力はしません。",
" `multiplot` モード以外では、次の plot を行う前に出力ファイルを閉じるの",
" を忘れないでください。",
"",
" この画像をあなたの LaTeX 文書に取り込むには、'\\input{filename}' を使用",
" してください。'.eps'/'.pdf'/'.png' ファイルは、\\includegraphics{...}",
" で取り込むので、LaTeX 文書のプリアンブルに \\usepackage{graphicx} を入",
" れる必要があります。色付きの文字 (オプション `colourtext`) を使用する場",
" 合は、プリアンブルに \\usepackage{color} も入れる必要があります。",
"",
" フォント選択に関する挙動は、ヘッダーモードに依存します。いずれの場合で",
" も、与えられたフォントサイズは適切な大きさを計算するのに使われます。",
" `standalone` モードを使っていない場合は、それを読みこんだところで実際に",
" LaTeX が使用しているフォントとフォントサイズが使われるので、フォントを",
" 変更するには LaTeX のコマンドを使用してください。LaTeX 文書の方で 12pt",
" のフォントサイズを使っていれば、オプションとして '\", 12\"' を指定して",
" ください。フォント名は無視されます。'standalone' の場合は、与えられたフ",
" ォントとフォントサイズを使用します。詳細は以下を参照してください。",
"",
" 文字列を色付けして印字するかどうかは、TeX のブール変数 \\ifGPcolor と",
" \\ifGPblacktext で制御できます。\\ifGPcolor が true で \\ifGPblacktext",
" が false のときのみ文字列が色付けされます。これらの変更は、生成された",
" TeX ファイル中で行うか、または大域的にあなたの TeX ファイルのプリアンブ",
" ルで、例えば以下のようにして設定できます:",
"    \\newif\\ifGPblacktext",
"    \\GPblacktexttrue",
" 局所的な設定は、大域的な値がない場合にのみ効力を持ちます。",
"",
" 出力形式 cairolatex を使う場合は、コマンド `set output` で TeX ファイル",
" 設定する際にファイルの拡張子 (通常は \",tex\") をつけてください。",
" グラフのファイル名は、その拡張子を置きかえることで作られます。",
"",
" `standalone` モードを使う場合、LaTeX ファイルに完全な LaTeX のヘッダが",
" 追加され、グラフファイルのファイル名には \"-inc\" が追加されます。",
" `standalone` モードは、dvips, pdfTeX, VTeX を使う場合に正しいサイズの出",
" 力を作る TeX ファイルを生成します。デフォルトでは `input` で、これは",
" LaTeX 文書から \\input コマンドで取り込まれる必要があるファイルを生成し",
" ます。",
"",
" \"\" や \"default\" 以外のフォントを与えた場合、それは LaTeX のフォント",
" 名であるとみなされます。それは ',' 区切りで最大 3 つの部分からなる、",
" 'fontname,fontseries,fontshape' の形式です。デフォルトの fontshape や",
" fontseries を使いたい場合は、それらは省略できます。よって、フォント名の",
" 実際の書式は、'{fontname}{,fontseries}{,fontshape}' となります。(訳注:",
" より gnuplot 風に言えば '{<fontname>}{,{<fontseries>}{,<fontshape>}}')",
" 名前の各部分の指定法は、LaTeX のフォント系の慣習に従う必要があります。",
" フォント名 (fontname) は 3 から 4 文字の長さで、以下のようになっていま",
" す: 最初の文字はフォントの供給者、次の 2 つの文字はフォント名用、オプシ",
" ョンとして特別なフォント用に 1 文字追加できます。例えば、'j' は古いスタ",
" イルの数字用のフォント、'x' はエキスパートフォント用です。多くのフォン",
" ト名が以下に記述されています:",
"^ <a href=\"http://www.tug.org/fontname/fontname.pdf\">",
"           http://www.tug.org/fontname/fontname.pdf",
"^ </a>",
" 例えば、'cmr' は Computer Modern Roman を、'ptm' は Times-Roman, 'phv'",
" は Helvetica を意味しています。font series は、グリフの太さを表し、多く",
" の場合は、'm' が標準 (\"medium\")、'bx' か 'b' が太字 (bold) のフォント",
" を意味します。font shape は、一般的には 'n' が立体 (upright)、'it' がイ",
" タリック (italic)、'sl' が斜体 (slanted)、'sc' がスモールキャピタル",
" (small caps) を意味します。異なる series や shapes を提供するフォントも",
" あります。",
"",
" 例:",
"",
" Times-Roman のボールド体 (周りの文字列と同じ形状) を使うには:",
"       set terminal cairolatex font 'ptm,bx'",
" Helvetica, ボールド体、イタリックを使うには:",
"       set terminal cairolatex font 'phv,bx,it'",
" 周りと同じで斜体の形状のフォントを使うには:",
"       set terminal cairolatex font ',,sl'",
" スモールキャピタルを使うには",
"       set terminal cairolatex font ',,sc'",
"",
" この方法では、テキストフォントだけが変更されます。数式フォントも変更し",
" たい場合は、ファイル \"gnuplot.cfg\" か、または以下で説明するオプション",
" `header` を使う必要があります。",
"",
" `standalone` モードでは、フォントサイズはコマンド `set terminal` で指定",
" したフォントサイズを取ります。指定したフォントサイズを使うためにはファ",
" イル \"size<size>.clo\" が LaTeX の検索パスにある必要があります。デフォ",
" ルトでは 10pt, 11pt, 12pt をサポートしています。パッケージ \"extsizes\"",
" がインストールされていれば、8pt, 9pt, 14pt, 17pt, 20pt も追加されます。",
"",
" オプション `header` は一つの文字列を引数として取り、その文字列を生成す",
" る LaTeX ファイルに書き出します。`standalone` モードでは、それはプリア",
" ンブルの \\begin{document} の直前に書きますが、`input` モードでは、それ",
" はグラフに関するすべての設定を局所化するための \\begingroup コマンドの",
" の直後に書きます。",
"",
" 例:",
"",
" T1 フォントエンコーディングを使い、テキストフォントと数式フォントを",
" Times-Roman に、sans-serif フォントを Helvetica に変えるには:",
"     set terminal cairolatex standalone header \\",
"     \"\\\\usepackage[T1]{fontenc}\\n\\\\usepackage{mathptmx}\\n\\\\usepackage{helvet}\"",
" グラフ内では太字 (bold) を使うが、グラフ外のテキストはそうしない:",
"     set terminal cairolatex input header \"\\\\bfseries\"",
"",
" LaTeX がファイル \"gnuplot.cfg\" を見つけると、`standalone` モードでは",
" それをプリアンブルに取り込みます。これは、さらに設定を追加するのに使え",
" ます。例: 文書のフォントを、数式フォント (\"mathptmx.sty\" が処理) も合",
" わせて Times-Roman, Helvetica, Courier にするには:",
"       \\usepackage{mathptmx}",
"       \\usepackage[scaled=0.92]{helvet}",
"       \\usepackage{courier}",
" ファイル \"gnuplot.cfg\" は、コマンド `header` で設定するヘッダー情報よ",
" りも前に読み込みますので、\"gnuplot.cfg\" で設定するものを `header` を",
" 使って上書きすることができます。",
""
#endif /* JAPANESE_DOC */
END_HELP(cairolatex)
START_HELP(canvas)
#ifndef JAPANESE_DOC
"1 canvas",
"?commands set terminal canvas",
"?set terminal canvas",
"?set term canvas",
"?terminal canvas",
"?term canvas",
"=canvas terminal",
"",
" The `canvas` terminal creates a set of javascript commands that draw onto the",
" HTML5 canvas element.",
" Syntax:",
"       set terminal canvas {size <xsize>, <ysize>} {background <rgb_color>}",
"                           {font {<fontname>}{,<fontsize>}} | {fsize <fontsize>}",
"                           {{no}enhanced} {linewidth <lw>}",
"                           {rounded | butt | square}",
"                           {dashlength <dl>}",
"                           {standalone {mousing} | name '<funcname>'}",
"                           {jsdir 'URL/for/javascripts'}",
"                           {title '<some string>'}",
"",
" where <xsize> and <ysize> set the size of the plot area in pixels.",
" The default size in standalone mode is 600 by 400 pixels.",
" The default font size is 10.",
"",
" NB: Only one font is available, the ascii portion of Hershey simplex Roman",
" provided in the file canvastext.js. You can replace this with the file",
" canvasmath.js, which contains also UTF-8 encoded Hershey simplex Greek and",
" math symbols. For consistency with other terminals, it is also possible to",
" use `font \"name,size\"`. Currently the font `name` is ignored, but browser",
" support for named fonts is likely to arrive eventually.",
"",
" The default `standalone` mode creates an html page containing javascript",
" code that renders the plot using the HTML 5 canvas element.  The html page",
" links to two required javascript files 'canvastext.js' and 'gnuplot_common.js'.",
" An additional file 'gnuplot_dashedlines.js' is needed to support dashed lines.",
" By default these point to local files, on unix-like systems usually in",
" directory /usr/local/share/gnuplot/<version>/js.  See installation notes for",
" other platforms. You can change this by using the `jsdir` option to specify",
" either a different local directory or a general URL.  The latter is usually",
" appropriate if the plot is exported for viewing on remote client machines.",
"",
" All plots produced by the canvas terminal are mouseable.  The additional",
" keyword `mousing` causes the `standalone` mode to add a mouse-tracking box",
" underneath the plot. It also adds a link to a javascript file",
" 'gnuplot_mouse.js' and to a stylesheet for the mouse box 'gnuplot_mouse.css'",
" in the same local or URL directory as 'canvastext.js'.",
"",
" The `name` option creates a file containing only javascript. Both the",
" javascript function it contains and the id of the canvas element that it",
" draws onto are taken from the following string parameter.  The commands",
"       set term canvas name 'fishplot'",
"       set output 'fishplot.js'",
" will create a file containing a javascript function fishplot() that will",
" draw onto a canvas with id=fishplot.  An html page that invokes this",
" javascript function must also load the canvastext.js function as described",
" above.  A minimal html file to wrap the fishplot created above might be:",
"",
"       <html>",
"       <head>",
"           <script src=\"canvastext.js\"></script>",
"           <script src=\"gnuplot_common.js\"></script>",
"       </head>",
"       <body onload=\"fishplot();\">",
"           <script src=\"fishplot.js\"></script>",
"           <canvas id=\"fishplot\" width=600 height=400>",
"               <div id=\"err_msg\">No support for HTML 5 canvas element</div>",
"           </canvas>",
"       </body>",
"       </html>",
"",
" The individual plots drawn on this canvas will have names fishplot_plot_1,",
" fishplot_plot_2, and so on. These can be referenced by external javascript",
" routines, for example gnuplot.toggle_visibility(\"fishplot_plot_2\").",
""
#else /* JAPANESE_DOC */
"1 canvas",
"?commands set terminal canvas",
"?set terminal canvas",
"?set term canvas",
"?terminal canvas",
"?term canvas",
"=canvas terminal",
"",
" 出力形式 `canvas` は、HTML5 の canvas 要素上に描画する javascript コマ",
" ンドの集合を生成します。",
" 書式:",
"       set terminal canvas {size <xsize>, <ysize>} {background <rgb_color>}",
"                           {font {<fontname>}{,<fontsize>}} | {fsize <fontsize>}","                           {{no}enhanced} {linewidth <lw>}",
"                           {rounded | butt | square}",
"                           {dashlength <dl>}",
"                           {standalone {mousing} | name '<funcname>'}",
"                           {jsdir 'URL/for/javascripts'}",
"                           {title '<some string>'}",
"",
" <xsize> と <ysize> は描画領域のピクセル単位でのサイズを設定します。",
" standalone モードでのデフォルトのサイズは、600x400 ピクセルです。",
" デフォルトのフォントサイズは 10 です。",
"",
" 注: ファイル canvastext.js で提供している Hershey simplex Roman フォン",
" トのアスキー部分のフォント一つだけが利用できます。これは、ファイル",
" canvasmath.js で置き換えることもでき、そこには UTF-8 エンコードされた",
" Hershey simplex Greek と math symbols も含まれています。他の出力形式に",
" 合わせて、`font \"name,size\"` の形式も使えるようになっています。今の",
" ところ `name` のフォント名部分は無視されますが、そのうちにブラウザが名",
" 前付きフォントをサポートしだすでしょう。",
"",
" デフォルトの `standalone` モードは、HTML 5 の canvas 要素を使用してグ",
" ラフを描画するような javascript コードを含む HTML ページを生成します。",
" その HTML ページは、2 つの必要な javascript ファイル 'canvastext.js'、",
" 'gnuplot_common.js' にリンクします。点線をサポートするためにはさらに追",
" 加ファイル 'gnuplot_dashedlines.js' が必要です。デフォルトではそれらは",
" ローカルファイルへのリンクで、Unix 互換のシステムでは通常はそれらディ",
" レクトリ /usr/local/share/gnuplot/<version>/js にあります。他の環境に",
" ついては、インストールに関する注意を参照してください。この設定は、オプ",
" ション `jsdir` に別のローカルディレクトリ、あるいは一般的な URL を指定",
" することで変更できます。グラフをリモートクライアントのマシンで見れるよ",
" うにする場合は、通常は後者の設定が適切でしょう。",
"",
" canvas 出力形式で生成される描画はすべてマウス操作可能です。キーワード",
" `mousing` を追加すると、`standalone` モードのグラフの下にマウストラッ",
" キングボックスをつけます。これは、`canvastext.js` が置かれているのと同",
" じローカルディレクトリ、または URL 内の、'gnuplot_mouse.js' という",
" javascript ファイルへのリンクと 'gnuplot_mouse.css' というマウスボック",
" スに関するスタイルシートも追加します。",
"",
" オプション `name` は、javascript のみを含むファイルを一つ生成します。",
" それが含む javascript 関数と、それが描画する canvas 要素の id の両方は、",
" 以下の文字列パラメータから取られます。例えば以下のコマンド",
"       set term canvas name 'fishplot'",
"       set output 'fishplot.js'",
" は、javascript 関数 fishplot() を含むファイルを生成し、その関数はグラ",
" フを id=fishplot の canvas 上に描画します。この javascript 関数を呼び",
" 出す HTML ページは、上で説明した canvastext.js も読み込まなければいけ",
" ません。上のように生成した、この fishplot を取りこむ最小の HTML ファイ",
" ルは以下のようになります:",
"",
"       <html>",
"       <head>",
"           <script src=\"canvastext.js\"></script>",
"           <script src=\"gnuplot_common.js\"></script>",
"       </head>",
"       <body onload=\"fishplot();\">",
"           <script src=\"fishplot.js\"></script>",
"           <canvas id=\"fishplot\" width=600 height=400>",
"               <div id=\"err_msg\">No support for HTML 5 canvas element</div>",
"           </canvas>",
"       </body>",
"       </html>",
"",
" このキャンバス上に描かれるそれぞれのグラフの名前は、fishplot_plot_1,",
" fishplot_plot_2 等となります。外部の javascript ルーチンでそれらを参照",
" することもできます。例: gnuplot.toggle_visibility(\"fishplot_plot_2\")",
""
#endif /* JAPANESE_DOC */
END_HELP(canvas)
START_HELP(cgm)
#ifndef JAPANESE_DOC
"1 cgm",
"?commands set terminal cgm",
"?set terminal cgm",
"?set term cgm",
"?terminal cgm",
"?term cgm",
"?cgm",
" The `cgm` terminal generates a Computer Graphics Metafile, Version 1. ",
" This file format is a subset of the ANSI X3.122-1986 standard entitled",
" \"Computer Graphics - Metafile for the Storage and Transfer of Picture",
" Description Information\".",
"",
" Syntax:",
"       set terminal cgm {color | monochrome} {solid | dashed} {{no}rotate}",
"                        {<mode>} {width <plot_width>} {linewidth <line_width>}",
"                        {font \"<fontname>,<fontsize>\"}",
"                        {background <rgb_color>}",
"   [deprecated]         {<color0> <color1> <color2> ...}",
"",
" `solid` draws all curves with solid lines, overriding any dashed patterns;",
" <mode> is `landscape`, `portrait`, or `default`;",
" <plot_width> is the assumed width of the plot in points; ",
" <line_width> is the line width in points (default 1); ",
" <fontname> is the name of a font (see list of fonts below)",
" <fontsize> is the size of the font in points (default 12).",
"",
" The first six options can be in any order.  Selecting `default` sets all",
" options to their default values.",
"",
" The mechanism of setting line colors in the `set term` command is",
" deprecated.  Instead you should set the background using a separate",
" keyword and set the line colors using `set linetype`.",
" The deprecated mechanism accepted colors of the form 'xrrggbb', where x is",
" the literal character 'x' and 'rrggbb' are the red, green and blue components",
" in hex. The first color was used for the background, subsequent colors are",
" assigned to successive line types.",
"",
" Examples:",
"       set terminal cgm landscape color rotate dashed width 432 \\",
"                      linewidth 1  'Helvetica Bold' 12       # defaults",
"       set terminal cgm linewidth 2  14  # wider lines & larger font",
"       set terminal cgm portrait \"Times Italic\" 12",
"       set terminal cgm color solid      # no pesky dashes!",

"2 cgm font",
"?commands set terminal cgm font",
"?set terminal cgm font",
"?set term cgm font",
"?cgm font",
" The first part of a Computer Graphics Metafile, the metafile description,",
" includes a font table.  In the picture body, a font is designated by an",
" index into this table.  By default, this terminal generates a table with",
" the following 35 fonts, plus six more with `italic` replaced by",
" `oblique`, or vice-versa (since at least the Microsoft Office and Corel",
" Draw CGM import filters treat `italic` and `oblique` as equivalent):",
"",
"@start table - first is interactive cleartext form",
"       Helvetica",
"       Helvetica Bold",
"       Helvetica Oblique",
"       Helvetica Bold Oblique",
"       Times Roman",
"       Times Bold",
"       Times Italic",
"       Times Bold Italic",
"       Courier",
"       Courier Bold",
"       Courier Oblique",
"       Courier Bold Oblique",
"       Symbol",
"       Hershey/Cartographic_Roman",
"       Hershey/Cartographic_Greek",
"       Hershey/Simplex_Roman",
"       Hershey/Simplex_Greek",
"       Hershey/Simplex_Script",
"       Hershey/Complex_Roman",
"       Hershey/Complex_Greek",
"       Hershey/Complex_Script",
"       Hershey/Complex_Italic",
"       Hershey/Complex_Cyrillic",
"       Hershey/Duplex_Roman",
"       Hershey/Triplex_Roman",
"       Hershey/Triplex_Italic",
"       Hershey/Gothic_German",
"       Hershey/Gothic_English",
"       Hershey/Gothic_Italian",
"       Hershey/Symbol_Set_1",
"       Hershey/Symbol_Set_2",
"       Hershey/Symbol_Math",
"       ZapfDingbats",
"       Script",
"       15",
"#\\begin{tabular}{|lll|} \\hline",
"#\\multicolumn{3}{|c|}{CGM fonts}\\\\\\hline",
"#&Helvetica&Hershey/Cartographic\\_Roman\\\\",
"#&Helvetica Bold&Hershey/Cartographic\\_Greek\\\\",
"#&Helvetica Oblique&Hershey/Simplex\\_Roman\\\\",
"#&Helvetica Bold Oblique&Hershey/Simplex\\_Greek\\\\",
"#&Times Roman&Hershey/Simplex\\_Script\\\\",
"#&Times Bold&Hershey/Complex\\_Roman\\\\",
"#&Times Italic&Hershey/Complex\\_Greek\\\\",
"#&Times Bold Italic&Hershey/Complex\\_Italic\\\\",
"#&Courier&Hershey/Complex\\_Cyrillic\\\\",
"#&Courier Bold&Hershey/Duplex\\_Roman\\\\",
"#&Courier Oblique&Hershey/Triplex\\_Roman\\\\",
"#&Courier Bold Oblique&Hershey/Triplex\\_Italic\\\\",
"#&Symbol&Hershey/Gothic\\_German\\\\",
"#&ZapfDingbats&Hershey/Gothic\\_English\\\\",
"#&Script&Hershey/Gothic\\_Italian\\\\",
"#&15&Hershey/Symbol\\_Set\\_1\\\\",
"#&&Hershey/Symbol\\_Set\\_2\\\\",
"#&&Hershey/Symbol\\_Math\\\\",
"%c c l .",
"%@@CGM fonts",
"%_",
"%@@Helvetica",
"%@@Helvetica Bold",
"%@@Helvetica Oblique",
"%@@Helvetica Bold Oblique",
"%@@Times Roman",
"%@@Times Bold",
"%@@Times Italic",
"%@@Times Bold Italic",
"%@@Courier",
"%@@Courier Bold",
"%@@Courier Oblique",
"%@@Courier Bold Oblique",
"%@@Symbol",
"%@@Hershey/Cartographic_Roman",
"%@@Hershey/Cartographic_Greek",
"%@@Hershey/Simplex_Roman",
"%@@Hershey/Simplex_Greek",
"%@@Hershey/Simplex_Script",
"%@@Hershey/Complex_Roman",
"%@@Hershey/Complex_Greek",
"%@@Hershey/Complex_Script",
"%@@Hershey/Complex_Italic",
"%@@Hershey/Complex_Cyrillic",
"%@@Hershey/Duplex_Roman",
"%@@Hershey/Triplex_Roman",
"%@@Hershey/Triplex_Italic",
"%@@Hershey/Gothic_German",
"%@@Hershey/Gothic_English",
"%@@Hershey/Gothic_Italian",
"%@@Hershey/Symbol_Set_1",
"%@@Hershey/Symbol_Set_2",
"%@@Hershey/Symbol_Math",
"%@@ZapfDingbats",
"%@@Script",
"%@@15",
"@end table",
"^<table align=\"center\" border=\"1\" rules=\"groups\" frame=\"hsides\" cellpadding=\"3\">",
"^<colgroup>",
"^  <col align=\"left\">",
"^  <col align=\"left\">",
"^</colgroup>",
"^<thead>",
"^<tr><th colspan=2 align=\"center\">CGM fonts</th></tr>",
"^</thead>",
"^<tbody>",
"^<tr><td>Helvetica</td><td>Hershey/Cartographic_Roman</td></tr>",
"^<tr><td>Helvetica Bold</td><td>Hershey/Cartographic_Greek</td></tr>",
"^<tr><td>Helvetica Oblique</td><td>Hershey/Simplex_Roman</td></tr>",
"^<tr><td>Helvetica Bold Oblique</td><td>Hershey/Simplex_Greek</td></tr>",
"^<tr><td>Times Roman</td><td>Hershey/Simplex_Script</td></tr>",
"^<tr><td>Times Bold</td><td>Hershey/Complex_Roman</td></tr>",
"^<tr><td>Times Italic</td><td>Hershey/Complex_Greek</td></tr>",
"^<tr><td>Times Bold Italic</td><td>Hershey/Complex_Italic</td></tr>",
"^<tr><td>Courier</td><td>Hershey/Complex_Cyrillic</td></tr>",
"^<tr><td>Courier Bold</td><td>Hershey/Duplex_Roman</td></tr>",
"^<tr><td>Courier Oblique</td><td>Hershey/Triplex_Roman</td></tr>",
"^<tr><td>Courier Bold Oblique</td><td>Hershey/Triplex_Italic</td></tr>",
"^<tr><td>Symbol</td><td>Hershey/Gothic_German</td></tr>",
"^<tr><td>ZapfDingbats</td><td>Hershey/Gothic_English</td></tr>",
"^<tr><td>Script</td><td>Hershey/Gothic_Italian</td></tr>",
"^<tr><td>15</td><td>Hershey/Symbol_Set_1</td></tr>",
"^<tr><td></td><td>Hershey/Symbol_Set_2</td></tr>",
"^<tr><td></td><td>Hershey/Symbol_Math</td></tr>",
"^</tbody>",
"^</table>",
"",
" The first thirteen of these fonts are required for WebCGM.  The",
" Microsoft Office CGM import filter implements the 13 standard fonts",
" listed above, and also 'ZapfDingbats' and 'Script'.  However, the",
" script font may only be accessed under the name '15'.  For more on",
" Microsoft import filter font substitutions, check its help file which",
" you may find here:",
"   C:\\Program Files\\Microsoft Office\\Office\\Cgmimp32.hlp",
" and/or its configuration file, which you may find here:",
"   C:\\Program Files\\Common Files\\Microsoft Shared\\Grphflt\\Cgmimp32.cfg",
"",
" In the `set term` command, you may specify a font name which does not",
" appear in the default font table.  In that case, a new font table is",
" constructed with the specified font as its first entry. You must ensure",
" that the spelling, capitalization, and spacing of the name are",
" appropriate for the application that will read the CGM file.  (Gnuplot",
" and any MIL-D-28003A compliant application ignore case in font names.)",
" If you need to add several new fonts, use several `set term` commands.",
"",
" Example:",
"       set terminal cgm 'Old English'",
"       set terminal cgm 'Tengwar'",
"       set terminal cgm 'Arabic'",
"       set output 'myfile.cgm'",
"       plot ...",
"       set output",
"",
" You cannot introduce a new font in a `set label` command.",

"2 cgm fontsize",
"?commands set terminal cgm fontsize",
"?set terminal cgm fontsize",
"?set term cgm fontsize",
"?cgm fontsize",
" Fonts are scaled assuming the page is 6 inches wide.  If the `size`",
" command is used to change the aspect ratio of the page or the CGM file",
" is converted to a different width, the resulting font sizes will be",
" scaled up or down accordingly.  To change the assumed width, use the",
" `width` option.",

"2 cgm linewidth",
"?commands set terminal cgm linewidth",
"?set terminal cgm linewidth",
"?set term cgm linewidth",
"?cgm linewidth",
" The `linewidth` option sets the width of lines in pt.  The default width",
" is 1 pt.  Scaling is affected by the actual width of the page, as",
" discussed under the `fontsize` and `width` options.",

"2 cgm rotate",
"?commands set terminal cgm rotate",
"?set terminal cgm rotate",
"?set term cgm rotate",
"?cgm rotate",
" The `norotate` option may be used to disable text rotation.  For",
" example, the CGM input filter for Word for Windows 6.0c can accept",
" rotated text, but the DRAW editor within Word cannot.  If you edit a",
" graph (for example, to label a curve), all rotated text is restored to",
" horizontal.  The Y axis label will then extend beyond the clip boundary.",
" With `norotate`, the Y axis label starts in a less attractive location,",
" but the page can be edited without damage.  The `rotate` option confirms",
" the default behavior.",

"2 cgm solid",
"?set terminal cgm solid",
"?set term cgm solid",
"?cgm solid",
" The `solid` option may be used to disable dashed line styles in the",
" plots.  This is useful when color is enabled and the dashing of the",
" lines detracts from the appearance of the plot. The `dashed` option",
" confirms the default behavior, which gives a different dash pattern to",
" each line type.",

"2 cgm size",
"?commands set terminal cgm size",
"?set terminal cgm size",
"?set term cgm size",
"?cgm size",
" Default size of a CGM plot is 32599 units wide and 23457 units high for",
" landscape, or 23457 units wide by 32599 units high for portrait.",

"2 cgm width",
"?commands set terminal cgm width",
"?set terminal cgm width",
"?set term cgm width",
"?cgm width",
" All distances in the CGM file are in abstract units.  The application",
" that reads the file determines the size of the final plot.  By default,",
" the width of the final plot is assumed to be 6 inches (15.24 cm).  This",
" distance is used to calculate the correct font size, and may be changed",
" with the `width` option.  The keyword should be followed by the width in",
" points.  (Here, a point is 1/72 inch, as in PostScript.  This unit is",
" known as a \"big point\" in TeX.)  Gnuplot `expressions` can be used to",
" convert from other units.",
"",
" Example:",
"       set terminal cgm width 432            # default",
"       set terminal cgm width 6*72           # same as above",
"       set terminal cgm width 10/2.54*72     # 10 cm wide",

"2 cgm nofontlist",
"?commands set terminal cgm nofontlist",
"?set terminal cgm nofontlist",
"?set term cgm nofontlist",
"?cgm nofontlist",
"?set terminal cgm winword6",
"?set term cgm winword6",
"?cgm winword6",
" The default font table includes the fonts recommended for WebCGM, which",
" are compatible with the Computer Graphics Metafile input filter for",
" Microsoft Office and Corel Draw.  Another application might use",
" different fonts and/or different font names, which may not be",
" documented.  The `nofontlist` (synonym `winword6`) option deletes the font",
" table from the CGM file.  In this case, the reading application should",
" use a default table.  Gnuplot will still use its own default font table",
" to select font indices.  Thus, 'Helvetica' will give you an index of 1,",
" which should get you the first entry in your application's default font",
" table. 'Helvetica Bold' will give you its second entry, etc.",
""
#else /* JAPANESE_DOC */
"1 cgm",
"?commands set terminal cgm",
"?set terminal cgm",
"?set term cgm",
"?terminal cgm",
"?term cgm",
"?cgm",
" `cgm` ドライバは CGM 出力 (Computer Graphics Metafile Version 1) を生",
" 成します。このファイルフォーマットは ANSI 規格書 X3.122-1986 \"Computer",
" Graphics - Metafile for the Storage and Transfer of Picture Description",
" Information\" で定義されているものの一部分です。",
"",
" 書式:",
"       set terminal cgm {color | monochrome} {solid | dashed} {{no}rotate}",
"                        {<mode>} {width <plot_width>} {linewidth <line_width>}",
"                        {font \"<fontname>,<fontsize>\"}",
"                        {background <rgb_color>}",
"   [deprecated]         {<color0> <color1> <color2> ...}",
"",
" `solid` は全ての曲線を実線で描き、どんな点線パターンも塗りつぶします;",
" <mode> は `landscape`, `portrait`, `default` のいずれか;",
" <plot_width> はポイント単位でのグラフの仮定されている幅;",
" <line_width> はポイント単位での線幅 (デフォルトは 1);",
" <fontname> はフォントの名前 (以下のフォント一覧参照); そして",
" <fontsize> はポイント単位でのフォントのサイズ (デフォルトは 12) です。",
"",
" 最初の 6 つのオプションはどの順番で指定しても構いません。`default` を",
" 選択すると、全てのオプションをそのデフォルトの値にします。",
"",
" 線の色を `set term` コマンドで設定する仕組みは、今は非推奨です。代わり",
" に、背景色は分離されたキーワード background で、線の色は `set linetype`",
" で設定すべきでしょう。この非推奨の仕組みでは色は 'xrrggbb' の形式で受け",
" つけますが、x は文字 'x' そのもの、'rrggbb' は 16 進数での赤、緑、青の",
" 成分です。最初の色を背景色として使い、その後に続く色指定を順次線の色と",
" として割り当てていました。",
"",
" 例:",
"       set terminal cgm landscape color rotate dashed width 432 \\",
"                      linewidth 1  'Helvetica Bold' 12       # デフォルト",
"       set terminal cgm linewidth 2  14  # やや広い線とやや大きいフォント",
"       set terminal cgm portrait \"Times Italic\" 12",
"       set terminal cgm color solid    # 面倒な点線など消えてしまえ !",

"2 CGM のフォント (font)",
"?commands set terminal cgm font",
"?set terminal cgm font",
"?set term cgm font",
"?cgm font",
" CGM (Computer Graphics Metafile) ファイルの最初の部分、メタファイルの",
" 記述部分には、フォントリスト (font table) が含まれています。画像の本体",
" 部では、フォントはこのリストにある番号で指定されます。デフォルトではこ",
" のドライバは以下の 35 個のフォントリストを生成し、さらにこのリストの",
" `Helvetica`, `Times`, `Courier` の各フォントの `italic` を `oblique`",
" で置き換えたもの、およびその逆による 6 つの追加のフォントが含まれます",
" (Microsoft Office と Corel Draw CGM の import フィルタは `italic` と",
" `oblique` を同じものとして扱うからです)。",
"",
"@start table - 最初は対話型テキスト形式",
"       Helvetica",
"       Helvetica Bold",
"       Helvetica Oblique",
"       Helvetica Bold Oblique",
"       Times Roman",
"       Times Bold",
"       Times Italic",
"       Times Bold Italic",
"       Courier",
"       Courier Bold",
"       Courier Oblique",
"       Courier Bold Oblique",
"       Symbol",
"       Hershey/Cartographic_Roman",
"       Hershey/Cartographic_Greek",
"       Hershey/Simplex_Roman",
"       Hershey/Simplex_Greek",
"       Hershey/Simplex_Script",
"       Hershey/Complex_Roman",
"       Hershey/Complex_Greek",
"       Hershey/Complex_Script",
"       Hershey/Complex_Italic",
"       Hershey/Complex_Cyrillic",
"       Hershey/Duplex_Roman",
"       Hershey/Triplex_Roman",
"       Hershey/Triplex_Italic",
"       Hershey/Gothic_German",
"       Hershey/Gothic_English",
"       Hershey/Gothic_Italian",
"       Hershey/Symbol_Set_1",
"       Hershey/Symbol_Set_2",
"       Hershey/Symbol_Math",
"       ZapfDingbats",
"       Script",
"       15",
"#\\begin{tabular}{|lll|} \\hline",
"#\\multicolumn{3}{|c|}{CGM fonts}\\\\\\hline",
"#&Helvetica&Hershey/Cartographic\\_Roman\\\\",
"#&Helvetica Bold&Hershey/Cartographic\\_Greek\\\\",
"#&Helvetica Oblique&Hershey/Simplex\\_Roman\\\\",
"#&Helvetica Bold Oblique&Hershey/Simplex\\_Greek\\\\",
"#&Times Roman&Hershey/Simplex\\_Script\\\\",
"#&Times Bold&Hershey/Complex\\_Roman\\\\",
"#&Times Italic&Hershey/Complex\\_Greek\\\\",
"#&Times Bold Italic&Hershey/Complex\\_Italic\\\\",
"#&Courier&Hershey/Complex\\_Cyrillic\\\\",
"#&Courier Bold&Hershey/Duplex\\_Roman\\\\",
"#&Courier Oblique&Hershey/Triplex\\_Roman\\\\",
"#&Courier Bold Oblique&Hershey/Triplex\\_Italic\\\\",
"#&Symbol&Hershey/Gothic\\_German\\\\",
"#&ZapfDingbats&Hershey/Gothic\\_English\\\\",
"#&Script&Hershey/Gothic\\_Italian\\\\",
"#&15&Hershey/Symbol\\_Set\\_1\\\\",
"#&&Hershey/Symbol\\_Set\\_2\\\\",
"#&&Hershey/Symbol\\_Math\\\\",
"%c c l .",
"%@@CGM fonts",
"%_",
"%@@Helvetica",
"%@@Helvetica Bold",
"%@@Helvetica Oblique",
"%@@Helvetica Bold Oblique",
"%@@Times Roman",
"%@@Times Bold",
"%@@Times Italic",
"%@@Times Bold Italic",
"%@@Courier",
"%@@Courier Bold",
"%@@Courier Oblique",
"%@@Courier Bold Oblique",
"%@@Symbol",
"%@@Hershey/Cartographic_Roman",
"%@@Hershey/Cartographic_Greek",
"%@@Hershey/Simplex_Roman",
"%@@Hershey/Simplex_Greek",
"%@@Hershey/Simplex_Script",
"%@@Hershey/Complex_Roman",
"%@@Hershey/Complex_Greek",
"%@@Hershey/Complex_Script",
"%@@Hershey/Complex_Italic",
"%@@Hershey/Complex_Cyrillic",
"%@@Hershey/Duplex_Roman",
"%@@Hershey/Triplex_Roman",
"%@@Hershey/Triplex_Italic",
"%@@Hershey/Gothic_German",
"%@@Hershey/Gothic_English",
"%@@Hershey/Gothic_Italian",
"%@@Hershey/Symbol_Set_1",
"%@@Hershey/Symbol_Set_2",
"%@@Hershey/Symbol_Math",
"%@@ZapfDingbats",
"%@@Script",
"%@@15",
"@end table",
"^<table align=\"center\" border=\"1\" rules=\"groups\" frame=\"hsides\" cellpadding=\"3\">",
"^<colgroup>",
"^  <col align=\"left\">",
"^  <col align=\"left\">",
"^</colgroup>",
"^<thead>",
"^<tr><th colspan=2 align=\"center\">CGM fonts</th></tr>",
"^</thead>",
"^<tbody>",
"^<tr><td>Helvetica</td><td>Hershey/Cartographic_Roman</td></tr>",
"^<tr><td>Helvetica Bold</td><td>Hershey/Cartographic_Greek</td></tr>",
"^<tr><td>Helvetica Oblique</td><td>Hershey/Simplex_Roman</td></tr>",
"^<tr><td>Helvetica Bold Oblique</td><td>Hershey/Simplex_Greek</td></tr>",
"^<tr><td>Times Roman</td><td>Hershey/Simplex_Script</td></tr>",
"^<tr><td>Times Bold</td><td>Hershey/Complex_Roman</td></tr>",
"^<tr><td>Times Italic</td><td>Hershey/Complex_Greek</td></tr>",
"^<tr><td>Times Bold Italic</td><td>Hershey/Complex_Italic</td></tr>",
"^<tr><td>Courier</td><td>Hershey/Complex_Cyrillic</td></tr>",
"^<tr><td>Courier Bold</td><td>Hershey/Duplex_Roman</td></tr>",
"^<tr><td>Courier Oblique</td><td>Hershey/Triplex_Roman</td></tr>",
"^<tr><td>Courier Bold Oblique</td><td>Hershey/Triplex_Italic</td></tr>",
"^<tr><td>Symbol</td><td>Hershey/Gothic_German</td></tr>",
"^<tr><td>ZapfDingbats</td><td>Hershey/Gothic_English</td></tr>",
"^<tr><td>Script</td><td>Hershey/Gothic_Italian</td></tr>",
"^<tr><td>15</td><td>Hershey/Symbol_Set_1</td></tr>",
"^<tr><td></td><td>Hershey/Symbol_Set_2</td></tr>",
"^<tr><td></td><td>Hershey/Symbol_Math</td></tr>",
"^</tbody>",
"^</table>",
"",
" これらのフォントの最初の 13 個は WebCGM で要求されているものです。",
" Microsoft Office の CGM import フィルタはその 13 個の標準フォントと",
" 'ZapfDingbats' と 'Script' をサポートしています。しかし、そのスクリプ",
" ト (script) フォントは '15' という名前でしかアクセスできません。",
" Microsoft の import フィルタの font の置き換えに関するより詳しい情報に",
" ついては、",
"   C:\\Program Files\\Microsoft Office\\Office\\Cgmimp32.hlp",
" のヘルプファイル、または",
"   C:\\Program Files\\Common Files\\Microsoft Shared\\Grphflt\\Cgmimp32.cfg",
" の設定ファイルなどをチェックしてください。",
"",
" `set term` コマンドでデフォルトのフォントリストにないフォント名を指定",
" することも可能です。その場合、その指定したフォントが最初に現われる新",
" しいフォントリストが作られます。そのフォント名に関して、スペル、単語",
" の先頭の大文字化やどこにスペースが入るかなどが、作られる CGM ファイル",
" を読むアプリケーションにとって適切なものであるかをちゃんと確認する必要",
" があります。(gnuplot と任意の MIL-D-28003A 準拠アプリケーションは、フ",
" ォント名の大文字小文字の違いは無視します。) 新しいフォントをいくつも追",
" 加したい場合は、`set term` コマンドを繰り返し使用してください。",
"",
" 例:",
"       set terminal cgm 'Old English'",
"       set terminal cgm 'Tengwar'",
"       set terminal cgm 'Arabic'",
"       set output 'myfile.cgm'",
"       plot ...",
"       set output",
"",
" `set label` コマンドでは新しいフォントを導入することはできません。",

"2 CGM のフォントサイズ (fontsize)",
"?commands set terminal cgm fontsize",
"?set terminal cgm fontsize",
"?set term cgm fontsize",
"?cgm fontsize",
" フォントは、ページが 6 インチの幅であると仮定して伸縮されます。`size`",
" コマンドでページの縦横比が変更されていたり、CGM ファイルが異なる幅に変",
" 換されている場合、結果としてフォントのサイズも拡大されたり縮小されたり",
" することになります。仮定されている幅を変更するには、`width` オプション",
" を使用してください。",

"2 cgm linewidth",
"?commands set terminal cgm linewidth",
"?set terminal cgm linewidth",
"?set term cgm linewidth",
"?cgm linewidth",
" `linewidth` オプションは線の幅をポイント単位 (pt) で設定します。デフォ",
" ルトの幅は 1 pt です。`fontsize` や `width` オプションのところで説明さ",
" れているように、ページの実際の幅によってその縮尺は影響を受けます。",

"2 cgm rotate",
"?commands set terminal cgm rotate",
"?set terminal cgm rotate",
"?set term cgm rotate",
"?cgm rotate",
" `norotate` オプションはテキストの回転をしないようにします。例えば Word",
" for Windows 6.0c 用の CGM 入力フィルタは回転された文字列を受け付けます",
" が、Word に付属する DRAW エディタはそれを受け付けることができず、グラ",
" フを編集すると (例えば曲線に見出しをつける)、全ての回転された文字列は",
" 水平方向になって保存されてしまい、Y 軸の見出しはクリップされる境界線を",
" 越えてしまうでしょう。`norotate` オプションを使えば、見栄えの良くない",
" 場所から Y 軸の見出しが始まってしまいますが、編集によってダメージを受",
" けることはなくなります。`rotate` オプションはデフォルトの挙動を保証し",
" ます。",

"2 cgm solid",
"?set terminal cgm solid",
"?set term cgm solid",
"?cgm solid",
" `solid` オプションは描画の点線の線描画スタイルを無効するのに使います。",
" これは、カラーが有効である場合、また点線にすることでグラフが見にくくな",
" る場合に有用でしょう。`dashed` オプションはデフォルトの挙動を保証し、",
" この場合個々の線種に異なる点線のパターンが与えられます。",

"2 CGM のサイズ (size)",
"?commands set terminal cgm size",
"?set terminal cgm size",
"?set term cgm size",
"?cgm size",
" CGM グラフのデフォルトのサイズは、横置き (landscape) では幅 32599, 縦",
" 23457、縦置き (portrait) では幅 23457, 縦 32599 です。",

"2 cgm width",
"?commands set terminal cgm width",
"?set terminal cgm width",
"?set term cgm width",
"?cgm width",
" CGM ファイルの全ての長さは抽象的な単位を持ち、そのファイルを読むアプリ",
" ケーションが最終的なグラフのサイズを決定します。デフォルトでは最終的な",
" グラフの幅は 6 インチ (15.24 cm) であると仮定されています。この幅は正",
" しいフォントサイズを計算するのに使われ、`width` オプションで変更できま",
" す。キーワード `width` の後に幅をポイント単位で指定します。(ここで、ポ",
" イントは PostScript と同様 1/72 インチを意味します。この単位は TeX では",
" \"big point\" と呼ばれています。) 他の単位から変換するには、gnuplot の数",
" 式が使えます。",
"",
" 例:",
"       set terminal cgm width 432            # デフォルト",
"       set terminal cgm width 6*72           # 上と同じ値",
"       set terminal cgm width 10/2.54*72     # 10 cm の幅",

"2 cgm nofontlist",
"?commands set terminal cgm nofontlist",
"?set terminal cgm nofontlist",
"?set term cgm nofontlist",
"?cgm nofontlist",
"?set terminal cgm winword6",
"?set term cgm winword6",
"?cgm winword6",
" デフォルトのフォントリスト (font table) は WebCGM で勧告されているフォ",
" ントを含んでいて、これは Microsoft Office と Corel Draw の CGM (Computer",
" Graphics Metafile) 入力フィルタに適合しています。他のアプリケーション",
" は異なるフォント、あるいは異なるフォント名を使用するかも知れませんが、",
" それはマニュアルには書かれていないかも知れません。オプション",
" `nofontlist` (`winword6` も同じ意味) を使用すると CGM ファイルからフォ",
" ントリストを削除します。この場合、読み込んだアプリケーションはデフォル",
" トのフォントリストを使用するでしょう。gnuplot はその場合でもフォント番",
" 号の選択のために自分のデフォルトのフォントリストを使用します。よって、",
" 'Helvetica' が 1 番になり、それがあなたの使用するアプリケーションのデ",
" フォルトフォントリストの最初のものになります。'Helvetica Bold' がその",
" フォントリストの 2 番目のフォントに対応し、他も同様となります。",
""
#endif /* JAPANESE_DOC */

END_HELP(cgm)
START_HELP(context)
#ifndef JAPANESE_DOC
"1 context",
"?commands set terminal context",
"?set terminal context",
"?terminal context",
"?set term context",
"?term context",
"?context",
" ConTeXt is a macro package for TeX, highly integrated with Metapost",
" (for drawing figures) and intended for creation of high-quality PDF documents.",
" The terminal outputs Metafun source, which can be edited manually,",
" but you should be able to configure most things from outside.",
"",
" For an average user of ConTeXt + gnuplot module it's recommended to refer to",
" `Using ConTeXt` rather than reading this page",
" or to read the manual of the gnuplot module for ConTeXt.",
"",
" The `context` terminal supports the following options:",
"",
" Syntax:",
"      set term context {default}",
"              {defaultsize | size <scale> | size <xsize>{in|cm}, <ysize>{in|cm}}",
"              {input | standalone}",
"              {timestamp | notimestamp}",
"              {noheader | header \"<header>\"}",
"              {color | colour | monochrome}",
"              {rounded | mitered | beveled} {round | butt | squared}",
"              {dashed | solid} {dashlength | dl <dl>}",
"              {linewidth | lw <lw>}",
"              {fontscale <fontscale>}",
"              {mppoints | texpoints}",
"              {inlineimages | externalimages}",
"              {defaultfont | font \"{<fontname>}{,<fontsize>}\"}",
"",
" In non-standalone (`input`) graphic only parameters `size` to select graphic",
" size, `fontscale` to scale all the labels for a factor <fontscale>",
" and font size, make sense, the rest is silently",
" ignored and should be configured in the .tex file which inputs the graphic.",
" It's highly recommended to set the proper fontsize if document font differs from",
" 12pt, so that gnuplot will know how much space to reserve for labels.",
"",
" `default` resets all the options to their default values.",
"",
" `defaultsize` sets the plot size to 5in,3in.",
" `size` <scale> sets the plot size to <scale> times <default value>.",
" If two arguments are given (separated with ','), the first one sets",
" the horizontal size and the second one the vertical size.",
" Size may be given without units (in which case it means relative to the default",
" value), with inches ('in') or centimeters ('cm').",
"",
" `input` (default) creates a graphic that can be included into another ConTeXt",
" document.",
" `standalone` adds some lines, so that the document might be compiled as-is.",
" You might also want to add `header` in that case.",
"",
" Use `header` for any additional settings/definitions/macros",
" that you might want to include in a standalone graphic. `noheader` is the default.",
"",
" `notimestamp` prevents printing creation time in comments",
" (if version control is used, one may prefer not to commit new version when only date changes).",
"",
" `color` to make color plots is the default, but `monochrome` doesn't do anything special yet.",
" If you have any good ideas how the behaviour should differ to suit the monochrome printers better,",
" your suggestions are welcome.",
"",
" `rounded` (default), `mitered` and `beveled` control the shape of line joins.",
" `round` (default), `butt` and `squared` control the shape of line caps.",
" See PostScript or PDF Reference Manual for explanation. For wild-behaving functions",
" and thick lines",
" it is better to use `rounded` and `round` to prevent sharp corners in line joins.",
" (Some general support for this should be added to Gnuplot, so that the same options",
" could be set for each line (style) separately).",
"",
" `dashed` (default) uses different dash patterns for different line types,",
" `solid` draws all plots with solid lines.",
"",
" `dashlength` or `dl` scales the length of the dashed-line segments by <dl>.",
" `linewidth` or `lw` scales all linewidths by <lw>.",
" (lw 1 stands for 0.5bp, which is the default line width when drawing with Metapost.)",
" `fontscale` scales text labels for factor <fontscale> relative to default document font.",
"",
" `mppoints` uses predefined point shapes, drawn in Metapost.",
" `texpoints` uses easily configurable set of symbols, defined with ConTeXt",
" in the following way:",
"      \\defineconversion[my own points][+,{\\ss x},\\mathematics{\\circ}]",
"      \\setupGNUPLOTterminal[context][points=tex,pointset=my own points]",
"",
" `inlineimages` writes binary images to a string and only works in ConTeXt MKIV.",
" `externalimages` writes PNG files to disk and also works with ConTeXt MKII.",
" Gnuplot needs to have support for PNG images built in for this to work.",
"",
" With `font` you can set font name and size in standalone graphics.",
" In non-standalone (`input`) mode only the font size is important",
" to reserve enough space for text labels.",
" The command",
"      set term context font \"myfont,ss,10\"",
" will result in",
"      \\setupbodyfont[myfont,ss,10pt]",
" If you additionally set `fontscale` to 0.8 for example,",
" then the resulting font will be 8pt big and",
"      set label ... font \"myfont,12\"",
" will come out as 9.6pt.",
"",
" It is your own responsibility to provide proper typescripts (and header),",
" otherwise switching the font will have no effect.",
" For a standard font in ConTeXt MKII (pdfTeX) you could use:",
"      set terminal context standalone header '\\usetypescript[iwona][ec]' \\",
"          font \"iwona,ss,11\"",
" Please take a look into ConTeXt documentation, wiki or mailing list (archives)",
" for any up-to-date information about font usage.",
"",
" Examples:",
"      set terminal context size 10cm, 5cm     # 10cm, 5cm",
"      set terminal context size 4in, 3in      # 4in, 3in",
" For standalone (whole-page) plots with labels in UTF-8 encoding:",
"      set terminal context standalone header '\\enableregime[utf-8]'",
"", /* TODO: LaTeX formatting */
"2 Requirements",
" You need gnuplot module for ConTeXt",
"^ <a href=\"http://ctan.org/pkg/context-gnuplot\">",
"      http://ctan.org/pkg/context-gnuplot",
"^ </a>",
" and a recent version of ConTeXt.",
" If you want to call gnuplot on-the-fly, you also need write18 enabled.",
" In most TeX distributions this can be set with shell_escape=t in texmf.cnf.",
"",
" See",
"^ <a href=\"http://wiki.contextgarden.net/Gnuplot\">",
"           http://wiki.contextgarden.net/Gnuplot",
"^ </a>",
" for details about this terminal and for more exhaustive help & examples.",
"",
"2 Calling gnuplot from ConTeXt",
" The easiest way to make plots in ConTeXt documents is",
"      \\usemodule[gnuplot]",
"      \\starttext",
"      \\title{How to draw nice plots with {\\sc gnuplot}?}",
"      \\startGNUPLOTscript[sin]",
"      set format y \"%.1f\"",
"      plot sin(x) t '$\\sin(x)$'",
"      \\stopGNUPLOTscript",
"      \\useGNUPLOTgraphic[sin]",
"      \\stoptext",
" This will run gnuplot automatically and include the resulting figure in the document."
#else /* JAPANESE_DOC */
"1 context",
"?commands set terminal context",
"?set terminal context",
"?terminal context",
"?set term context",
"?term context",
"?context",
" ConTeXt は (絵の描画のために) Metapost と高度に融合し、高品質な PDF 文",
" 書を生成するための TeX のマクロパッケージです。この出力形式は、Metafun",
" ソースを生成しますが、これは手動で編集でき、外部からほとんどのことをあ",
" なたが設定できます。",
"",
" ConTeXt + gnuplot モジュールの平均的なユーザには、このページを読むより",
" も、`Using ConTeXt` を参照するか、ConTeXt の gnuplot モジュールのマニュ",
" アルを参照することを推奨します。",
"",
" 出力形式 `context` は、以下のオプションをサポートしています:",
"",
" 書式:",
"      set term context {default}",
"              {defaultsize | size <scale> | size <xsize>{in|cm}, <ysize>{in|cm}}",
"              {input | standalone}",
"              {timestamp | notimestamp}",
"              {noheader | header \"<header>\"}",
"              {color | colour | monochrome}",
"              {rounded | mitered | beveled} {round | butt | squared}",
"              {dashed | solid} {dashlength | dl <dl>}",
"              {linewidth | lw <lw>}",
"              {fontscale <fontscale>}",
"              {mppoints | texpoints}",
"              {inlineimages | externalimages}",
"              {defaultfont | font \"{<fontname>}{,<fontsize>}\"}",
"",
" standalone でないグラフ (`input`) では、オプションはグラフサイズを選択",
" する `size`、すべてのラベルを倍率 <fontscale> で伸縮する `fontscasle`、",
" および font サイズのみ意味を持ち、他のオプションは警告なく無視されるの",
" みで、それらはそのグラフィックを読み込む .tex ファイルの方で設定してく",
" ださい。元の文書のフォントが 12pt ではない場合は、適切なフォントサイズ",
" を指定することを強く推奨します。それにより、gnuplot がラベル用にどれく",
" らいの大きさのスペースを確保すればいいかを知ることができまず。",
"",
" `default` は、すべてのオプションをデフォルトの値にリセットします。",
"",
" `defaultsize` は、描画サイズを 5in x 3in に設定します。",
" `size` <scale> は、描画サイズをデフォルトサイズの <scale> 倍にしますが",
" 引数を ',' 区切りで 2 つ与えた場合は、最初のものは横のサイズを、2 つ目",
" のものは垂直サイズを設定します。それらのサイズには、単位としてインチ",
" ('in'), センチ ('cm') が使えますが、省略した場合はデフォルト値に対する",
" 比であるとみなします。",
"",
" `input` (デフォルト) は、他の ConTeXt 文書から取り込めるグラフを生成し",
" ます。",
" `standalone` は、それに数行追加し、それ自身がそのままコンパイルできるよ",
" うにします。その場合、`header` オプションが必要になるかもしれません。",
"",
" standalone のグラフに設定/定義/マクロを追加したい場合は `header` を使用",
" してください。デフォルトは `noheader` です。",
"",
" `notimestamp` は、コメント部分の日時の出力を抑制します (バージョン管理",
" システムを使っている場合、日付だけ違うものを新しいバージョンとして登録",
" したくはないでしょう)。",
"",
" `color` (デフォルト) は、カラー描画を生成しますが、`monochrome` は一切",
" special を入れません。白黒プリンタ用には、その挙動をこんな風に変えた方",
" がもっと良くなるというアイデアを持っている人は、是非提案してください。",
"",
" `rounded` (デフォルト) と `mitered`, `beveled` は、線分の接合部の形状を",
" 制御し、`round` (default) と `butt`, `squared` は、線分の端の形状を制御",
" します。詳細は、PostScript か PDF のリファレンスマニュアルを参照してく",
" ださい。激しく変化する関数と太い線用には、線分の接合部での尖った角を避",
" けるように`rounded` と `round` を使うといいでしょう。",
" (これに関する一般的な仕組みは、このオプションを各描画スタイル毎に別々に",
" 指定できるよう gnuplot がサポートすべきだと思います。)",
"",
" `dashed` (デフォルト) は、異なる線種に異なる点線パターンを使い、`solid`",
" は、すべての描画に実線を使用します。",
"",
" `dashlength` (または `dl`) は、点線の線分の長さを <dl> 倍します。",
" `linewidth` (または `lw`) は、すべての線幅を <lw> 倍します。",
" (lw 1 は 0.5bp を意味し、これは Metapost の描画のデフォルトの線幅です)",
" `fontscale` は、テキストラベルをデフォルトの文書フォントの <fontscale>",
" 倍に拡大します。",
"",
" `mppoints` は、Metapost で描画された定義済みの点の形状を使用します。",
" `texpoints` は、簡単に設定できる記号セットを使用します。これは、以下",
" のようにして ConTeXt で定義できます:",
"      \\defineconversion[my own points][+,{\\ss x},\\mathematics{\\circ}]",
"      \\setupGNUPLOTterminal[context][points=tex,pointset=my own points]",
"",
" `inlineimages` は、バイナリ画像を文字列として書き出しますが、これは",
" ConTeXt MKIV のみで機能します。",
" `externalimages` は、PNG ファイルを外部出力し、これは ConTeXt MKII で機",
" 能します。これが動作するためには、gnuplot が PNG 画像出力をサポートして",
" いる必要があります。",
"",
" standalone のグラフでは、`font` でフォント名とサイズを設定できます。",
" standalone でないモード (`input`) では、テキストラベルに十分なスペース",
" を割り当てるためにフォントサイズのみが意味を持ちます",
" コマンド",
"      set term context font \"myfont,ss,10\"",
" は、以下のようになります:",
"      \\setupbodyfont[myfont,ss,10pt]",
" 例えばさらに追加で `fontscale` を 0.8 に設定すると、結果としてフォント",
" は 8pt の大きさになり、 ",
"      set label ... font \"myfont,12\"",
" は 9.6pt になります。",
"",
" 適当なタイプスクリプトフォント (とヘッダー) を用意するのは自分で行って",
" さもなくばフォントの切り替えは効果を持ちません。ConTeXt MKII (pdfTeX)",
" の標準フォントは、以下のようにして使えます:",
"      set terminal context standalone header '\\usetypescript[iwona][ec]' \\",
"          font \"iwona,ss,11\"",
" フォントの利用に関する ConTeXt の最新の情報については、ConTeXt の文書、",
" wiki、メーリングリスト (アーカイブ) を探してみてください。",
"",
" 例:",
"      set terminal context size 10cm, 5cm     # 10cm, 5cm",
"      set terminal context size 4in, 3in      # 4in, 3in",
" UTF-8 エンコードラベルを standalone (ページ全体) グラフで使用するには:",
"      set terminal context standalone header '\\enableregime[utf-8]'",
"", /* TODO: LaTeX formatting */
"C 2 必要条件 (Requirements)",
"2 Requirements",
" ConTeXt 用の gnuplot モジュール:",
"^ <a href=\"http://ctan.org/pkg/context-gnuplot\">",
"      http://ctan.org/pkg/context-gnuplot",
"^ </a>",
" と、最新の ConTeXt が必要です。",
" そこから gnuplot を呼び出すには、write18 を可能にする必要があります。",
" ほとんどの TeX 配付物では、これは texmf.cnf で shell_escape=t とするこ",
" とで設定できます。",
"",
" この出力形式とより詳しいヘルプと例に関しては以下も参照してください:",
"^ <a href=\"http://wiki.contextgarden.net/Gnuplot\">",
"           http://wiki.contextgarden.net/Gnuplot",
"^ </a>",
"",
"C 2 ConTeXt からの gnuplot の呼び出し (Calling gnuplot from ConTeXt)",
"2 Calling gnuplot from ConTeXt",
" ConTeXt 文書でグラフを作成する最も簡単な方法は以下の通り:",
"      \\usemodule[gnuplot]",
"      \\starttext",
"      \\title{How to draw nice plots with {\\sc gnuplot}?}",
"      \\startGNUPLOTscript[sin]",
"      set format y \"%.1f\"",
"      plot sin(x) t '$\\sin(x)$'",
"      \\stopGNUPLOTscript",
"      \\useGNUPLOTgraphic[sin]",
"      \\stoptext",
" これは自動的に gnuplot を実行し、その結果の画像を文書中に取り込みます。"
#endif /* JAPANESE_DOC */
END_HELP(context)
START_HELP(debug)
#ifndef JAPANESE_DOC
"1 debug",
"?commands set terminal debug",
"?set terminal debug",
"?set term debug",
"?terminal debug",
"?term debug",
"?debug",
" This terminal is provided to allow for the debugging of `gnuplot`.  It is",
" likely to be of use only for users who are modifying the source code."
#else /* JAPANESE_DOC */
"1 debug",
"?commands set terminal debug",
"?set terminal debug",
"?set term debug",
"?terminal debug",
"?term debug",
"?debug",
" このドライバは `gnuplot` のデバッグのために提供されているものです。お",
" そらくソースコードを修正するユーザのみが使用するものでしょう。"
#endif /* JAPANESE_DOC */
END_HELP(debug)
START_HELP(domterm)
#ifndef JAPANESE_DOC
"1 domterm",
"?set terminal domterm",
"?terminal domterm",
"?set term domterm",
"?term domterm",
"?domterm",
" Syntax:",
"       set terminal domterm ",
"                        {font \"<fontname>{,<fontsize>}\"} {{no}enhanced}",
"                        {fontscale <multiplier>}",
"                        {rounded|butt|square} {solid|dashed} {linewidth <lw>}",
"                        {background <rgb_color>}",
"                        {animate}",
"",
" The `domterm` terminal device runs on the DomTerm terminal emulator",
" including the domterm and qtdomterm programs.",
" It supports SVG graphics embedded directly in the terminal output.",
" See http://domterm.org .",
"",
" For information on terminal options, please see the `svg` terminal.",
"",
"2 animate",
"?set term domterm animate",
"?term domterm animate",
"      set term domterm animate",
"",
" The `animate` option resets the cursor position to the terminal top left at",
" the start of every plot so that successive plots overwrite the same area on",
" the screen. This may be desirable in order to create an in-place animation.",
""
#else /* JAPANESE_DOC */
"1 domterm",
"?set terminal domterm",
"?terminal domterm",
"?set term domterm",
"?term domterm",
"?domterm",
" 書式:",
"       set terminal domterm ",
"                  {font \"<fontname>{,<fontsize>}\"} {{no}enhanced}",
"                  {fontscale <multiplier>}",
"                  {rounded|butt|square} {solid|dashed} {linewidth <lw>}",
"                  {background <rgb_color>}",
"                  {animate}",
"",
" `domterm` 出力形式は、domterm, qtdomterm プログラム等の DomTerm ターミ",
" ナルエミュレータ上で動作します。",
" これは、ターミナル出力内へ直接 SVG グラフ画像を埋め込むことをサポートし",
" ています。http://domterm.org を参照してください。",
"",
" terminal オプションについては、`svg` 出力形式を参照してください。",
"",
"2 animate",
"?set term domterm animate",
"?term domterm animate",
"      set term domterm animate",
"",
" オプション `animate` は、カーソル位置をすべてのグラフの最初の、出力形式",
" 左上に戻し、後に続くグラフをスクリーンの同じ場所に上書きするようにしま",
" す。これは、定位置のアニメーションを作成するためには望ましいでしょう。",
""
#endif /* JAPANESE_DOC */
END_HELP(domterm)
START_HELP(dumb)
#ifndef JAPANESE_DOC
"1 dumb",
"?commands set terminal dumb",
"?set terminal dumb",
"?set term dumb",
"?terminal dumb",
"?term dumb",
"?dumb",
" The `dumb` terminal driver plots into a text block using ascii characters.",
" It has an optional size specification and a trailing linefeed flag.",
"",
" Syntax:",
"       set terminal dumb {size <xchars>,<ychars>} {[no]feed}",
"                         {aspect <htic>{,<vtic>}}",
#ifndef NO_DUMB_ENHANCED_SUPPORT
"                         {[no]enhanced}",
#endif
"                         {fillchar {solid|\"<char>\"}}",
"                         {[no]attributes}",
#ifndef NO_DUMB_COLOR_SUPPORT
"                         {mono|ansi|ansi256|ansirgb}",
#endif
"",
" where <xchars> and <ychars> set the size of the text block. The default is",
" 79 by 24. The last newline is printed only if `feed` is enabled.",
"",
" The `aspect` option can be used to control the aspect ratio of the plot by",
" setting the length of the horizontal and vertical tic marks. Only integer",
" values are allowed. Default is 2,1 -- corresponding to the aspect ratio of",
" common screen fonts.",
"",
" The character \"#\" is used for area-fill. You can replace this with any",
" character available in the terminal font.  `fillchar solid` is short for",
" `fillchar \"\\U+2588\"` (unicode FULL BLOCK).",
"",
#ifndef NO_DUMB_COLOR_SUPPORT
" The `ansi`, `ansi256`, and `ansirgb` options will include escape",
" sequences in the output to handle colors.  Note that these might",
" not be handled by your terminal.  Default is `mono`.",
" To obtain the best color match in `ansi` mode, you should use",
" `set colorsequence classic`.",
" Depending on the mode, the `dumb` terminal will emit the",
" following sequences (without the additional whitespace):",
"",
"       ESC [ 0 m           reset attributes to defaults",
"       foreground color:",
"       ESC [ 1 m           set intense/bold",
"       ESC [ 22 m          intense/bold off",
"       ESC [ <fg> m        with color code 30 <= <fg> <= 37",
"       ESC [ 39 m          reset to default",
"       ESC [ 38; 5; <c> m  with palette index 16 <= <c> <= 255",
"       ESC [ 38; 2; <r>; <g>; <b> m  with components 0 <= <r,g,b> <= 255",
"       background color:",
"       ESC [ <bg> m        with color code 40 <= <bg> <= 47",
"       ESC [ 49 m          reset to default",
"       ESC [ 48; 5; <c> m  with palette index 16 <= <c> <= 231",
"       ESC [ 48; 2; <r>; <g>; <b> m  with components 0 <= <r,g,b> <= 255",
"",
" See also e.g. the description at",
"^ <a href=\"https://en.wikipedia.org/wiki/ANSI_escape_code#Colors\">",
"           https://en.wikipedia.org/wiki/ANSI_escape_code#Colors",
"^ </a>",
"",
#endif
"",
" The `attributes` option enables bold and italic text on terminals or",
" emulators that support the escape sequences",
"       ESC [ 1 m / 22 m    for bold on/off and",
"       ESC [ 3 m / 23 m    for italic on /off.",
"",
" Example:",
"       set term dumb mono size 60,15 aspect 1",
"       set tics nomirror scale 0.5",
"       plot [-5:6.5] sin(x) with impulse ls -1",
"",
"           1 +-------------------------------------------------+",
"         0.8 +|||++                   ++||||++                 |",
"         0.6 +|||||+                 ++|||||||+  sin(x) +----+ |",
"         0.4 +||||||+               ++|||||||||+               |",
"         0.2 +|||||||+             ++|||||||||||+             +|",
"           0 ++++++++++++++++++++++++++++++++++++++++++++++++++|",
"        -0.2 +        +|||||||||||+              +|||||||||||+ |",
"        -0.4 +         +|||||||||+                +|||||||||+  |",
"        -0.6 +          +|||||||+                  +|||||||+   |",
"        -0.8 +           ++||||+                    ++||||+    |",
"          -1 +---+--------+--------+-------+--------+--------+-+",
"                -4       -2        0       2        4        6  "
#else /* JAPANESE_DOC */
"1 dumb",
"?commands set terminal dumb",
"?set terminal dumb",
"?set term dumb",
"?terminal dumb",
"?term dumb",
"?dumb",
" ダム端末 (`dumb`) ドライバは、ASCII 文字を使用してテキスト領域に描画し",
" ます。サイズの指定と改行制御用のオプションがあります。",
"",
" 書式:",
"       set terminal dumb {size <xchars>,<ychars>} {[no]feed}",
"                         {aspect <htic>{,<vtic>}}",
#ifndef NO_DUMB_ENHANCED_SUPPORT
"                         {[no]enhanced}",
#endif
"                         {fillchar {solid|\"<char>\"}}",
"                         {[no]attributes}",
#ifndef NO_DUMB_COLOR_SUPPORT
"                         {mono|ansi|ansi256|ansirgb}",
#endif
"",
" <xchars>, <ychars> はテキスト領域のサイズを設定し、デフォルトは 79 x 24",
" となっています。最後の改行は、`feed` オプションが設定されている場合のみ",
" 出力されます。",
"",
" オプション `aspect` は、グラフのアスペクト比の制御に使用します。これは",
" 水平軸、垂直軸の目盛り刻みの長さを設定します。整数の指定のみが許されて",
" いて、デフォルトは 2,1 で、これは共通のスクリーンフォントのアスペクト比",
" に対応します。",
"",
" 文字 \"#\" を領域塗り潰しに使いますが、これを terminal フォントで利用で",
" きる任意の文字に置き換えることができます。`fillchar solid` は、",
" `fillchar \"\\U+2588\"` (Unicode の全角黒四角) の短縮形です。",
"",
#ifndef NO_DUMB_COLOR_SUPPORT
" オプション `ansi`, `ansi256`, `ansirgb` は色扱うために出力にエスケープ",
" シーケンスを挿入しますが、あなたのターミナルでは処理できないかもしれま",
" せん。デフォルトは `mono` です。",
" `ansi` モードでは、色は `set colorsequence classic` を使うのが一番合い",
" ます。",
" どのモードを使用するかによって、`dumb` 出力形式は、以下のシーケンスを出",
" 力します (空白を追加せずに):",
"",
"       ESC [ 0 m           属性をデフォルトにリセット",
"       foreground color:",
"       表示色:",
"       ESC [ 1 m           強調/太字をセット", 
"       ESC [ 22 m          強調/太字をオフに",
"       ESC [ <fg> m        30 <= <fg> <= 37 のカラーコード指定",
"       ESC [ 39 m          デフォルトにリセット",
"       ESC [ 38; 5; <c> m  パレットの番号指定 (16 <= <c> <= 255)",
"       ESC [ 38; 2; <r>; <g>; <b> m  成分指定 (0 <= <r,g,b> <= 255)",
"       背景色:",
"       ESC [ <bg> m        40 <= <bg> <= 47 のカラーコード指定",
"       ESC [ 49 m          デフォルトにリセット",
"       ESC [ 48; 5; <c> m  パレットの番号指定 (16 <= <c> <= 231)",
"       ESC [ 48; 2; <r>; <g>; <b> m  成分指定 (0 <= <r,g,b> <= 255)",
"",
" 例えば、以下の記述も参照してください:",
"^ <a href=\"https://en.wikipedia.org/wiki/ANSI_escape_code#Colors\">",
"           https://en.wikipedia.org/wiki/ANSI_escape_code#Colors",
"^ </a>",
"",
#endif
"",
" オプション `attributes` は、太字やイタリック体文字用のエスケープシーケ",
" ンスをサポートする端末、エミュレーター上でそれらの文字出力を可能にしま",
" す。",
"       ESC [ 1 m / 22 m    太字 (bold) のオン/オフ",
"       ESC [ 3 m / 23 m    イタリック体のオン/オフ",
"",
" 例:",
"       set term dumb mono size 60,15 aspect 1",
"       set tics nomirror scale 0.5",
"       plot [-5:6.5] sin(x) with impulse ls -1",
"",
"           1 +-------------------------------------------------+",
"         0.8 +|||++                   ++||||++                 |",
"         0.6 +|||||+                 ++|||||||+  sin(x) +----+ |",
"         0.4 +||||||+               ++|||||||||+               |",
"         0.2 +|||||||+             ++|||||||||||+             +|",
"           0 ++++++++++++++++++++++++++++++++++++++++++++++++++|",
"        -0.2 +        +|||||||||||+              +|||||||||||+ |",
"        -0.4 +         +|||||||||+                +|||||||||+  |",
"        -0.6 +          +|||||||+                  +|||||||+   |",
"        -0.8 +           ++||||+                    ++||||+    |",
"          -1 +---+--------+--------+-------+--------+--------+-+",
"                -4       -2        0       2        4        6  "
#endif /* JAPANESE_DOC */
END_HELP(dumb)
START_HELP(dxf)
#ifndef JAPANESE_DOC
"1 dxf",
"?commands set terminal dxf",
"?set terminal dxf",
"?set term dxf",
"?terminal dxf",
"?term dxf",
"?dxf",
" Terminal driver `dxf` for export to  AutoCad (Release 10.x).",
" It has no options. The default size is 120x80 AutoCad units.",
" `dxf` uses seven colors (white, red, yellow, green, cyan, blue and magenta)",
" that can be changed only by modifying the source file.  If a black-and-white",
" plotting device is used the colors are mapped to differing line thicknesses.",
" Note: someone please update this terminal to the 2012 DXF standard!"
#else /* JAPANESE_DOC */
"1 dxf",
"?commands set terminal dxf",
"?set terminal dxf",
"?set term dxf",
"?terminal dxf",
"?term dxf",
"?dxf",
" `dxf` は AutoCad (リリース 10.x) 用の出力ドライバです。",
" このドライバにはオプションはありません。デフォルトの大きさは AutoCad の",
" 単位での 120x80 です。",
" `dxf` は 7 色 (白、赤、黄、緑、水色、青、赤紫) を使いますが、これを変更",
" するにはドライバソースファイルを修正する必要があります。白黒の出力装置",
" を使う場合、それらの色は線の太さの違いで表現されます。",
" 注意: どなたか、この出力ドライバを DXF 規格 2012 に更新してください !"
#endif /* JAPANESE_DOC */
END_HELP(dxf)
START_HELP(emf)
#ifndef JAPANESE_DOC
"1 emf",
"?commands set terminal emf",
"?set terminal emf",
"?set term emf",
"?terminal emf",
"?term emf",
"?emf",
" The `emf` terminal generates an Enhanced Metafile Format file.",
" This file format is recognized by many Windows applications.",
"",
" Syntax:",
"       set terminal emf {color | monochrome}",
"                        {enhanced {noproportional}}",
"                        {rounded | butt}",
"                        {linewidth <LW>} {dashlength <DL>}",
"                        {size XX,YY} {background <rgb_color>}",
"                        {font \"<fontname>{,<fontsize>}\"}",
"                        {fontscale <scale>}",
"",
" In `monochrome` mode successive line types cycle through dash patterns.",
" `linewidth <factor>` multiplies all line widths by this factor.",
" `dashlength <factor>` is useful for thick lines.",
" <fontname> is the name of a font; and ",
" `<fontsize>` is the size of the font in points.",
"",
" The nominal size of the output image defaults to 1024x768 in arbitrary",
" units. You may specify a different nominal size using the `size` option.",
"",
" Enhanced text mode tries to approximate proportional character spacing.",
" If you are using a monospaced font, or don't like the approximation, you",
" can turn off this correction using the `noproportional` option.",
"",
" The default settings are `color font \"Arial,12\" size 1024,768`",
" Selecting `default` sets all options to their default values.",
"",
" Examples:",
"       set terminal emf 'Times Roman Italic, 12'"
#else /* JAPANESE_DOC */
"1 emf",
"?commands set terminal emf",
"?set terminal emf",
"?set term emf",
"?terminal emf",
"?term emf",
"?emf",
" `emf` ドライバは EMF (Enhanced Metafile Format) ファイルを生成します。",
" この形式のファイルは多くの MS-Windows アプリケーションで認識できます。",
"",
" 書式:",
"       set terminal emf {color | monochrome}",
"                        {enhanced {noproportional}}",
"                        {rounded | butt}",
"                        {linewidth <LW>} {dashlength <DL>}",
"                        {size XX,YY} {background <rgb_color>}",
"                        {font \"<fontname>{,<fontsize>}\"}",
"                        {fontscale <scale>}",
"",
" `monochorome` モードは折れ線を点線のパターンを循環させて打ち出します。",
" `linewidth <factor>` は全ての線幅をここで指定する値倍にします。",
" `dashlength <factor>` は、太い線には便利でしょう。",
" `<fontname>` はフォント名、",
" `<fontsize>` はポイント単位でのフォントの大きさです。",
"",
" 出力画像の形式的な (名ばかりの) サイズは、デフォルトでは適当な単位での",
" 1024x768 になっています。オプション `size` を使って別な形式的なサイズ",
" を指定できます。",
"",
" 拡張文字列処理モード (enhanced text mode) は、プロポーショナル文字間隔",
" を近似しようとします。モノスペースフォントを使う場合、あるいはこの近似",
" を好まない場合、オプション `noproportional` を使うことでこの補正をオフ",
" にできます。",
"",
" デフォルトの設定は、`color font \"Arial,12\" size 1024,768` で、",
" `default` を選択すると全てのオプションがそのデフォルトの値になります。",
"",
" 例:",
"       set terminal emf 'Times Roman Italic, 12'"
#endif /* JAPANESE_DOC */
END_HELP(emf)
START_HELP(epscairo)
#ifndef JAPANESE_DOC
"1 epscairo",
"?set terminal epscairo",
"?terminal epscairo",
"?set term epscairo",
"?term epscairo",
"?epscairo",
" The `epscairo` terminal device generates encapsulated PostScript (*.eps) using",
" the cairo and pango support libraries.  cairo version >= 1.6 is required.",
"",
" Please read the help for the `pdfcairo` terminal."
""
#else /* JAPANESE_DOC */
"1 epscairo",
"?set terminal epscairo",
"?terminal epscairo",
"?set term epscairo",
"?term epscairo",
"?epscairo",
" 出力形式 `epscairo` は、cairo, pango ライブラリを用いて EPS 出力",
" (Encapsulated PostScript) を生成します。cairo は version 1.6 以降が必",
" 要です。",
"",
" 詳細は、`pdfcairo` 出力形式のヘルプを参照してください。"
""
#endif /* JAPANESE_DOC */
END_HELP(epscairo)
START_HELP(epslatex)
#ifndef JAPANESE_DOC
"1 epslatex",
"?commands set terminal epslatex",
"?set terminal epslatex",
"?set term epslatex",
"?terminal epslatex",
"?term epslatex",
"?epslatex",
" The `epslatex` driver generates output for further processing by LaTeX.",
"",
" Syntax:",
"       set terminal epslatex   {default}",
"       set terminal epslatex   {standalone | input}",
PS_COMMON_OPTS1
"                               {header <header> | noheader}",
PS_COMMON_OPTS2
"",
" The epslatex terminal prints a plot as `terminal postscript eps`",
" but transfers the texts to LaTeX instead of including in the PostScript",
" code. Thus, many options are the same as in the `postscript terminal`.",
"",
PS_COMMON_PROLOG_INFO
PS_COMMON_DOC1
" `blacktext` forces all text to be written in black even in color mode;",
"",
" The epslatex driver offers a special way of controlling text positioning:",
" (a) If any text string begins with '{', you also need to include a '}' at the",
" end of the text, and the whole text will be centered both horizontally",
" and vertically by LaTeX.  (b) If the text string begins with '[', you need",
" to continue it with: a position specification (up to two out of t,b,l,r,c),",
" ']{', the text itself, and finally, '}'. The text itself may be anything",
" LaTeX can typeset as an LR-box. \\rule{}{}'s may help for best positioning.",
" See also the documentation for the `pslatex` terminal driver.",
" To create multiline labels, use \\shortstack, for example",
"    set ylabel '[r]{\\shortstack{first line \\\\ second line}}' ",
"",
" The `back` option of `set label` commands is handled slightly different",
" than in other terminals. Labels using 'back' are printed behind all other",
" elements of the plot while labels using 'front' are printed above ",
" everything else.",
"",
" The driver produces two different files, one for the eps part of the figure",
" and one for the LaTeX part. The name of the LaTeX file is taken from the",
" `set output` command. The name of the eps file is derived by replacing",
" the file extension (normally `.tex`) with `.eps` instead.  There is no",
" LaTeX output if no output file is given!  Remember to close the",
" `output file` before next plot unless in `multiplot` mode.",
"",
" In your LaTeX documents use '\\input{filename}' to include the figure.",
" The `.eps` file is included by the command \\includegraphics{...}, so you",
" must also include \\usepackage{graphicx} in the LaTeX preamble.  If you",
" want to use coloured text (option `textcolour`) you also have to include",
" \\usepackage{color} in the LaTeX preamble.",
"",
" Pdf files can be made from the eps file using 'epstopdf'. If the graphics",
" package is properly configured, the LaTeX files can also be processed by",
" pdflatex without changes, using the pdf files instead of the eps files."
"",
" The behaviour concerning font selection depends on the header mode.",
" In all cases, the given font size is used for the calculation of proper",
" spacing. When not using the `standalone` mode the actual LaTeX font and",
" font size at the point of inclusion is taken, so use LaTeX commands for",
" changing fonts. If you use e.g. 12pt as font size for your LaTeX",
" document, use '\"\" 12' as options. The font name is ignored. If using",
" `standalone` the given font and font size are used, see below for a",
" detailed description.",
"",
" If text is printed coloured is controlled by the TeX booleans \\ifGPcolor",
" and \\ifGPblacktext. Only if \\ifGPcolor is true and \\ifGPblacktext is",
" false, text is printed coloured. You may either change them in the",
" generated TeX file or provide them globally in your TeX file, for example",
" by using",
"    \\newif\\ifGPblacktext",
"    \\GPblacktexttrue",
" in the preamble of your document. The local assignment is only done if no",
" global value is given.",
"",
" When using the epslatex terminal give the name of the TeX file in the",
" `set output` command including the file extension (normally \".tex\").",
" The eps filename is generated by replacing the extension by \".eps\".",
"",
" If using the `standalone` mode a complete LaTeX header is added to the",
" LaTeX file; and \"-inc\" is added to the filename of the eps file.",
" The `standalone` mode generates a TeX file that produces",
" output with the correct size when using dvips, pdfTeX, or VTeX.",
" The default, `input`, generates a file that has to be included into a",
" LaTeX document using the \\input command.",
"",
" If a font other than \"\" or \"default\" is given it is interpreted as",
" LaTeX font name.  It contains up to three parts, separated by a comma:",
" 'fontname,fontseries,fontshape'.  If the default fontshape or fontseries",
" are requested, they can be omitted.  Thus, the real syntax for the fontname",
" is '[fontname][,fontseries][,fontshape]'.  The naming convention for all",
" parts is given by the LaTeX font scheme.  The fontname is 3 to 4 characters",
" long and is built as follows: One character for the font vendor, two",
" characters for the name of the font, and optionally one additional",
" character for special fonts, e.g., 'j' for fonts with old-style numerals",
" or 'x' for expert fonts. The names of many fonts is described in",
"^ <a href=\"http://www.tug.org/fontname/fontname.pdf\">",
"           http://www.tug.org/fontname/fontname.pdf",
"^ </a>",
" For example, 'cmr' stands for Computer Modern Roman, 'ptm' for Times-Roman,",
" and 'phv' for Helvetica.  The font series denotes the thickness of the",
" glyphs, in most cases 'm' for normal (\"medium\") and 'bx' or 'b' for bold",
" fonts.  The font shape is 'n' for upright, 'it' for italics, 'sl' for",
" slanted, or 'sc' for small caps, in general.  Some fonts may provide",
" different font series or shapes.",
"",
" Examples:",
"",
" Use Times-Roman boldface (with the same shape as in the surrounding text):",
"       set terminal epslatex 'ptm,bx'",
" Use Helvetica, boldface, italics:",
"       set terminal epslatex 'phv,bx,it'",
" Continue to use the surrounding font in slanted shape:",
"       set terminal epslatex ',,sl'",
" Use small capitals:",
"       set terminal epslatex ',,sc'",
"",
" By this method, only text fonts are changed. If you also want to change",
" the math fonts you have to use the \"gnuplot.cfg\" file or the `header`",
" option, described below.",
"",
" In standalone mode, the font size is taken from the given font size in the",
" `set terminal` command. To be able to use a specified font size, a file",
" \"size<size>.clo\" has to reside in the LaTeX search path.  By default,",
" 10pt, 11pt, and 12pt are supported.  If the package \"extsizes\" is",
" installed, 8pt, 9pt, 14pt, 17pt, and 20pt are added.",
"",
" The `header` option takes a string as argument.  This string is written",
" into the generated LaTeX file.  If using the `standalone` mode, it is ",
" written into the preamble, directly before the \\begin{document} command.",
" In the `input` mode, it is placed directly after the \\begingroup command",
" to ensure that all settings are local to the plot.",
"",
" Examples:",
"",
" Use T1 fontencoding, change the text and math font to Times-Roman as well",
" as the sans-serif font to Helvetica:",
"     set terminal epslatex standalone header \\",
"     \"\\\\usepackage[T1]{fontenc}\\n\\\\usepackage{mathptmx}\\n\\\\usepackage{helvet}\"",
" Use a boldface font in the plot, not influencing the text outside the plot:",
"     set terminal epslatex input header \"\\\\bfseries\"",
"",
" If the file \"gnuplot.cfg\" is found by LaTeX it is input in the preamble",
" the LaTeX document, when using `standalone` mode.  It can be used for",
" further settings, e.g., changing the document font to Times-Roman,",
" Helvetica, and Courier, including math fonts (handled by \"mathptmx.sty\"):",
"       \\usepackage{mathptmx}",
"       \\usepackage[scaled=0.92]{helvet}",
"       \\usepackage{courier}",
" The file \"gnuplot.cfg\" is loaded before the header information given",
" by the `header` command.  Thus, you can use `header` to overwrite some of",
" settings performed using \"gnuplot.cfg\"",
""
#else /* JAPANESE_DOC */
"1 epslatex",
"?commands set terminal epslatex",
"?set terminal epslatex",
"?set term epslatex",
"?terminal epslatex",
"?term epslatex",
"?epslatex",
" `epslatex` ドライバは LaTeX で処理すべき出力を生成します。",
"",
" 書式:",
"       set terminal epslatex   {default}",
"       set terminal epslatex   {standalone | input}",
"                               {oldstyle | newstyle}",
PS_COMMON_OPTS1
"                               {header <header> | noheader}",
PS_COMMON_OPTS2
"",
" epslatex 出力形式は、文字列を PostScript コードに含ませる代わりに LaTeX",
" ファイルに移すことを除けば `terminal postscript eps` 同様に描画します。",
" よって、`postscript terminal` と多くのオプションが共通です。",
"",
" version 4.0 から 4.2 の間に、postscript 出力形式とのより良い互換性の",
" ために epslatex 出力は変更されました。描画サイズは 5 x 3 インチから",
" 5 x 3.5 インチへと変更され、文字幅は従来はフォントサイズの 50% と見",
" なしていましたが、現在は 60% と評価しています。より多くの Postscript",
" の線種や記号も使われます。以前の状態にほぼ等しい状態にするにはオプショ",
" ン `oldstyle` を指定してください。(実際にはごくわずかな違いが残ります:",
" 記号のサイズがわずかに違い、目盛刻み (tics) は従来の半分になっています",
" がそれは `set tics scale` で変更できます。そして矢 (arrow) に関しては",
" postscript 出力形式で使える全ての機能が利用できます。)",
"",
PS_COMMON_PROLOG_INFO
PS_COMMON_DOC1
" `blacktext` は、たとえカラーモードでも全ての文字列を黒で書きます。",
"",
" epslatex ドライバは文字列の配置の制御に特別な方法を提供します:",
" (a) '{' で始まる文字列は、'}' で閉じる必要がありますが、その文字列全体",
" が LaTeX によって水平方向にも垂直方向にもセンタリングされます。",
" (b) '[' で始まる文字列の場合は、位置の指定をする文字列 (t,b,l,r,c のう",
" ち 2 つまで) が続き、次に ']{'、文字列本体、で最後に '}' としますが、",
" この文字列は  LaTeX が LR-box として整形します。\\rule{}{} を使えばさ",
" らに良い位置合わせが可能でしょう。ドライバ `pslatex` に関する説明も参",
" 照。",
" 複数行の見出しを作成するには \\shortstack を使用してください。例えば、",
"    set ylabel '[r]{\\shortstack{first line \\\\ second line}}'",
"",
" `set label` コマンドのオプション `back` は使えますが、他の出力形式のも",
" のとは少し違っています。`front` の場合の見出しが他の全ての要素の上に出",
" 力されるのに対して、`back` を使った見出しは他の全ての要素の下に出力され",
" ます。",
"",
" このドライバは 2 つの別のファイルを作ります。1 つは図の eps の部分で、",
" もう一つは LaTeX の部分です。LaTeX ファイルの名前は、`set output` コマ",
" ンドのものが使われ、eps ファイルの名前はその拡張子 (通常 `.tex`) を",
" `.eps` に置き換えたものになります。",
" 出力ファイルを指定しなければ LaTeX 出力は行なわれません !",
" `multiplot` モード以外では、次の描画を行なう前にその出力ファイルをクロ",
" ーズするのを忘れないでください。",
"",
" LaTeX の文書で図を取り込むには '\\input{filename}' としてください。",
" `.eps` ファイルは \\includegraphics{...} コマンドで取り込むので、よって",
" LaTeX のプリアンブルに \\usepackage{graphicx} も入れる必要があります。",
" `textcolour` オプションで色付きの文字列を使用している場合は、LaTeX の",
" プリアンブルに \\usepackage{color} も入れる必要があります。",
"",
" この eps ファイルから 'epstopdf' を使って pdf ファイルを作ることもでき",
" ます。graphics パッケージが適切に設定されている場合、その LaTeX のファ",
" イルは、変更なしに pdflatex によっても処理でき、その場合 eps ファイル",
" の代わりに pdf ファイルが取り込まれます。",
"",
" フォントの選択に関する挙動はヘッダーモードに依存します。",
" どの場合でも、与えられたフォントサイズはスペースの計算にちゃんと使用さ",
" れます。`standalone` モードが使われなかった場合は、include される場所で",
" の実際の LaTeX フォントとフォントサイズが使われるので、よってフォントの",
" 変更には LaTeX コマンドを使ってください。例えばフォントサイズとして",
" LaTeX 文書中で 12pt を使う場合は、オプション '\"\" 12' を使います。この",
" 場合フォント名は無視されます。`standalone` を使う場合は、与えられたフォ",
" ントとフォントサイズが使われます。詳細は下記を参照してください。",
"",
" 文字列がカラーで表示されるかどうかは TeX の Bool 値変数 \\ifGPcolor と",
" \\ifGPblacktext で制御します。\\ifGPcolor が true で \\ifGPblacktext が",
" false の場合のみ文字列はカラーで表示されます。それらは生成される TeX フ",
" ァイルを変更するか、またはあなたの TeX ファイルで大域的に与えてください。",
" 例えば",
"    \\newif\\ifGPblacktext",
"    \\GPblacktexttrue",
" をあなたのファイルのプリアンブルに書きます。部分的な指定は大域的な値が",
" 与えられていないときのみ働きます。",
"",
" epslatex 出力形式を使う場合、`set output` コマンドで TeX ファイルの名前",
" を拡張子付き (通常 \".tex\") で与えてください。eps ファイルの名前はその",
" 拡張子を \".eps\" に置き換えた名前になります。",
"",
" `standalone` モードを使う場合、その LaTeX ファイルに完全な LaTeX のヘッ",
" ダが付加され、eps ファイルのファイル名には \"-inc\" が追加されます。",
" `standalone` モードは、dvips, pdfTeX, VTeX を使う場合に正しいサイズで出",
" 力されるような TeX ファイルを作ります。",
" デフォルトは `input` モードで、これは \\input コマンドを使って、別の",
"  LaTeX ファイルから読み込まれるようなファイルを生成します。",
"",
" \"\" か \"default\" 以外のフォント名が与えられた場合、それは LaTeX のフ",
" ォント名と解釈されます。それは、'fontname,fontseries,fontshape' の、コ",
" ンマで区切られた 3 つ以下の部分からなります。デフォルトのフォントシェイ",
" プ、フォントシリーズが使いたい場合はそれらは省略できます。つまり、フォ",
" ント名に対する正式な書式は、'[fontname][,fontseries][,fontshape]' とな",
" ります。そのいずれの部分も名前に関しては LaTeX のフォント体系の慣習に従",
" います。fontname は 3 から 4 文字の長さで、次のような規則で作られていま",
" す: 1 つ目がフォントの製造元を表し、次の 2 つがフォント名、オプションで",
" 追加される 1 つは特別なフォントを意味し、例えば 'j' は旧式の数字を持つ",
" フォント、'x' は expert フォント等となっています。以下には、多くのフォ",
" ントの名前について書かれています。",
"^ <a href=\"http://www.tug.org/fontname/fontname.pdf\">",
"           http://www.tug.org/fontname/fontname.pdf",
"^ </a>",
" 例えば 'cmr' は Computer Modern Roman フォント、'ptm' は Times-Roman,",
" 'phv' は Helvetica 等を表します。フォントシリーズは文字の線の太さを意味",
" し、大半は 'm' で普通 (\"medium\")、'bx' または 'b' が太字 (bold) フォ",
" ントを意味します。フォントシェイプは一般に 'n' が立体 (upright)、'it'",
" はイタリック、'sl' は斜体 (slanted)、'sc' は小さい大文字 (small caps)",
" となります。これらとは異なるフォントシリーズやフォントシェイプで与えら",
" れるフォントも存在します。",
"",
" 例:",
"",
" Times-Roman で太字 (シェイプは周りの文字列と同じもの) を使う場合:",
"       set terminal epslatex 'ptm,bx'",
" Helvetica で太字でイタリックを使う場合:",
"       set terminal epslatex 'phv,bx,it'",
" 斜体のシェイプで周りのフォントを使い続ける場合:",
"       set terminal epslatex ',,sl'",
" 小型の大文字 (small caps) を使う場合:",
"       set terminal epslatex ',,sc'",
"",
" この方法では文字列のフォントのみが変更されます。数式のフォントも変更し",
" たい場合は、\"gnuplot.cfg\" ファイルかまたは `header` オプションを使う",
" 必要がありますが、これについては以下に書きます。",
"",
" standalone モードでは、フォントサイズは `set terminal` コマンドで与えら",
" れたフォントサイズが使われます。指定したフォントサイズが使えるためには",
" LaTeX の検索パスに \"size<size>.clo\" というファイルが存在しなければな",
" りません。デフォルトでは 10pt, 11pt, 12pt がサポートされています。パッ",
" ケージ \"extsizes\" がインストールされていれば、8pt, 9pt, 14pt, 17pt,",
" 20pt も追加されます。",
"",
" オプション `header` は文字列引数を取ります。その文字列は、生成される",
" LaTeX ファイルに書き込まれます。`standalone` モードを使う場合、その文字",
" 列はプリアンブルの \\begin{document} コマンドの直前に書き込まれます。",
" `input` モードでは、その文字列は \\begingroup コマンドの直後に置かれ、",
" 描画への設定がすべて局所的になるようにします。",
"",
" 例:",
"",
" T1 フォントエンコーディングを使い、文字列、数式フォントを Times-Roman",
" とし、サンセリフフォントを Helvetica と変更する場合:",
"     set terminal epslatex standalone header \\",
"     \"\\\\usepackage[T1]{fontenc}\\n\\\\usepackage{mathptmx}\\n\\\\usepackage{helvet}\"",
" 描画の外の文字列には影響を与えないように描画内で太字 (boldface) フォン",
" トを使う場合:",
"     set terminal epslatex input header \"\\\\bfseries\"",
"",
" ファイル \"gnuplot.cfg\" が LaTeX によって見つけられると、`standalone`",
" モードを使っている場合は、それは生成される LaTeX 文書のプリアンブルに取",
" り込まれます。それは追加の設定を行なうのに使えます。例えば、文書のフォ",
" ントを TImes-Roman, Helvetica, Courier と変更し、(\"mathptmx.sty\" で扱",
" われている) 数式フォントを入れる場合:",
"       \\usepackage{mathptmx}",
"       \\usepackage[scaled=0.92]{helvet}",
"       \\usepackage{courier}",
" ファイル \"gnuplot.cfg\" は `header` コマンドで与えられるヘッダ情報の前",
" に読み込まれます。よって、\"gnuplot.cfg\" で行なわれる設定のいくつかを",
" `header` を使って上書きすることができます。",
""
#endif /* JAPANESE_DOC */
END_HELP(epslatex)
START_HELP(epson_180dpi)
#ifndef JAPANESE_DOC
"1 epson_180dpi",
"?commands set terminal epson_180dpi",
"?set terminal epson_180dpi",
"?set term epson_180dpi",
"?terminal epson_180dpi",
"?term epson_180dpi",
"?epson_180dpi",
"?commands set terminal epson_60dpi",
"?set terminal epson_60dpi",
"?set term epson_60dpi",
"?terminal epson_60dpi",
"?term epson_60dpi",
"?epson_60dpi",
"?commands set terminal epson_lx800",
"?set terminal epson_lx800",
"?set term epson_lx800",
"?terminal epson_lx800",
"?term epson_lx800",
"?epson_lx800",
"?commands set terminal nec_cp6",
"?set terminal nec_cp6",
"?set term nec_cp6",
"?terminal nec_cp6",
"?term nec_cp6",
"?nec_cp6",
"?commands set terminal okidata",
"?set terminal okidata",
"?set term okidata",
"?terminal okidata",
"?term okidata",
"?okidata",
"?commands set terminal starc",
"?set terminal starc",
"?set term starc",
"?terminal starc",
"?term starc",
"?starc",
"?commands set terminal tandy_60dpi",
"?set terminal tandy_60dpi",
"?set term tandy_60dpi",
"?terminal tandy_60dpi",
"?term tandy_60dpi",
"?tandy_60dpi",
"?commands set terminal dpu414",
"?set terminal dpu414",
"?set term dpu414",
"?terminal dpu414",
"?term dpu414",
"?dpu414",
" Note: only available if gnuplot is configured --with-bitmap-terminals.",
" This driver supports a family of Epson printers and derivatives.",
"",
" `epson_180dpi` and `epson_60dpi` are drivers for Epson LQ-style 24-pin",
" printers with resolutions of 180 and 60 dots per inch, respectively.",
"",
" `epson_lx800` is a generic 9-pin driver appropriate for printers like the",
" Epson LX-800, the Star NL-10 and NX-1000, the PROPRINTER, and so forth.",
"",
" `nec_cp6` is generic 24-pin driver that can be used for printers like the",
" NEC CP6 and the Epson LQ-800.",
"",
" The `okidata` driver supports the 9-pin OKIDATA 320/321 Standard printers.",
"",
" The `starc` driver is for the Star Color Printer.",
"",
" The `tandy_60dpi` driver is for the Tandy DMP-130 series of 9-pin, 60-dpi",
" printers.",
"",
" The `dpu414` driver is for the Seiko DPU-414 thermal printer.",
"",
" `nec_cp6` has the options:",
"",
" Syntax:",
"       set terminal nec_cp6 {monochrome | colour | draft}",
"",
" which defaults to monochrome.",
"",
" `dpu414` has the options:",
"",
" Syntax:",
"       set terminal dpu414 {small | medium | large} {normal | draft}",
"",
" which defaults to medium (=font size) and normal.",
" Preferred combinations are `medium normal` and `small draft`.",
#ifdef MSDOS
"",
" With each of these drivers, a binary copy is required on a PC to print.",
" Do not use `print`---use instead `copy file /b lpt1:`.",
#endif
""
#else /* JAPANESE_DOC */
"1 epson_180dpi",
"?commands set terminal epson_180dpi",
"?set terminal epson_180dpi",
"?set term epson_180dpi",
"?terminal epson_180dpi",
"?term epson_180dpi",
"?epson_180dpi",
"?commands set terminal epson_60dpi",
"?set terminal epson_60dpi",
"?set term epson_60dpi",
"?terminal epson_60dpi",
"?term epson_60dpi",
"?epson_60dpi",
"?commands set terminal epson_lx800",
"?set terminal epson_lx800",
"?set term epson_lx800",
"?terminal epson_lx800",
"?term epson_lx800",
"?epson_lx800",
"?commands set terminal nec_cp6",
"?set terminal nec_cp6",
"?set term nec_cp6",
"?terminal nec_cp6",
"?term nec_cp6",
"?nec_cp6",
"?commands set terminal okidata",
"?set terminal okidata",
"?set term okidata",
"?terminal okidata",
"?term okidata",
"?okidata",
"?commands set terminal starc",
"?set terminal starc",
"?set term starc",
"?terminal starc",
"?term starc",
"?starc",
"?commands set terminal tandy_60dpi",
"?set terminal tandy_60dpi",
"?set term tandy_60dpi",
"?terminal tandy_60dpi",
"?term tandy_60dpi",
"?tandy_60dpi",
"?commands set terminal dpu414",
"?set terminal dpu414",
"?set term dpu414",
"?terminal dpu414",
"?term dpu414",
"?dpu414",
" 注意: gnuplot が --with-bitmap-terminals で作られた場合のみ使えます。",
" このドライバはエプソンプリンタのいくつかとそれに類似するものをサポート",
" します。",
"",
" `epson_180dpi` と `epson_60dpi` はそれぞれ 180dpi (ドット/インチ),",
" 60dpi の解像度の Epson LQ 型 24 ピンプリンタ用のドライバです。",
"",
" `epson_lx800` は Epson LX-800, Star の NL-10 や NX-1000, PROPRINTER な",
" どの適当なプリンタに流用できる、一般的な 9 ピンプリンタドライバです。",
"",
" `nec_cp6` は NEC CP6 や Epson LQ-800 などのプリンタで使える、一般的な",
" 24 ピンプリンタ用のドライバです。",
"",
" `okidata` ドライバは 9 ピンの OKIDATA 320/321 標準プリンタをサポートし",
" ます。",
"",
" `starc` ドライバは Star カラープリンタ用です。",
"",
" `tandy_60dpi` ドライバは 9 ピン 60dpi の Tandy DMP-130 シリーズ用です。",
"",
" `dpu414` ドライバは Seiko DPU-414 感熱プリンタ用です。",
"",
" `nec_cp6` にはオプションがあります:",
"",
" 書式:",
"       set terminal nec_cp6 {monochrome | colour | draft}",
"",
" デフォルトでは白黒 (monochrome) です。",
"",
" `dpu414` にはオプションがあります:",
"",
" 書式:",
"       set terminal dpu414 {small | medium | large} {normal | draft}",
"",
" デフォルトは medium (= フォントサイズ) で normal です。",
" おすすめの組み合わせは、`medium normal` か `small draft` です。",
#ifdef MSDOS
"",
" これらのドライバのそれぞれで PC 上で印刷する場合はバイナリコピーが必要",
" です。`print` を使ってはいけません。その代わりに `copy file /b lpt1:`",
" としてください。",
#endif
""
#endif /* JAPANESE_DOC */
END_HELP(epson_180dpi)
START_HELP(fig)
#ifndef JAPANESE_DOC
"1 fig",
"?commands set terminal fig",
"?set terminal fig",
"?set term fig",
"?terminal fig",
"?term fig",
"?fig",
"?xfig",
" The `fig` terminal device generates output in the Fig graphics language",
" for import into the xfig interactive drawing tool.",
" Notes: ",
"       The fig terminal was significantly revised in gnuplot version 5.3.",
"       Currently only version 3.2 of the fig file format is supported.",
"       Use of dash patterns may require Xfig 3.2.6 or newer.",
"",
" Syntax:",
"       set terminal fig {monochrome | color}",
"                        {small | big | size <xsize>{in|cm},<ysize>{in|cm}}",
"                        {landscape | portrait}",
"                        {pointsmax <max_points>}",
"                        {font \"<fontname>{,<fontsize>}\"} {fontsize <size>}",
"                        {textnormal | {textspecial texthidden textrigid}}",
"                        {{linewidth|lw} <multiplier>}",
"",
" The default settings are",
"       set term fig color small landscape font \"Times Roman,10\" lw 1.0",
"",
" `size` sets the size of the drawing area to <xsize>*<ysize> in units of",
" inches (default) or centimeters. The default is `size 5in,3in`.",
" `small` is shorthand for `size 5in,3in` (3in,5in in portrait mode).",
" `big` is shorthand for `size 8in,5in`.",
"",
" `pointsmax` sets the maximum number of vertices in a polyline; longer ",
" polylines will be broken into segments.",
"",
" `font` sets the text font face to <fontname> and its size to <fontsize>",
" points. Choice is limited to the 35 standard PostScript fonts.",
" `textnormal` resets the text flags and selects postscript fonts,",
" `textspecial` sets the text flags for LaTeX specials,",
" `texthidden` sets the hidden flag and `textrigid` the rigid flag.",
"",
" `linewidth` is a multiplier for the linewidth property of all lines.",
"",
" Additional point-plot symbols are also available in the `fig` driver. The",
" symbols can be used through `pointtype` values % 100 above 50, with different",
" fill intensities controlled by <pointtype> % 5 and outlines in black (for",
" <pointtype> % 10 < 5) or in the current color.  Available symbols are",
"         50 - 59:  circles",
"         60 - 69:  squares",
"         70 - 79:  diamonds",
"         80 - 89:  upwards triangles",
"         90 - 99:  downwards triangles",
" The size of these symbols scales with the font size.",
"",
" RGB colors will be replaced with gray unless they have been defined in a",
" linetype prior to plotting or match a known named color or palette value.",
" See `colornames`.",
" E.g.",
"       set linetype 999 lc rgb '#aabbcc'",
"       plot $data with fillecurve fillcolor rgb '#aabbcc'",
""
#else /* JAPANESE_DOC */
"1 fig",
"?commands set terminal fig",
"?set terminal fig",
"?set term fig",
"?terminal fig",
"?term fig",
"?fig",
"?xfig",
" `fig` ドライバは、対話型描画ツール xfig に取り込める Fig グラフィック言",
" 語での出力を生成します。",
" 注意:",
"        fig 出力形式は、gnuplot バージョン 5.3 で大きく改訂されました。",
"        現在は fig ファイル形式バージョン 3.2 のみサポートしています。",
"        点線/破線パターンを利用するには Xfig 3.2.6 以降が必要です。",
"",
" 書式:",
"       set terminal fig {monochrome | color}",
"                        {small | big | size <xsize>{in|cm},<ysize>{in|cm}}",
"                        {landscape | portrait}",
"                        {pointsmax <max_points>}",
"                        {font \"<fontname>{,<fontsize>}\"} {fontsize <size>}",
"                        {textnormal | {textspecial texthidden textrigid}}",
"                        {{linewidth|lw} <multiplier>}",
"",
" デフォルトの設定は、",
"       set term fig color small landscape font \"Times Roman,10\" lw 1.0",
"",
" `size` は描画範囲を <xsize>*<ysize> に、インチ単位 (デフォルト) かセン",
" チ単位で設定 (変更) します。デフォルトは `size 5in,3in` です。",
" `small` は `size 5in,3in` (portrait モードでは 3in,5in) の省略形、",
" `big` は `size 8in,5in` の省略形です。",
"",
" `pointsmax` は、折れ線内の頂点の最大数を設定し、長すぎる折れ線は、分割",
" します。",
" (注意: このオプションは、version 5.2.7 から 5.4.3 にはありませんでした。)",
"",
" `font` は、テキストフォントフェース名を <fontname> に、フォントサイズを",
" <fontsize> ポイントに設定します。その選択は、35 の標準 PostScript フォ",
" ントに限定されています。",
" `textnormal` はテキストフラグをリセットして postscript フォントを選択し、",
" `textspecial` はテキストフラグを LaTeX special に設定し、",
" `texthidden`, `textrigid` はそれぞれ無表示のテキスト、スケーリングされ",
" ないテキスト用のフラグを設定します。",
"",
" `linewidth` は、すべての線に対する linewidth の値への倍率です。",
"",
" `fig` ドライバには `plot` コマンドの `point` スタイルの記号が追加されて",
" います。記号の指定は (`pointtype` の値) % 100 の 50 以上の値が使われ、",
" その塗りつぶしの濃さは <pointtype> % 5 の値で制御し、その輪郭は黒",
" (<pointtype> % 10 < 5 の場合) または現在の色で書かれます。利用可能な記",
" 号は以下の通りです。",
"         50 - 59:  円",
"         60 - 69:  正方形",
"         70 - 79:  ひし形",
"         80 - 89:  上向きの三角形",
"         90 - 99:  下向きの三角形",
" これらの記号の大きさはフォントの大きさで変更できます。",
"",
" RGB 色は、それが描画の前に線種として定義されているものではない場合、ま",
" たは登録されている色名やパレット値に一致しなかった場合は灰色で置き換え",
" られます。以下参照: `colornames`。",
" 例:",
"       set linetype 999 lc rgb '#aabbcc'",
"       plot $data with fillecurve fillcolor rgb '#aabbcc'",
""
#endif /* JAPANESE_DOC */
END_HELP(fig)
START_HELP(gif)
#ifndef JAPANESE_DOC
"1 gif",
"?commands set terminal gif",
"?set terminal gif",
"?set term gif",
"?terminal gif",
"?term gif",
"?gif",
" Syntax:",
"       set terminal gif ",
"              {{no}enhanced}",
"              {{no}transparent} {rounded|butt}",
"              {linewidth <lw>} {dashlength <dl>}",
"              {tiny | small | medium | large | giant}",
"              {font \"<face> {,<pointsize>}\"} {fontscale <scale>}",
"              {size <x>,<y>} {{no}crop}",
"              {background <rgb_color>}",
"              {animate {delay <d>} {loop <n>} {optimize}}",
"",
" PNG, JPEG and GIF images are created using the external library libgd.",
" GIF plots may be viewed interactively by piping the output to the",
" 'display' program from the ImageMagick package as follows:",
"                set term gif",
"                set output '| display gif:-'",
" You can view the output from successive plot commands interactively by typing",
" <space> in the display window.  To save the current plot to a file,",
" left click in the display window and choose `save`.",
"",
" `transparent` instructs the driver to make the background color transparent.",
" Default is `notransparent`.",
"",
" The `linewidth` and `dashlength` options are scaling factors that affect all",
" lines drawn, i.e. they are multiplied by values requested in various drawing",
" commands.",
"",
" `butt` instructs the driver to use a line drawing method that does",
" not overshoot the desired end point of a line.  This setting is only",
" applicable for line widths greater than 1.  This setting is most useful when",
" drawing horizontal or vertical lines.",
"",
" The output plot size <x,y> is given in pixels---it defaults to 640x480.",
" Please see additional information under `canvas` and `set size`.",
" Blank space at the edges of the finished plot may be trimmed using the `crop`",
" option, resulting in a smaller final image size. Default is `nocrop`.",
"",
"2 animate",
"?set term gif animate",
"?term gif animate",
"?gif animate",
"?animate",
"",
"       set term gif animate {delay <d>} {loop <n>} {{no}optimize}}",
"",
" The gif terminal `animate` option creates a single gif file containing",
" multiple frames. The delay between display of successive frames may be",
" specified in units of 1/100 second (default 5), but this value may or may",
" not be honored accurately by a program used to view the animation later.",
" The number of animation loops during playback can be specified, with the",
" default of 0 meaning unlimited looping. Again this value may or may not be",
" honored by the program later used for viewing.",
" An animation sequence is terminated by the next `set output` or `set term`",
" command.",
"",
" Example showing continuous rotation:",
"      set term gif animate loop 0",
"      set output 'rotating_surface.gif'",
"      do for [ang=1:359] {",
"          set view 60, ang",
"          splot f(x,y) with pm3d",
"      }",
"      unset output",
"",
"3 optimize",
"?set term gif animate optimize",
"?gif animate optimize",
"      set term gif animate optimize",
"",
" The `optimize` option [DEPRECATED] is passed to the gd library when the",
" output file is opened. It has two effects on the animation.",
"",
" 1) A single color map is used for the entire animation. This requires",
" that all colors used in any frame of the animation are already",
" defined in the first frame.",
"",
" 2) If possible, only the portions of a frame that differ from the",
" previous frame are stored in the animation file.  This space saving",
" may not be possible if the animation uses transparency.",
"",
" Both of these optimizations are intended to produce a smaller output file,",
" but the decrease in size is probably only significant for long animations.",
" Caveat: The implementation of optimization in libgd is known to be buggy.",
" Therefore use of this option in gnuplot is not recommended.",
"",
"2 fonts",
"?set term gif fonts",
"",
" The details of font selection are complicated.",
" For more information please see the separate section under `fonts gd`.",
"",
" Examples:",
"",
"       set terminal gif medium noenhanced size 640,480 background '#ffffff'",
"",
" Use the medium size built-in non-scaleable, non-rotatable font.",
" Enhanced text mode will not work with this font.",
" Use white (24 bit RGB in hexadecimal) for the non-transparent background.",
"",
"       set terminal gif font arial 14",
"",
" Searches for a font with face name 'arial' and sets the font size to 14pt.",
""
#else /* JAPANESE_DOC */
"1 gif",
"?commands set terminal gif",
"?set terminal gif",
"?set term gif",
"?terminal gif",
"?term gif",
"?gif",
" 書式:",
"       set terminal gif ",
"              {{no}enhanced}",
"              {{no}transparent} {rounded|butt}",
"              {linewidth <lw>} {dashlength <dl>}",
"              {tiny | small | medium | large | giant}",
"              {font \"<face> {,<pointsize>}\"} {fontscale <scale>}",
"              {size <x>,<y>} {{no}crop}",
"              {background <rgb_color>}",
"              {animate {delay <d>} {loop <n>} {optimize}}",
"",
" PNG, JPEG, GIF 画像は、外部ライブラリ libgd を使って生成されます。GIF",
" の描画は、ImageMagick パッケージのソフト 'display' にその出力を以下の",
" ようにパイプで渡すことで対話的に表示させることができます:",
"                set term gif",
"                set output '| display gif:-'",
" 次の描画コマンドからの出力は、display ウィンドウ上で対話的に <space>",
" を打つことで見ることができます。現在の描画をファイルに保存するには、",
" display ウィンドウで左クリックし、`save` を選択してください。",
"",
" `transparent` は、ドライバに背景色の透明化 (transparent) を行うよう指",
" 示します。デフォルトは `notransparent` です。",
"",
" オプション `linewidth` と `dashlength` は拡大率で、描画されるすべての",
" 線に影響を与えます。すなわち、これらは様々な描画コマンドで要求される値",
" にかけ算されます。",
"",
" `butt` は線分の描画で、その端の点でのはみだしを起こさない描画メソッド",
" を使うようドライバに指示します。この設定は、線幅が 1 より大きい場合に",
" のみ有効です。この設定は、水平線、垂直線の描画の場合に有用でしょう。",
"",
" 出力描画サイズ <x,y> はピクセル単位で与えます。デフォルトは 640x480 で",
" す。以下も参照: `canvas`, `set size`。",
" 描画終了後の端の余白は、オプション `crop` で取り除くことができ、その結",
" 果としてその画像サイズは小さくなります。デフォルトは `nocrop` です。",
"",
"2 animate",
"?set term gif animate",
"?term gif animate",
"?gif animate",
"?animate",
"",
"       set term gif animate {delay <d>} {loop <n>} {{no}optimize}}",
"",
" gif 出力形式のオプション `animate` は、複数のフレームからなる単一の gif",
" ファイルを生成します。各画像間の表示間隔は 1/100 秒単位で指定できます",
" が (デフォルトは 5)、、後でそのアニメーションを見るのに使うプロ",
" グラムが正確に再現するかもしれませんし、しないかもしれません。",
" アニメーションの繰り返し回数も指定できますが、デフォルトは 0 で、それは",
" 無限の繰り返しを意味します。改めて言いますが、この値もそれを見るのに使",
" うプログラムが正確に再現するかもしれませんし、しないかもしれません。",
" アニメーション画像列は、次の `set output` か `set term` コマンドによっ",
" て終了します。",
"",
" 連続する回転を表示する例:",
"      set term gif animate loop 0",
"      set output 'rotating_surface.gif'",
"      do for [ang=1:359] {",
"          set view 60, ang",
"          splot f(x,y) with pm3d",
"      }",
"      unset output",
"",
"3 optimize",
"?set term gif animate optimize",
"?gif animate optimize",
"      set term gif animate optimize",
"",
" [非推奨] オプション `optimize` は、出力ファイルを開くときに gd ライブラ",
" リに渡します。これは、アニメーションに 2 つの効果を持ちます。",
"",
" 1) アニメーション全体を通じて単一のカラーマップが使用されます。これは",
" アニメーションの全てのフレームで使用される全ての色が最初のフレームで",
" 定義されている必要があります。",
"",
" 2) 可能ならば、個々のフレームで一つ前のフレームと違う部分のみがアニメ",
" ーションファイルに保存されます。これはファイルサイズを小さくしてくれ",
" ますが、透明化機能を使用している場合には働かないかもしれません。",
"",
" これら両方の最適化はより小さいサイズの出力ファイルを作ろうとするもので",
" すが、多分その減少量は、長いアニメーションのみ意味がある程度でしょう。",
" 警告: libgd の最適化の実装はおかしいことが知られていますので、gnuplot",
" でこのオプションを使用することは推奨しません。",
"",
"2 fonts",
"?set term gif fonts",
"",
" フォントの選択の詳細は、やや複雑です。",
" より詳しい情報については、`fonts gd` の下の該当するセクションを参照して",
" ください。",
"",
" 例:",
"",
"       set terminal gif medium noenhanced size 640,480 background '#ffffff'",
"",
" この例は medium サイズの、大きさ変更不能で回転できない組み込みフォント",
" を使用します。拡張文字処理 (enhanced text) モードは、このフォントでは機",
" 能しません。そして、透明化されない背景色として白 (16 進数の 24bit RGB)",
" を使用します。",
"",
"       set terminal gif font arial 14",
"",
" これは、'arial' というフェース名のフォントを検索し、フォントサイズを",
" 14pt に設定します。",
""
#endif /* JAPANESE_DOC */
END_HELP(gif)
START_HELP(gpic)
#ifndef JAPANESE_DOC
"1 gpic",
"?commands set terminal gpic",
"?set terminal gpic",
"?set term gpic",
"?terminal gpic",
"?term gpic",
"?gpic",
" Note: Legacy terminal (present only if gnuplot was configured --with-gpic).",
" The `gpic` terminal driver generates GPIC graphs in the Free Software",
" Foundations's \"groff\" package.  The default size is 5 x 3 inches.  The only",
" option is the origin, which defaults to (0,0).",
"",
" Syntax:",
"       set terminal gpic {<x> <y>}",
"",
" where `x` and `y` are in inches.",
"",
" A simple graph can be formatted using",
"",
"       groff -p -mpic -Tps file.pic > file.ps.",
"",
" The output from pic can be pipe-lined into eqn, so it is possible to put",
" complex functions in a graph with the `set label` and `set {x/y}label`",
" commands.  For instance,",
"",
"       set ylab '@space 0 int from 0 to x alpha ( t ) roman d t@'",
"",
" will label the y axis with a nice integral if formatted with the command:",
"",
"       gpic filename.pic | geqn -d@@ -Tps | groff -m[macro-package] -Tps",
"           > filename.ps",
"",
" Figures made this way can be scaled to fit into a document.  The pic language",
" is easy to understand, so the graphs can be edited by hand if need be.  All",
" co-ordinates in the pic-file produced by `gnuplot` are given as x+gnuplotx",
" and y+gnuploty.  By default x and y are given the value 0.  If this line is",
" removed with an editor in a number of files, one can put several graphs in",
" one figure like this (default size is 5.0x3.0 inches):",
"",
"       .PS 8.0",
"       x=0;y=3",
"       copy \"figa.pic\"",
"       x=5;y=3",
"       copy \"figb.pic\"",
"       x=0;y=0",
"       copy \"figc.pic\"",
"       x=5;y=0",
"       copy \"figd.pic\"",
"       .PE",
"",
" This will produce an 8-inch-wide figure with four graphs in two rows on top",
" of each other.",
"",
" One can also achieve the same thing by specifying x and y in the command",
"",
"       set terminal gpic x y",
""
#else /* JAPANESE_DOC */
"1 gpic",
"?commands set terminal gpic",
"?set terminal gpic",
"?set term gpic",
"?terminal gpic",
"?term gpic",
"?gpic",
" 注意: 古い (legacy) 出力形式 (configure で --with-gpic としたときのみ)。",
" `gpic` ドライバは FSF (the Free Software Foundations) の \"groff\" パッ",
" ケージの中の GPIC 形式のグラフを生成します。デフォルトの大きさは 5 x 3",
" インチです。オプションは原点に関するもののみで、デフォルトでは (0,0)",
" です。",
"",
" 書式:",
"       set terminal gpic {<x> <y>}",
"",
" ここで `x` と `y` の単位はインチです。",
"",
" 単純なグラフを整形するには以下のようにします。",
"",
"       groff -p -mpic -Tps file.pic > file.ps",
"",
" pic からの出力はパイプで eqn に渡すこともできるので、'set label' と",
" `set {x/y}label` コマンドでグラフに複雑な関数の式を入れることも可能で",
" す。例えば、",
"",
"       set ylab '@space 0 int from 0 to x alpha ( t ) roman d t@'",
"",
" とすれば、以下のコマンドによって y 軸に綺麗な積分が見出し付けされます。",
"",
"       gpic filename.pic | geqn -d@@ -Tps | groff -m[macro-package] -Tps",
"           > filename.ps",
"",
" このようにして作られた図は文書に綺麗に当てはまるように伸縮することがで",
" きます。pic 言語は簡単に理解できるので、必要なら容易にグラフを直接編集",
" できます。`gnuplot` で作られる pic ファイルの全ての座標は x+gnuplotx,",
" y+gnuploty の形で与えられます。デフォルトでは x, y の値は 0 です。いく",
" つかのファイルに対してその x,y を 0 と設定している行を削除すれば、以下",
" のようにして複数のグラフを一つの図の中に入れてしまうこともできます (デ",
" フォルトの大きさは 5.0x3.0 インチ):",
"",
"       .PS 8.0",
"       x=0;y=3",
"       copy \"figa.pic\"",
"       x=5;y=3",
"       copy \"figb.pic\"",
"       x=0;y=0",
"       copy \"figc.pic\"",
"       x=5;y=0",
"       copy \"figd.pic\"",
"       .PE",
"",
" これは、横に 2 つ、縦に 2 つずつ並んだ 4 つのグラフからなる、8 インチ",
" の広さの図を生成します。",
"",
" 以下のように x, y を指定することでも同じことができます。",
"",
"       set terminal gpic x y",
""
#endif /* JAPANESE_DOC */
END_HELP(gpic)
START_HELP(grass)
#ifndef JAPANESE_DOC
"1 grass",
"?commands set terminal grass",
"?set terminal grass",
"?set term grass",
"?terminal grass",
"?term grass",
"?grass",
" Note: legacy terminal.",
" The `grass` terminal driver gives `gnuplot` capabilities to users of the ",
" GRASS geographic information system.  Contact grassp-list@moon.cecer.army.mil",
" for more information.  Pages are written to the current frame of the GRASS",
" Graphics Window.  There are no options."
#else /* JAPANESE_DOC */
"1 grass",
"?commands set terminal grass",
"?set terminal grass",
"?set term grass",
"?terminal grass",
"?term grass",
"?grass",
" 注意: 古い (legacy) 出力形式です。",
" `grass` ドライバは GRASS 地理情報システムのユーザが `gnuplot` を利用す",
" ることを可能にします。詳しい情報については grassp-list@moon.cecer.army.mil",
" に連絡を取ってください。ページは GRASS グラフウィンドウの現在のフレー",
" ムに書かれます。オプションはありません。"
#endif /* JAPANESE_DOC */
END_HELP(grass)
START_HELP(hpgeneric)
#ifndef JAPANESE_DOC
"1 HP terminals",
" Gnuplot provides two generic terminals for old Hewlett-Packard pen plotters",
" and printers. The HPGL printer control language was introduced in 1974 and is",
" recognized by many plotters and printers from that era. See `set term hpgl`.",
" The PCL5 printer control language was introduced in 1990 and became standard",
" for many devices by HP and others.  See `set term pcl5`.",
" Both of these terminals are included in gnuplot by default.",
"",
" There are also legacy terminals to support specific plotters (hp26 hp2648),",
" inkjet printers (hp500c), and early laserjet printers (hplj hpljii).",
" These are not included unless you modify the source code file `term.h`.",
""
#else /* JAPANESE_DOC */
"1 HP terminals",
" gnuplot は、Hewlett-Packard 社の古いペンプロッタやプリンタ用に 2 つの包",
" 括的な出力形式を提供します。HPGL プリンタ制御言語は 1974 年に導入され、",
" 以後多くのプロッタ、プリンタが認識します。以下参照: `set term hpgl`。",
" PCL5 プリンタ制御言語は 1990 年に導入され、HP や他の多くのデバイスの標",
" 準になりました。以下参照: `set term pcl5`。",
" この 2 つの出力形式は、gnuplot にデフォルトで入っています。",
"",
" 特定のプリンタ (hp26 hp2648), インクジェットプリンタ群 (hp500c)、初期の",
" レーザープリンタ (hplj hpljii) をサポートする古い出力形式もありますが、",
" それらはソースコードファイル `term.h` を修正しなければ使えません。",
""
#endif /* JAPANESE_DOC */
END_HELP(hpgeneric)
START_HELP(hpgl)
#ifndef JAPANESE_DOC
"1 hpgl",
"?commands set terminal hpgl",
"?set terminal hpgl",
"?set term hpgl",
"?terminal hpgl",
"?term hpgl",
"?hpgl",
" Syntax:",
"       set terminal hpgl {<number_of_pens>} {eject} {fontscale <scale>}",
"",
" The `hpgl` driver produces HPGL output for Hewlett Packard pen plotters",
" like the HP7475A and many other plotters dating back to the 1970s.",
" Also, HPGL graphics can be imported by many software packages.",
" The HPGL command language was largely superseded in later printers by the",
" PCL command language.  See `set term pcl5`.",
"",
" Terminal options control the number of pens used and whether or not the",
" plotter ejects a page when done. The default is to use 6 pens and",
" not eject the page.",
"",
" All text is drawn in a uniform size. The `fontscale` option applies",
" a scale factor to make this size larger or smaller.",
" If gnuplot's current encoding is set to either iso_8859_1 cp850,",
" non-ascii characters are translated for handling by some printer models",
" that support the corresponding character set.  If your printer model",
" does not support this, do not set these encodings.",
""
#else /* JAPANESE_DOC */
"1 hpgl",
"?commands set terminal hpgl",
"?set terminal hpgl",
"?set term hpgl",
"?terminal hpgl",
"?term hpgl",
"?hpgl",
" 書式:",
"       set terminal hpgl {<number_of_pens>} {eject} {fontscale <scale>}",
"",
" `hpgl` ドライバは、1970 年代以降の HP7475A や多くの他のプロッタのような",
" Hewlett Packard 社製のペンプロッタ用の HPGL 出力を行ないます。",
" HPGL グラフィックデータは、多くのソフトウェアで取り込むこともできます。",
" HPGL コマンド言語は、その後のプリンタでは広く PCL コマンド言語に置き換",
" えられました。以下参照: `set term pcl5`。",
"",
" terminal オプションは、使用するペンの数と、終了時にプロッタにページを排",
" 出 (eject) させるかどうかを制御します。デフォルトでは、6 つのペンを使",
" い、描画後のページの排出は行ないません。",
"",
" すべての文字は一様なサイズで描画されます。オプション `fontscale` はこの",
" サイズを大きく、または小さくするための積因子です。",
" gnuplot の現在のエンコーディングが iso_8859_1 か cp850 のいずれかにセッ",
" トされていれば、非アスキー文字を、対応する文字セットをサポートするいく",
" つかのプリンタモデルで処理することで変換することができます。あなたのプ",
" リンタモデルがこれをサポートしていなければ、これらのエンコーディングは",
" セットできません。",
""
#endif /* JAPANESE_DOC */
END_HELP(hpgl)
START_HELP(imagen)
#ifndef JAPANESE_DOC
"1 imagen",
"?commands set terminal imagen",
"?set terminal imagen",
"?set term imagen",
"?terminal imagen",
"?term imagen",
"?imagen",
" The `imagen` terminal driver supports Imagen laser printers.  It is capable",
" of placing multiple graphs on a single page.",
"",
" Syntax:",
"       set terminal imagen {<fontsize>} {portrait | landscape}",
"                           {[<horiz>,<vert>]}",
"",
" where `fontsize` defaults to 12 points and the layout defaults to `landscape`.",
" `<horiz>` and `<vert>` are the number of graphs in the horizontal and",
" vertical directions; these default to unity.",
"",
" Example:",
"       set terminal imagen portrait [2,3]",
"",
" puts six graphs on the page in three rows of two in portrait orientation."
#else /* JAPANESE_DOC */
"1 imagen",
"?commands set terminal imagen",
"?set terminal imagen",
"?set term imagen",
"?terminal imagen",
"?term imagen",
"?imagen",
" `imagen` ドライバは Imagen レーザプリンタをサポートします。これは 1 ペ",
" ージに複数のグラフを配置することも可能です。",
"",
" 書式:",
"       set terminal imagen {<fontsize>} {portrait | landscape}",
"                           {[<horiz>,<vert>]}",
"",
" `fontsize` はデフォルトでは 12 ポイントで、レイアウトのデフォルトは",
" `landscape` です。`<horiz>` と `<vert>` はグラフを横方向と縦方向に何列",
" 置くかを指定します。これらのデフォルトは 1 です。",
"",
" 例:",
"       set terminal imagen portrait [2,3]",
"",
" これは、1 ページに 6 つのグラフを横に 2 列、縦に 3 列、縦置き (portrait)",
" で配置します。"
#endif /* JAPANESE_DOC */
END_HELP(imagen)
START_HELP(jpeg)
#ifndef JAPANESE_DOC
"1 jpeg",
"?commands set terminal jpeg",
"?set terminal jpeg",
"?set term jpeg",
"?terminal jpeg",
"?term jpeg",
"?jpeg",
" Syntax:",
"       set terminal jpeg ",
"              {{no}enhanced}",
"              {{no}interlace}",
"              {linewidth <lw>} {dashlength <dl>} {rounded|butt}",
"              {tiny | small | medium | large | giant}",
"              {font \"<face> {,<pointsize>}\"} {fontscale <scale>}",
"              {size <x>,<y>} {{no}crop}",
"              {background <rgb_color>}",
"",
" PNG, JPEG and GIF images are created using the external library libgd.",
" In most cases, PNG is to be preferred for single plots, and GIF for",
" animations.  Both are loss-less image formats, and produce better image",
" quality than the lossy JPEG format. This is in particular noticeable",
" for solid color lines against a solid background, i.e. exactly the sort",
" of image typically created by gnuplot.",
"",
" The `interlace` option creates a progressive JPEG image.",
" Default is `nointerlace`.",
"",
" The `linewidth` and `dashlength` options are scaling factors that affect all",
" lines drawn, i.e. they are multiplied by values requested in various drawing",
" commands.",
"",
" `butt` instructs the driver to use a line drawing method that does",
" not overshoot the desired end point of a line.  This setting is only",
" relevant for line widths greater than 1. The alternative is `rounded`.",
"",
" The details of font selection are complicated.",
" Two equivalent simple examples are given below:",
"      set term jpeg font arial 11",
"      set term jpeg font \"arial,11\"",
" For more information please see the separate section under `fonts`.",
"",
" The output plot size <x,y> is given in pixels---it defaults to 640x480.",
" Please see additional information under `canvas` and `set size`.",
" Blank space at the edges of the finished plot may be trimmed using the `crop`",
" option, resulting in a smaller final image size. Default is `nocrop`.",
""
#else /* JAPANESE_DOC */
"1 jpeg",
"?commands set terminal jpeg",
"?set terminal jpeg",
"?set term jpeg",
"?terminal jpeg",
"?term jpeg",
"?jpeg",
" 書式:",
"       set terminal jpeg ",
"              {{no}enhanced}",
"              {{no}interlace}",
"              {linewidth <lw>} {dashlength <dl>} {rounded|butt}",
"              {tiny | small | medium | large | giant}",
"              {font \"<face> {,<pointsize>}\"} {fontscale <scale>}",
"              {size <x>,<y>} {{no}crop}",
"              {background <rgb_color>}",
"",
" PNG, JPEG, GIF 画像は、外部ライブラリ libgd を使って生成されます。大抵",
" の場合、単一の描画なら PNG の方が向いていて、GIF はアニメーション用で",
" す。それらは損失の少ない画像形式で、損失のある JPEG 形式よりも上質の画",
" 像を生成します。これは、特にベタ塗り潰した背景でのカラーの実線、つまり",
" まさに gnuplot が生成する典型的な画像に対しては注意すべきことです。",
"",
" オプション `interlace` は、プログレッシブ JPEG 画像を生成します。デフ",
" ォルトは `nointerlace` です。",
"",
" オプション `linewidth` と `dashlength` は拡大率で、描画されるすべての",
" 線に影響を与えます。すなわち、これらは様々な描画コマンドで要求される値",
" にかけ算されます。",
"",
" `butt` は線分の描画で、その端の点でのはみだしを起こさない描画メソッド",
" を使うようドライバに指示します。この設定は、線幅が 1 より大きい場合に",
" のみ意味があります。この逆は `rounded` です。",
"",
" フォントの選択の詳細は、やや複雑です。",
" 以下に同じ意味を持つ簡単な例を示します:",
"      set term jpeg font arial 11",
"      set term jpeg font \"arial,11\"",
" より詳しい情報については、`fonts` の下の該当するセクションを参照してく",
" ださい。",
"",
" 出力描画サイズ <x,y> はピクセル単位で与えます。デフォルトは 640x480 で",
" す。以下も参照: `canvas`, `set size`。",
" 描画終了後の端の余白は、オプション `crop` で取り除くことができ、その結",
" 果としてその画像サイズは小さくなります。デフォルトは `nocrop` です。",
""
#endif /* JAPANESE_DOC */
END_HELP(jpeg)
START_HELP(latex)
#ifndef JAPANESE_DOC
"1 latex",
"?set terminal latex",
"?set term latex",
"?terminal latex",
"?term latex",
"?latex",
"?set terminal emtex",
"?set terminal eepic",
"?set terminal tpic",
"?set term emtex",
"?set term eepic",
"?set term tpic",
"?terminal emtex",
"?terminal eepic",
"?terminal tpic",
"?emtex",
"?eepic",
"?tpic",
" Gnuplot provides a variety of terminals for use with TeX/LaTeX.",
"",
" (1) TeX/LaTeX compatible terminals based on use of PostScript",
" See  `epslatex`, `pslatex`, and `pstricks`.",
"",
" (2) TeX/LaTeX compatible terminals based on cairo graphics",
" See `cairolatex`.",
"",
" (3) The `tikz` terminal uses an external lua script (see `lua`)",
" to produce files for the PGF and TikZ packages.",
" Use the command `set term tikz help` to print terminal options.",
"",
" (4) The `pict2e` terminal (added in version 5.4) replaces a set of legacy",
" terminals `latex`, `emtex`, `eepic`, and `tpic` present in older versions",
" of gnuplot. See `pict2e`.",
"",
" (5) Others, see `context` and legacy terminal `texdraw`.",
"",
" A summary of TeX-friendly terminals is available here:",
"^ <a href=\"http://www.gnuplot.info/docs/latex_demo.pdf\">",
"           http://www.gnuplot.info/docs/latex_demo.pdf",
"^ </a>",
""
#else /* JAPANESE_DOC */
"1 latex",
"?set terminal latex",
"?set term latex",
"?terminal latex",
"?term latex",
"?latex",
"?set terminal emtex",
"?set terminal eepic",
"?set terminal tpic",
"?set term emtex",
"?set term eepic",
"?set term tpic",
"?terminal emtex",
"?terminal eepic",
"?terminal tpic",
"?emtex",
"?eepic",
"?tpic",
" gnuplot は、TeX/LaTeX での利用のための様々な出力形式を提供しています。",
"",
" (1) PostScript の使用に基づく TeX/LaTeX 互換の出力形式",
" 以下参照: `epslatex`, `pslatex`, `pstricks`。",
"",
" (2) cairo グラフィックに基づく TeX/LaTeX 互換の出力形式",
" 以下参照: `cairolatex`。",
"",
" (3) `tikz` 出力形式は、外部 lua スクリプト (以下参照: `lua`) を用いて",
" PGF と TikZ パッケージ用のファイルを生成します。",
" 出力形式オプションを見るには、`set term tikz help` としてください。",
"",
" (4) `pict2e` 出力形式 (バージョン 5.4 で追加) は昔の gnuplot の古い出",
" 力形式 `latex`, `emtex`, `eepic`, `tpic` に置き換わるものです。以下",
" 参照: `pict2e`。",
"",
" (5) その他は、以下参照: `context`。および古い出力形式 texdraw、mp",
" (metapost)。",
"",
" TeX 系出力形式に関する要約が以下にあります:",
"^ <a href=\"http://www.gnuplot.info/docs/latex_demo.pdf\">",
"           http://www.gnuplot.info/docs/latex_demo.pdf",
"^ </a>",
""
#endif /* JAPANESE_DOC */
END_HELP(latex)
START_HELP(linux)
#ifndef JAPANESE_DOC
"1 linux console",
"?set terminal linux",
"?set terminal vgagl",
"?linux console",
"?console",
"=linux console",
"=console",
"=sixel",
"=vgagl (linux console)",
"=yaft",
" Older gnuplot versions required special terminals `linux` or `vgagl`",
" in order to display graphics on the linux console, i.e. in the absence of",
" X11 or other windowing environment.  These terminals have been deprecated.",
"",
" The recommended way to run gnuplot from the linux console is now to use a",
" console terminal emulator such as yaft (https://github.com/uobikiemukot/yaft)",
" that supports sixel graphics.  With yaft as your console terminal you can",
" run gnuplot and select a terminal with sixel output. See `sixelgd`.",
" As a fall-back option you could use `set term dumb`, but sixel graphics",
" are much nicer."
#else /* JAPANESE_DOC */
"1 linux cosole",
"?set terminal linux",
"?set terminal vgagl",
"?linux console",
"?console",
"=linux console",
"=console",
"=sixel",
"=vgagl (linux console)",
"=yaft",
" 古いバージョンの gnuplot では、linux コンソール上、すなわち X11 がない",
" か、または他のウィンドウ環境でグラフィックスを表示するためには `linux`",
" か `vgagl` の特別な出力形式が必要でしたが、これらの出力形式は既に廃棄さ",
" れています。",
"",
" 現在、gnuplot を linux コンソールで実行するための推奨する方法は、sixel",
" グラフィックをサポートする yaft (https://github.com/uobikiemukot/yaft)",
" のようなコンソールターミナルエミュレータを使うことです。yaft をコンソー",
" ルターミナルとして使用すれば、gnuplot を実行し、sixel 出力を行う出力形",
" 式を選択できます。以下参照: `sixelgd`。",
" 最終的な選択肢として、`set term dumb` を使用することも可能ですが、sixel",
" グラフィックスの方がはるかにいいでしょう。"
#endif /* JAPANESE_DOC */
END_HELP(linux)
START_HELP(lua)
#ifndef JAPANESE_DOC
"1 lua",
"?commands set terminal lua",
"?set terminal lua",
"?set term lua",
"?terminal lua",
"?term lua",
"?lua",
" The `lua` generic terminal driver works in conjunction with an",
" external Lua script to create a target-specific plot file.",
" Currently the only supported target is TikZ -> pdflatex.",
"",
" Information about Lua is available at http://www.lua.org .",
"",
" Syntax:",
"    set terminal lua <target name> | \"<file name>\"",
"                        {<script_args> ...}",
"                        {help}",
"",
" A 'target name' or 'file name' (in quotes) for a script is mandatory.",
" If a 'target name' for the script is given, the terminal will look for",
" \"gnuplot-<target name>.lua\" in the local directory and on failure in",
" the environmental variable GNUPLOT_LUA_DIR.",
"",
" All arguments will be provided to the selected script for further",
" evaluation. E.g. 'set term lua tikz help' will cause the script itself",
" to print additional help on options and choices for the script.",
#else /* JAPANESE_DOC */
"1 lua",
"?commands set terminal lua",
"?set terminal lua",
"?set term lua",
"?terminal lua",
"?term lua",
"?lua",
" この `lua` 出力ドライバは、対象先指定描画ファイルを作成するための、外",
" 部 Lua スクリプトとの組み合わせで機能します。現在サポートしている対象",
" は、TikZ -> pdflatex のみです。",
"",
" Lua に関する情報は、http://www.lua.org で参照できます。",
"",
" 書式:",
"    set terminal lua <target name> | \"<file name>\"",
"                        {<script_args> ...}",
"                        {help}",
"",
" スクリプト用に 'target name'、または引用符付きの 'file name' が必須で",
" す。スクリプトの 'target name' を与えた場合は、この出力形式は、",
" \"gnuplot-<target name>.lua\" をまずローカルディレクトリで探し、それに",
" 失敗すると環境変数 GNUPLOT_LUA_DIR を探します。",
"",
" その他のすべての引数は、選択したスクリプトに評価させるように与えられま",
" す。例えば、'set term lua tikz help' は、スクリプトそれ自身に、スクリ",
" プト用のオプションと選択に関する追加のヘルプを表示させます。",
#endif
#ifdef HAVE_LUA
#ifndef JAPANESE_DOC
#include "gnuplot-tikz.help"


#endif
#endif
""
END_HELP(lua)
START_HELP(pbm)
#ifndef JAPANESE_DOC
"1 pbm",
"?commands set terminal pbm",
"?set terminal pbm",
"?set term pbm",
"?terminal pbm",
"?term pbm",
"?pbm",
" Note: only available if gnuplot is configured --with-bitmap-terminals.",
" Syntax:",
"       set terminal pbm {<fontsize>} {<mode>} {size <x>,<y>}",
"",
" where <fontsize> is `small`, `medium`, or `large` and <mode> is `monochrome`,",
" `gray` or `color`.  The default plot size is 640 pixels wide and 480 pixels",
" high. The output size is white-space padded to the nearest multiple of",
" 8 pixels on both x and y. This empty space may be cropped later if needed.",
"",
" The output of the `pbm` driver depends upon <mode>: `monochrome` produces a",
" portable bitmap (one bit per pixel), `gray` a portable graymap (three bits",
" per pixel) and `color` a portable pixmap (color, four bits per pixel).",
"",
" The output of this driver can be used with various image conversion and",
" manipulation utilities provided by NETPBM.  Based on Jef Poskanzer's",
" PBMPLUS package, NETPBM provides programs to convert the above PBM formats",
" to GIF, TIFF, MacPaint, Macintosh PICT, PCX, X11 bitmap and many others.",
" Complete information is available at http://netpbm.sourceforge.net/.",
"",
" Examples:",
"       set terminal pbm small monochrome                # defaults",
"       set terminal pbm color medium size 800,600",
"       set output '| pnmrotate 45 | pnmtopng > tilted.png'  # uses NETPBM"
#else /* JAPANESE_DOC */
"1 pbm",
"?commands set terminal pbm",
"?set terminal pbm",
"?set term pbm",
"?terminal pbm",
"?term pbm",
"?pbm",
" 注意: gnuplot が --with-bitmap-terminals で作られた場合のみ使えます。",
" 書式:",
"       set terminal pbm {<fontsize>} {<mode>} {size <x>,<y>}",
"",
" <fontsize> は `small` か `medium` か `large` で、<mode> は `monochrome`",
" か `gray` か `color` です。デフォルトの描画サイズは 640 ピクセルの幅で",
" 480 ピクセルの高さです。出力サイズは、x と y の両方を 8 ピクセル倍した",
" ものに最も近くなるように空白が追加されます。必要であれば、この空白部分",
" は後で取り除くことができます。",
"",
" `pbm` ドライバの出力は <mode> によります: `monochrome` は portable",
" bitmap (PBM; 1 ピクセル 1 ビット) を、`gray` は portable graymap (PGM;",
" 1 ピクセル 3 bit) を、`color` は portable pixmap (PPM; 1 ピクセル 4 ビ",
" ット) を出力します。",
"",
" このドライバの出力は、NETPBM によって提供される様々な画像変換、画像処",
" 理ツールで使うことができます。 Jef Poskanzer の PBMPLUS パッケージに基",
" づく NETPBM は、上記の PBM 形式から GIF, TIFF, MacPaint, Macintosh",
" PICT, PCX, X11 ビットマップ、その他多くの形式に変換するプログラムを提",
" 供します。完全な情報は http://netpbm.sourceforge.net/ にあります。",
"",
" 例:",
"       set terminal pbm small monochrome                # デフォルト",
"       set terminal pbm color medium size 800,600",
"       set output '| pnmrotate 45 | pnmtopng > tilted.png'  # NETPBM を利用"
#endif /* JAPANESE_DOC */
END_HELP(pbm)
START_HELP(pcl5)
#ifndef JAPANESE_DOC
"1 pcl5",
"?commands set terminal pcl5",
"?set terminal pcl5",
"?set term pcl5",
"?terminal pcl5",
"?term pcl5",
"?pcl5",
" The `pcl5` driver supports Hewlett Packard and other printers from the 1990s",
" and later.",
"",
" Syntax:",
"       set terminal pcl5 {<mode>} {{no}enhanced}",
"           {size <plotsize> | size <width>{unit},<height>{unit}}",
"           {font \"<fontname>,<size>\"} {pspoints | nopspoints}",
"           {fontscale <scale>} {pointsize <scale>} {linewidth <scale}",
"           {rounded|butt} {color <number_of_pens>}",
"",
" <mode> is `landscape` or `portrait`. <plotsize> is the physical",
" plotting size of the plot, which can be one of the following formats: `letter`",
" for standard (8 1/2\" X 11\") displays, `legal` for (8 1/2\" X 14\") displays,",
" `noextended` for (36\" X 48\") displays (a letter size ratio),",
" `extended` for (36\" X 55\") displays (almost a legal size ratio), or",
" `a4` for (296mm X 210mm) displays.  You can also explicitly specify the canvas",
" size using the `width` and `height` options. Default unit is `in`.",
" Default size is `letter`.",
"",
" <fontname> can be one of stick, univers (default), albertus, antique_olive,",
" arial, avant_garde_gothic, bookman, zapf_chancery, clarendon, coronet, courier",
" courier_ps, cg_times, garamond_antigua, helvetica, helvetica_narrow,",
" letter_gothic, marigold, new_century_schlbk, cg_omega, palatino, times_new_roman,",
" times_roman, zapf_dingbats, truetype_symbols, or wingdings.  Font names are",
" case-insensitive and underscores may be replaced by spaces or dashes or may be",
" left out.  <fontsize> is the font size in points.",
"",
" The point type selection can be the a limited default set by specifying",
" `nopspoints`, or the same set of point types as provided by the postscript terminal",
" by specifying `pspoints` (default).",
"",
" The `butt` option selects lines with butt ends and mitered joins (default),",
" whereas `rounded` selects rounded line ends and joins.",
"",
" Line widths, and point and font sizes can be scaled using the `linewidth`,",
" `pointscale`, or `fontscale` options, respectively.",
"",
" `color` selects the number of pens <number_of_pens> used in plots.",
" Default is 8, minimum 2.",
"",
" Note that built-in support of some of these options is printer device",
" dependent. For instance, all the fonts are supposedly supported by the HP",
" Laserjet IV, but only a few (e.g. univers, stick) may be supported by the HP",
" Laserjet III and the Designjet 750C. Also, color obviously won't work on",
" monochrome devices, but newer ones will do grey-scale.",
"",
" Defaults: landscape, a4, 8 pens, univers, 12 point, pspoints, butt, no scaling",
"",
" The `pcl5` terminal will try to request fonts which match your `encoding`.",
" Note that this has highest priority, so you might end up with a different",
" font face.  The terminal's default `encoding` is `HP Roman-8`.",
"",
" Limitations:",
"",
" This terminal does not support alpha transparency. Transparent filling is",
" emulated using shading patterns. Boxed text is not implemented.",
"",
" The support for UTF-8 is limited.  Lacking the label mode for UTF-8 output",
" in HP-GL/2, the driver reverts to PCL for strings containing 8bit characters.",
" UTF-8 text is limited to angles of 0, 90, 180, and 270 degrees. Also vertical",
" alignment might be off depending on the font.",
"",
" Some enhanced text features (phantom box, overprinting) require using PCL",
" features in addition to HP-GL/2. This conforms to the specs but may not",
" work with your printer or software."
#else /* JAPANESE_DOC */
"1 pcl5",
"?commands set terminal pcl5",
"?set terminal pcl5",
"?set term pcl5",
"?terminal pcl5",
"?term pcl5",
"?pcl5",
" `pcl5` ドライバは、1990 年代以降の Hewlett Packard 社製、あるいはその他",
" のプリンタをサポートします。",
"",
" 書式:",
"       set terminal pcl5 {<mode>} {{no}enhanced}",
"           {size <plotsize> | size <width>{unit},<height>{unit}}",
"           {font \"<fontname>,<size>\"} {pspoints | nopspoints}",
"           {fontscale <scale>} {pointsize <scale>} {linewidth <scale}",
"           {rounded|butt} {color <number_of_pens>}",
"",
" <mode> は `landscape` か `portrait` です。<plotsize> はグラフの物理的",
" な描画サイズで、それは以下のうちのいずれかです: `letter` は標準の",
" (8 1/2\" X 11\") 出力、`legal` は (8 1/2\" X 14\") 出力、`noextended` は",
" (36\" X 48\") 出力 (letter サイズ比)、`extended` は (36\" X 55\") 出力",
" (ほぼ legal サイズ比)、`a4` は (296mm x 210mm) 出力です。さらに、明示的",
" にキャンバスサイズを `width`, `height` オプションで指定することもできま",
" す。単位のデフォルトは `in` です。サイズのデフォルトは `letter` です。",
"",
" <fontname> は stick, univers (デフォルト), albertus, antique_olive,",
" arial, avant_garde_gothic, bookman, zapf_chancery, clarendon, coronet,",
" courier, courier_ps, cg_times, garamond_antigua, helvetica,",
" helvetica_narrow, letter_gothic, marigold, new_century_schlbk,",
" cg_omega, palatino, times_new_roman, times_roman, zapf_dingbats,",
" truetype_symbols, wingdings のいずれかです。フォント名では大文字小文字",
" は区別されず、下線はスペースかダッシュに置き換えられるかまたは取り除か",
" れます。<fontsize> はポイント単位でのフォントの大きさです。",
"",
" 点の種類 (point type) は、`nopspoints` を指定することで制限されたデフォ",
" ルトの組を使用できますが、`pspoints` を指定すると postscript 出力形式と",
" 同じ点種の組を使用することができるようになります。",
"",
" オプション `butt` (デフォルト) は尖った端と角張った接合部を持つ線を使用",
" し、`rounded` は線の端や接合部を丸くします。",
"",
" 線幅や点、フォントのサイズは、それぞれオプション `linewidth`,",
" `pointscale`, `fontscale` で変更できます。",
"",
" `color` は、グラフ内で使用するペンの数 <number_of_pens> を指定します。",
" デフォルトは 8 で、最小は 2 です。",
"",
" これらのオプションのいくつかの組み込まれたサポートは、プリンタに依存す",
" ることに注意してください。例えば全てのフォントは恐らく HP Laserjet IV",
" ではサポートされているでしょうが、HP Laserjet III と Designjet 750C で",
" は 2,3 (例えば univers, stick) がサポートされているのみでしょう。",
" また、白黒の出力装置ではもちろんカラーも使えませんが、新しい物ならそれ",
" をグレイスケールでやってくれるでしょう。",
"",
" デフォルト: landscape, a4, 8 色, univers, 12 point, pspoints, butt,",
"             スケーリングなし",
"",
" `pcl5` 出力形式は、`encoding` の設定に合うフォントを要求しようとします。",
" これは最高の優先度を持つので、結果的に違うフォントの見た目になってしま",
" かもしれないことに注意してください。この出力ドライバのデフォルトの",
" `encoding` は、`HP Roman-8` です。",
"",
" 制限:",
"",
" この出力ドライバは、透過性のアルファ値はサポートしていません。透過型の",
" 塗り潰しは陰影パターンによる疑似的なものです。箱付き文字列は実装してい",
" ません。",
"",
" UTF-8 のサポートも制限があります。HP-GL/2 で UTF-8 出力に対するラベルモ",
" ードが欠けているため、このドライバは 8bit 文字が含まれている文字列に対",
" しては PCL に戻ります。UTF-8 文字列の回転は、0, 90, 180, 270 度の角のみ",
" に制限されます。垂直方向の位置合わせも、フォントによっては効かなくなり",
" えます。",
"",
" 拡張文字列のいくつかの機能 (空ボックスや重ね書き) は、HP-GL/2 に加えて",
"  PCL の機能を使うことが必要になります。それは、その能力を持つものには合",
" いますが、あなたのプリンタやソフトウェアでは機能しないかもしれません。"
#endif /* JAPANESE_DOC */
END_HELP(pcl5)
START_HELP(pdfcairo)
#ifndef JAPANESE_DOC
"1 pdfcairo",
"?set terminal pdfcairo",
"?terminal pdfcairo",
"?set term pdfcairo",
"?term pdfcairo",
"?pdfcairo",
" The `pdfcairo` terminal device generates output in pdf. The actual",
" drawing is done via cairo, a 2D graphics library, and pango, a library for",
" laying out and rendering text.",
"",
" Syntax:",
"         set term pdfcairo",
"                      {{no}enhanced} {mono|color}",
"                      {font <font>} {fontscale <scale>}",
"                      {linewidth <lw>} {rounded|butt|square} {dashlength <dl>}",
"                      {background <rgbcolor>}",
"                      {size <XX>{unit},<YY>{unit}}",
"",
" This terminal supports an enhanced text mode, which allows font and other",
" formatting commands (subscripts, superscripts, etc.) to be embedded in labels",
" and other text strings. The enhanced text mode syntax is shared with other",
" gnuplot terminal types. See `enhanced` for more details.",
"",
" The width of all lines in the plot can be modified by the factor <lw>",
" specified in `linewidth`. The default linewidth is 0.5 points.",
" (1 \"PostScript\" point = 1/72 inch = 0.353 mm)",
"",
" `rounded` sets line caps and line joins to be rounded;",
" `butt` is the default, butt caps and mitered joins.",
"",
" The default size for the output is 5 inches x 3 inches. The `size` option",
" changes this to whatever the user requests. By default the X and Y sizes are",
" taken to be in inches, but other units are possible (currently only cm).",
" Screen coordinates always run from 0.0 to 1.0 along the full length of the",
" plot edges as specified by the `size` option.",
"",
" <font> is in the format \"FontFace,FontSize\", i.e. the face and the size",
" comma-separated in a single string. FontFace is a usual font face name, such",
" as \'Arial\'. If you do not provide FontFace, the pdfcairo terminal will use",
" \'Sans\'. FontSize is the font size, in points. If you do not provide it,",
" the pdfcairo terminal will use a nominal font size of 12 points.",
" However, the default fontscale parameter for this terminal is 0.5,",
" so the apparent font size is smaller than this if the pdf output is",
" viewed at full size.",
"    For example :",
"       set term pdfcairo font \"Arial,12\"",
"       set term pdfcairo font \"Arial\" # to change the font face only",
"       set term pdfcairo font \",12\" # to change the font size only",
"       set term pdfcairo font \"\" # to reset the font name and size",
"",
" The fonts are retrieved from the usual fonts subsystems. Under Windows,",
" those fonts are to be found and configured in the entry \"Fonts\" of the",
" control panel. Under UNIX, they are handled by \"fontconfig\".",
"",
" Pango, the library used to layout the text, is based on utf-8. Thus, the pdfcairo",
" terminal has to convert from your encoding to utf-8. The default input",
" encoding is based on your \'locale\'. If you want to use another encoding,",
" make sure gnuplot knows which one you are using. See `encoding` for more",
" details.",
"",
" Pango may give unexpected results with fonts that do not respect the unicode",
" mapping. With the Symbol font, for example, the pdfcairo terminal will use the map",
" provided by http://www.unicode.org/ to translate character codes to unicode.",
" Note that \"the Symbol font\" is to be understood as the Adobe",
" Symbol font, distributed with Acrobat Reader as \"SY______.PFB\".",
" Alternatively, the OpenSymbol font, distributed with OpenOffice.org as",
" \"opens___.ttf\", offers the same characters. Microsoft has distributed a",
" Symbol font (\"symbol.ttf\"), but it has a different character set with",
" several missing or moved mathematic characters. If you experience problems",
" with your default setup (if the demo enhancedtext.dem is not displayed",
" properly for example), you probably have to install one of the Adobe or",
" OpenOffice Symbol fonts, and remove the Microsoft one.",
" Other non-conform fonts, such as \"wingdings\" have been observed working.",
"",
" The rendering of the plot cannot be altered yet. To obtain the best output",
" possible, the rendering involves two mechanisms : antialiasing and",
" oversampling.",
" Antialiasing allows to display non-horizontal and non-vertical lines",
" smoother.",
" Oversampling combined with antialiasing provides subpixel accuracy,",
" so that gnuplot can draw a line from non-integer coordinates. This avoids",
" wobbling effects on diagonal lines ('plot x' for example).",
""
#else /* JAPANESE_DOC */
"1 pdfcairo",
"?set terminal pdfcairo",
"?terminal pdfcairo",
"?set term pdfcairo",
"?term pdfcairo",
"?pdfcairo",
" 出力形式 `pdfcairo` は、PDF 出力を生成します。実際の描画は、2D グラフ",
" ィックライブラリである cairo と、文字列の配置とレンダリング用のライブ",
" ラリ pango を経由して行われます。",
"",
" 書式:",
"         set term pdfcairo",
"                      {{no}enhanced} {mono|color}",
"                      {font <font>} {fontscale <scale>}",
"                      {linewidth <lw>} {rounded|butt|square} {dashlength <dl>}",
"                      {background <rgbcolor>",
"                      {size <XX>{unit},<YY>{unit}}",
"",
" この出力形式は、拡張文字列処理モード (enhanced text mode) をサポートし",
" ていて、フォントや書式コマンド (上付、下付など) をラベルや他の文字列に",
" 埋め込むことができます。拡張文字列処理モードの書式は他の gnuplot の出",
" 力形式と共通です。詳細は、以下参照: `enhanced`。",
"",
" 描画における全ての線の幅は、`linewidth` で指定する因子 <lw> で変更でき",
" ます。デフォルトの線幅は 0.5 ポイントです。(1 \"PostScript\" ポイント",
" = 1/72 インチ = 0.353 mm)",
"",
" `rounded` は、線の端や接合部を丸くします。",
" デフォルトの `butt` は尖った端と角張った接合部を使用します。",
"",
" PDF 出力のデフォルトのサイズは、5inch x 3inch です。オプション `size` ",
" は、これをユーザの指定するものへ変更します。デフォルトの X, Y サイズの",
" 単位はインチですが、他の単位も使用可能です (現在は cm のみ)。`size` オ",
" プションで指定されたことによる描画の端から端までの領域は、常にスクリー",
" ン座標の 0.0 から 1.0 に対応します。",
"",
" <font> は、\"FontFace,FontSize\" の書式、つまりフォント名とサイズをカ",
" ンマで区切った一つの文字列として表記します。FontFace は、\'Arial\' の",
" ような通常のフォント名です。フォント名を与えない場合、pdfcairo 出力形",
" 式では\'Sans\' が使用されます。FontSize はポイント単位でのフォントサイ",
" ズです。指定しない場合は、pdfcairo 出力形式では 12 ポイントサイズの標",
" 準フォントが使用されます。しかし、この出力形式のパラメータ fontscale",
" のデフォルトは 0.5 なので、見かけのフォントサイズは、PDF 出力をフルサ",
" イズで見た場合よりも小さくなるでしょう。",
"    例 :",
"       set term pdfcairo font \"Arial,12\"",
"       set term pdfcairo font \"Arial\" # フォント名のみ変更",
"       set term pdfcairo font \",12\" # フォントサイズのみ変更",
"       set term pdfcairo font \"\" # フォント名とサイズをリセット",
"",
" フォントは、通常のフォント処理機構により取得されます。Windows では、フ",
" ォントはコントロールパネルの \"フォント\" の項目で構成され見つけられる",
" もので、UNIX では、フォントは \"fontconfig\" で処理されます。",
"",
" 文字列のレイアウトに使用されるライブラリ Pango は、utf-8 に基づいてい",
" ますので、pdfcairo 出力形式では、文字コードを utf-8 に変換する必要があ",
" ります。デフォルトの入力文字コードは、あなたが使用している \'locale\'",
" に基づきます。他の文字コードにしたい場合は、あなたがどの文字コードを使",
" っているのかを確実に gnuplot がわかるようにしてください。詳細について",
" は、以下参照: `encoding`。",
"",
" pango は、unicode マッピングでないフォントに対しては予期せぬ結果を与え",
" るかもしれません。例えば Symbol フォントに対しては、pdfcairo 出力形式",
" は、文字コードを unicode に変換するために http://www.unicode.org/ で提",
" 供されるマッピングを利用します。なお、\"the Symbol font\" は、Acrobat",
" Reader と一緒に \"SY______.PFB\" として配布されている Adobe Symbol フ",
" ォントであると解釈されることに注意してください。この代わりに、",
" OpenOffice.org と一緒に \"opens___.ttf\" として配布される OpenSymbol",
" フォントが同じ文字を提供しています。Microsoft も Symbol フォント",
" (\"symbol.ttf\") を配布していますが、これは異なる文字セットになってい",
" て、いくつかは欠けていますし、いくつかは数式記号に変わってしまっていま",
" す。あなたのデフォルトの設定でなんらかの問題が起きた場合 (例えばデモス",
" クリプト enhancedtext.dem がちゃんと表示されないといった場合) は、",
" Adobe か OpenOffice の Symbol フォントをインストールして、Microsoft の",
" Symbol フォントを削除しないといけないかもしれません。\"windings\" のよ",
" うな他の非標準のフォントでも動作することが報告されています。",
"",
" 描画のレンダリングは、今のところ変更できません。出力をより良くするため",
" にこのレンダリングは、アンチエイリアス、オーバーサンプリングの 2 つの",
" 機構を持っています。",
" アンチエイリアスは、水平や垂直でない線を滑らかに表示します。",
" オーバーサンプリングは、アンチエイリアスと組でピクセルよりも小さいサイ",
" ズでの精度を提供し、gnuplot が非整数座標の直線を書けるようになります。",
" これは、対角方向の直線 (例えば 'plot x') が左右に揺れるのを避けます。",
""
#endif /* JAPANESE_DOC */
END_HELP(pdfcairo)
START_HELP(pict2e)
#ifndef JAPANESE_DOC
"1 pict2e",
"?commands set terminal pict2e",
"?set terminal pict2e",
"?set term pict2e",
"?terminal pict2e",
"?term pict2e",
"?pict2e",
" The `pict2e` terminal uses the LaTeX2e variant of the picture environment.",
" It replaces terminals which were based on the original LaTeX picture",
" environment: `latex`, `emtex`, `tpic`, and `eepic`.",
"",
" Alternatives to this terminal with a more complete support of gnuplot's",
" features are `tikz`, `pstricks`, `cairolatex`, `pslatex`, `epslatex`",
" and `mp`.",
"",
" Syntax:",
"       set terminal pict2e",
"                    {font \"{<fontname>}{,<fontsize>}\"}",
"                    {size <XX>{unit}, <YY>{unit}}",
"                    {color | monochrome}",
"                    {linewidth <lw>} {rounded | butt}",
"                    {texarrows | gparrows} {texpoints | gppoints}",
"                    {smallpoints | tinypoints | normalpoints}",
"",
" This terminal requires the following standard LaTeX packages: `pict2e`,",
" `xcolor`, `graphics`/`graphicx` and `amssymb`. For pdflatex, the",
" `transparent` package is used to support transparency.",
"",
" By default the plot will inherit font settings from the embedding document.",
" You have the option to force a font with the `font` option, like cmtt",
" (Courier) or cmr (Roman), instead. In this case you may also force a specific",
" fontsize. Otherwise the fontsize argument is used to estimate the required",
" space for text.",
" Unless your driver is capable of building fonts at any size (e.g. dvips),",
" stick to the standard 10, 11 and 12 point sizes.",
"",
" The default size for the plot is 5 inches by 3 inches. The `size` option",
" changes this to whatever the user requests. By default the X and Y sizes",
" are taken to be in inches, but other units are possible (currently only cm).",
"",
" With `texpoints`, points are drawn using LaTeX commands like \"\\Diamond\"",
" and \"\\Box\".  These are provided by the the latexsym package, which is part",
" of the base distribution and thus part of any LaTeX implementation.",
" Other point types use symbols from the amssymb package.",
" With `gppoints`, the terminal will use gnuplot's internal routines for",
" drawing point symbols instead.",
"",
" With the `texpoints` option, you can select three different point sizes:",
" `normalpoints`, `smallpoints`, and `tinypoints`.",
"",
" `color` causes gnuplot to produce \\color{...} commands so that the graphs",
" are colored. Using this option, you must include \\usepackage{xcolor}",
" in the preamble of your LaTeX document. `monochrome` will avoid the use of",
" any color commands in the output.",
" Transparent color fill is available if pdflatex is used.",
"",
" `linewidth` sets the scale factor for the width of lines.",
" `rounded` sets line caps and line joins to be rounded. `butt` sets butt",
" caps and mitered joins and is the default.",
"",
" `pict2e` only supports dotted lines, but not dashed lines.",
" All default line types are solid. Use `set linetype` with the `dashtype`",
" property to change.",
"",
" `texarrows` draws `arrow`s using LaTeX commands which are shorter but do",
" not offer all options. `gparrows` selects drawing arrows using gnuplot's own",
" routine for full functionality instead.",
""
#else /* JAPANESE_DOC */
"1 pict2e",
"?commands set terminal pict2e",
"?set terminal pict2e",
"?set term pict2e",
"?terminal pict2e",
"?term pict2e",
"?pict2e",
" 出力形式 `pict2e` は、picture 環境の LaTeX2e 用の変種を使用します。これ",
" は、元々の LaTeX picture 環境に基づく出力形式である `latex`, `emtex`,",
" `tpic`, `eepic` に置き換わるものです。",
"",
" この出力形式に代わり、より完全に gnuplot の機能をサポートするものとして",
" `tikz`, `pstricks`, `cairolatex`, `pslatex`, `epslatex`, `mp` がありま",
" す。",
"",
" 書式:",
"       set terminal pict2e",
"                    {font \"{<fontname>}{,<fontsize>}\"}",
"                    {size <XX>{unit}, <YY>{unit}}",
"                    {color | monochrome}",
"                    {linewidth <lw>} {rounded | butt}",
"                    {texarrows | gparrows} {texpoints | gppoints}",
"                    {smallpoints | tinypoints | normalpoints}",
"",
" この出力形式は、以下の LaTeX 標準パッケージを仮定します: `pict2e`,",
" `xcolor`, `graphics`/`graphicx`, `amssymb`。pdflatex の場合は、透過のサ",
" ポートに `transparent` パッケージを使用します。",
"",
" デフォルトでは、グラフはこれが埋め込まれる文書のフォント設定を継承しま",
" すが、オプション `font` でフォントを強制的に、例えば cmtt (Courier) や",
" cmr (Roman) などの指定したフォントに変更することもできます。その場合、",
" 特定のフォントサイズにも変更できますが、そうでなければ、fontsize 引数は",
" その文字列用に必要なスペースを計算するのに使います。",
" あなたのドライバが、例えば dvips のようには任意のサイズのフォントを利用",
" できない場合は、標準の 10, 11, 12 ポイントサイズに限定してください。",
"",
" グラフのデフォルトサイズは 5inch x 3inch ですが、オプション `size` でこ",
" れをユーザが希望する任意のサイズに変更できます。デフォルトでは、X と Y",
" の単位は inch ですが、他の単位も利用できます (現在は cm のみ)。",
"",
" `texpoints` は、\"\\Diamond\" や \"\\Box\" のような LaTeX コマンドを使",
" って点 (point) の記号を書きます。これらは latexsym パッケージで提供され、",
" これは LaTeX の基本配布物ですので、任意の LaTeX の実装に含まれます。",
" 他の点記号は、amssymb パッケージの記号を使用します。",
" `gppoints` では、この出力形式は、代わりに gnuplot の内部ルーチンを使っ",
" て点記号を描画します。",
"",
" オプション `texpoints` では、3 つの異なる点サイズ指定: `normalpoints`,",
" `smallpoints`, `tinipoints` を選択できます。",
"",
" `color` は、gnuplot に \\color{...} コマンドを生成させ、それによりグラ",
" フの色付けを行います。このオプションを使用するには、あなたの LaTeX 文書",
" のプリアンブルに \\usepackage{xcolor} を入れる必要があります。",
" `monochrome` は、色に関するコマンドを一切出力しません。",
" 透過色の塗り潰しは、pdflatex を使用すれば利用できます。",
"",
" `linewidth` は、線幅の拡大倍率を設定します。",
" `rounded` は、線の端や接合部を丸くします。`butt` は尖った端と角張った接",
" 合部を使用し、こちらがデフォルトです。",
"",
" `pict2e` は、点線のみサポートし、破線はサポートしていません。",
" デフォルトの線種はすべて実線です。変更するには、`dashtype` 属性をつけて",
" `set linetype` を使用してください。",
"",
" `texarrows` は、LaTeX コマンドを使用して矢 (`arrow`) を描きますが、これ",
" はやや短かく、オプションをすべてはサポートしていません。`gparrows` は、",
" gnuplot 自身のルーチンを用いて矢を描くことを選択しますが、こちらはすべ",
" ての機能を備えています。",
""
#endif /* JAPANESE_DOC */
END_HELP(pict2e)
START_HELP(pm)
#ifndef JAPANESE_DOC
"1 pm",
"?commands set terminal pm",
"?set terminal pm",
"?set term pm",
"?terminal pm",
"?term pm",
"?pm",
" The `pm` terminal driver provides an OS/2 Presentation Manager window in",
" which the graph is plotted.  The window is opened when the first graph is",
" plotted.  This window has its own online help as well as facilities for",
" printing and copying to the clipboard.",
"",
" Syntax:",
"       set terminal pm      {{server} {n} | noserver}",
"                            {nopersist | persist}",
"                            {enhanced | noenhanced}",
"                            {font <fontspec>}",
"                            {nowidelines | widelines}",
"                            {fontscale <scale>}",
"                            {linewidth <scale>}",
"                            {pointscale <scale>}",
"                            {{title} \"title\"}",
"",
" If `persist` is specified, each graph appears in its own window and all",
" windows remain open after `gnuplot` exits.  If `server` is specified, all",
" graphs appear in the same window, which remains open when `gnuplot` exits.",
" This option takes an optional numerical argument which specifies an instance",
" of the server process.  Thus multiple server windows can be in use at the",
" same time.",
"",
" If `widelines` is specified, all plots will be drawn with wide lines.  If",
" `enhanced` is specified, sub- and superscripts and multiple fonts are enabled",
" (see `enhanced text` for details).  Font names for the core PostScript fonts",
" may be abbreviated to a single letter ",
" (T/H/C/S for Times/Helvetica/Courier/Symbol).",
"",
" `linewidth`, `fontscale`, `pointscale` can be used to scale the width of",
" lines, the size of text, or the size of the point symbols.",
"",
" If `title` is specified, it will be used as the title of the plot window.",
" It will also be used as the name of the server instance, and will override",
" the optional numerical argument.",
"",
" The gnuplot outboard driver, gnupmdrv.exe, is searched in the same directory",
" as gnuplot itself.  You can override that by defining one of the environment",
" variables GNUPLOT_DRIVER_DIR or GNUPLOT.  As a last resort the current",
" directory and the PATH are tried to locate gnupmdrv.exe."
#else /* JAPANESE_DOC */
"1 pm",
"?commands set terminal pm",
"?set terminal pm",
"?set term pm",
"?terminal pm",
"?term pm",
"?pm",
" `pm` ドライバは、グラフが描画される OS/2 プレゼンテーションマネージャ",
" ウィンドウを提供します。そのウィンドウは最初のグラフが描画されたときに",
" 開かれます。このウィンドウは印刷、クリップボードへのコピー、そしてそれ",
" 自身のオンラインヘルプを持っています。",
"",
" 書式:",
"       set terminal pm      {{server} {n} | noserver}",
"                            {nopersist | persist}",
"                            {enhanced | noenhanced}",
"                            {font <fontspec>}",
"                            {nowidelines | widelines}",
"                            {fontscale <scale>}",
"                            {linewidth <scale>}",
"                            {pointscale <scale>}",
"                            {{title} \"title\"}",
"",
" `persist` を指定すると、各グラフはそれぞれ自身のウィンドウを持ち、その",
" すべてのウィンドウは `gnuplot` が終了した後も開いたままになります。",
" `server` を指定すると、全てのグラフは同じウィンドウ内に現われ、それは",
" `gnuplot` 終了後も開いたままになります。このオプションは、さらに追加の",
" 数引数を取り、その数字はサーバプロセスのインスタンスになります。よって",
" 同時に複数のサーバウィンドウを使うことができます。",
"",
" `widelines` を指定すると、全てのグラフは幅の広い線で描かれます。",
" `enhanced` を指定すると、上付き文字や下付き文字、複数のフォントを使う",
" ことができます (詳細は、以下参照: `enhanced text`)。コア PostScript フ",
" ォントのフォント名は 1 文字に省略できます",
" (T/H/C/S はそれぞれ Times/Helvetica/Courier/Symbol を意味します)。",
"",
" `linewidth`, `fontscale`, `pointscale` は、線幅、文字サイズ、点記号のサ",
" イズの変更に使えます。",
"",
" `title` を指定すると、それは描画ウィンドウのタイトルとして使われます。",
" それはサーバインスタンス名としても使われ、それは追加の数引数を上書きし",
" ます。",
"",
" gnuplot とは別のドライバである gnupmdrv.exe の場所は、gnuplot 自身が置",
" かれているディレクトリを探しますが、それは環境変数 GNUPLOT_DRIVER_DIR",
" か GNUPLOT を定義することで変更できます。最終的には、gnupmdrv.exe を見",
" つけるのにはカレントディレクトリと PATH を使用します。"
#endif /* JAPANESE_DOC */
END_HELP(pm)
START_HELP(png)
#ifndef JAPANESE_DOC
"1 png",
"?commands set terminal png",
"?set terminal png",
"?set term png",
"?terminal png",
"?term png",
"?png",
" Syntax:",
"       set terminal png ",
"              {{no}enhanced}",
"              {{no}transparent} {{no}interlace}",
"              {{no}truecolor} {rounded|butt}",
"              {linewidth <lw>} {dashlength <dl>}",
"              {tiny | small | medium | large | giant}",
"              {font \"<face> {,<pointsize>}\"} {fontscale <scale>}",
"              {size <x>,<y>} {{no}crop}",
"              {background <rgb_color>}",
"",
" PNG, JPEG and GIF images are created using the external library libgd.",
" PNG plots may be viewed interactively by piping the output to the",
" 'display' program from the ImageMagick package as follows:",
"                set term png",
"                set output '| display png:-'",
" You can view the output from successive plot commands interactively by typing",
" <space> in the display window.  To save the current plot to a file,",
" left click in the display window and choose `save`.",
"",
" `transparent` instructs the driver to make the background color transparent.",
" Default is `notransparent`.",
"",
" `interlace` instructs the driver to generate interlaced PNGs.",
" Default is `nointerlace`.",
"",
" The `linewidth` and `dashlength` options are scaling factors that affect all",
" lines drawn, i.e. they are multiplied by values requested in various drawing",
" commands.",
"",
" By default the png terminal creates TrueColor images with 24 bits of color",
" information per pixel. The `notruecolor` option instead uses only 8 bits,",
" (256 indexed colors).",
" Transparent fill styles require the `truecolor` option. See `fillstyle`.",
" A transparent background is possible in either indexed or TrueColor images.",
" Antialiasing also requires TrueColor.",
"",
" `butt` instructs the driver to use a line drawing method that does",
" not overshoot the desired end point of a line.  This setting is only",
" relevant for line widths greater than 1.  The alternative is `rounded`,",
" which produces somewhat more uniform curved lines if antialiasing is not",
" available (`notruecolor`) but can be much slower.",
"",
" The details of font selection are complicated.",
" Two equivalent simple examples are given below:",
"      set term png font arial 11",
"      set term png font \"arial,11\"",
" For more information please see the separate section under `fonts`.",
"",
" The output plot size <x,y> is given in pixels---it defaults to 640x480.",
" Please see additional information under `canvas` and `set size`.",
" Blank space at the edges of the finished plot may be trimmed using the `crop`",
" option, resulting in a smaller final image size. Default is `nocrop`.",
"",
"2 examples",
"?set term png examples",
"",
"       set terminal png font \"arial,14\" size 800,600 background \"white\"",
"",
" Searches for a scalable font with face name 'arial' and sets the font",
" size to 14pt.  Please see `fonts` for details of how the font search",
" is done.",
"",
"       set terminal png transparent enhanced",
"",
" Use 24 bits of color information per pixel, with a transparent background.",
" Use the `enhanced text` mode to control the layout of strings to be printed.",
""
#else /* JAPANESE_DOC */
"1 png",
"?commands set terminal png",
"?set terminal png",
"?set term png",
"?terminal png",
"?term png",
"?png",
" 書式:",
"       set terminal png ",
"              {{no}enhanced}",
"              {{no}transparent} {{no}interlace}",
"              {{no}truecolor} {rounded|butt}",
"              {linewidth <lw>} {dashlength <dl>}",
"              {tiny | small | medium | large | giant}",
"              {font \"<face> {,<pointsize>}\"} {fontscale <scale>}",
"              {size <x>,<y>} {{no}crop}",
"              {background <rgb_color>}",
"",
" PNG, JPEG, GIF 画像は、外部ライブラリ libgd を使って生成されます。PNG",
" の描画は、ImageMagick パッケージのソフト 'display' にその出力を以下の",
" ようにパイプで渡すことで対話的に表示させることができます:",
"                set term png",
"                set output '| display png:-'",
" 次の描画コマンドからの出力は、display ウィンドウ上で対話的に <space>",
" を打つことで見ることができます。現在の描画をファイルに保存するには、",
" display ウィンドウで左クリックし、`save` を選択してください。",
"",
" `transparent` は、ドライバに背景色の透明化 (transparent) を行うよう指",
" 示します。デフォルトは `notransparent` です。",
"",
" `interlace` は、ドライバにインターレース GIF を生成するよう指示します。",
" デフォルトは `nointerlace` です。",
"",
" オプション `linewidth` と `dashlength` は拡大率で、描画されるすべての",
" 線に影響を与えます。すなわち、これらは様々な描画コマンドで要求される値",
" にかけ算されます。",
"",
" デフォルトでは、png 出力形式は、1 ピクセル毎に 24bit の色情報を持つ",
" TrueColor 画像生成します。オプション `notruecolor` は、代わりに 8bit",
" 色のみの画像 (256 個に番号付けられた色) を使用します。透明化塗りつぶし",
" スタイル (transparent fill style) には、オプション `truecolor` が必要",
" です。以下参照: `fillstyle`。背景の透明化は、番号付け画像か TrueColor",
" 画像で可能です。アンチエイリアスにも TrueColor が必要です。",
"",
" `butt` は線分の描画で、その端の点でのはみだしを起こさない描画メソッド",
" を使うようドライバに指示します。この設定は、線幅が 1 より大きい場合に",
" のみ意味があります。これの逆が `rounded` で、アンチエイリアスが有効で",
" ない場合 (`notruecolor`) 多少より均一な曲線を生成しますが、より遅くな",
" ります。",
"",
" フォントの選択の詳細は、やや複雑です。",
" 以下に同じ意味を持つ簡単な例を示します:",
"      set term png font arial 11",
"      set term png font \"arial,11\"",
" より詳しい情報については、`fonts` の下の該当するセクションを参照してく",
" ださい。",
"",
" 出力描画サイズ <x,y> はピクセル単位で与えます。デフォルトは 640x480 で",
" す。以下も参照: `canvas`, `set size`。",
" 描画終了後の端の余白は、オプション `crop` で取り除くことができ、その結",
" 果としてその画像サイズは小さくなります。デフォルトは `nocrop` です。",
"",
"2 例",
"?set term png examples",
"",
"       set terminal png font \"arial,14\" size 800,600 background \"white\"",
"",
" これは、'arial' というフェース名のスケーラブルフォントを検索し、フォン",
" トサイズを 14pt に設定します。フォントの検索がどのように行われるかにつ",
" いては以下参照: `fonts`。",
"",
"       set terminal png transparent enhanced",
"",
" これは、24 ビット/ピクセルの色情報を使用し、背景を透明化します。そして",
" 表示される文字列の配置制御として `enhanced text` モードを使用します。",
""
#endif /* JAPANESE_DOC */
END_HELP(png)
START_HELP(pngcairo)
#ifndef JAPANESE_DOC
"1 pngcairo",
"?set terminal pngcairo",
"?terminal pngcairo",
"?set term pngcairo",
"?term pngcairo",
"?pngcairo",
" The `pngcairo` terminal device generates output in png. The actual",
" drawing is done via cairo, a 2D graphics library, and pango, a library for",
" laying out and rendering text.",
"",
" Syntax:",
"         set term pngcairo",
"                      {{no}enhanced} {mono|color}",
"                      {{no}transparent} {{no}crop} {background <rgbcolor>",
"                      {font <font>} {fontscale <scale>}",
"                      {linewidth <lw>} {rounded|butt|square} {dashlength <dl>}",
"                      {pointscale <ps>}",
"                      {size <XX>{unit},<YY>{unit}}",
"",
" This terminal supports an enhanced text mode, which allows font and other",
" formatting commands (subscripts, superscripts, etc.) to be embedded in labels",
" and other text strings. The enhanced text mode syntax is shared with other",
" gnuplot terminal types. See `enhanced` for more details.",
"",
" The width of all lines in the plot can be modified by the factor <lw>.",
"",
" `rounded` sets line caps and line joins to be rounded;",
" `butt` is the default, butt caps and mitered joins.",
"",
" The default size for the output is 640 x 480 pixels. The `size` option",
" changes this to whatever the user requests. By default the X and Y sizes are",
" taken to be in pixels, but other units are possible (currently cm and inch).",
" A size given in centimeters or inches will be converted into pixels assuming",
" a resolution of 72 dpi. Screen coordinates always run from 0.0 to 1.0 along",
" the full length of the plot edges as specified by the `size` option.",
"",
" <font> is in the format \"FontFace,FontSize\", i.e. the face and the size",
" comma-separated in a single string. FontFace is a usual font face name, such",
" as \'Arial\'. If you do not provide FontFace, the pngcairo terminal will use",
" \'Sans\'. FontSize is the font size, in points. If you do not provide it,",
" the pngcairo terminal will use a size of 12 points.",
"    For example :",
"       set term pngcairo font \"Arial,12\"",
"       set term pngcairo font \"Arial\" # to change the font face only",
"       set term pngcairo font \",12\" # to change the font size only",
"       set term pngcairo font \"\" # to reset the font name and size",
"",
" The fonts are retrieved from the usual fonts subsystems. Under Windows,",
" those fonts are to be found and configured in the entry \"Fonts\" of the",
" control panel. Under UNIX, they are handled by \"fontconfig\".",
"",
" Pango, the library used to layout the text, is based on utf-8. Thus, the pngcairo",
" terminal has to convert from your encoding to utf-8. The default input",
" encoding is based on your \'locale\'. If you want to use another encoding,",
" make sure gnuplot knows which one you are using. See `encoding` for more detail.",
"",
" Pango may give unexpected results with fonts that do not respect the unicode",
" mapping. With the Symbol font, for example, the pngcairo terminal will use the map",
" provided by http://www.unicode.org/ to translate character codes to unicode.",
" Note that \"the Symbol font\" is to be understood as the Adobe",
" Symbol font, distributed with Acrobat Reader as \"SY______.PFB\".",
" Alternatively, the OpenSymbol font, distributed with OpenOffice.org as",
" \"opens___.ttf\", offers the same characters. Microsoft has distributed a",
" Symbol font (\"symbol.ttf\"), but it has a different character set with",
" several missing or moved mathematic characters. If you experience problems",
" with your default setup (if the demo enhancedtext.dem is not displayed",
" properly for example), you probably have to install one of the Adobe or",
" OpenOffice Symbol fonts, and remove the Microsoft one.",
"",
" Rendering uses oversampling, antialiasing, and font hinting to the extent",
" supported by the cairo and pango libraries.",
""
#else /* JAPANESE_DOC */
"1 pngcairo",
"?set terminal pngcairo",
"?terminal pngcairo",
"?set term pngcairo",
"?term pngcairo",
"?pngcairo",
" 出力形式 `pngcairo` は、PNG 出力を生成します。実際の描画は、2D グラフ",
" ィックライブラリである cairo と、文字列の配置とレンダリング用のライブ",
" ラリ pango を経由して行われます。",
"",
" 書式:",
"         set term pngcairo",
"                      {{no}enhanced} {mono|color}",
"                      {{no}transparent} {{no}crop} {background <rgbcolor>",
"                      {font <font>} {fontscale <scale>}",
"                      {linewidth <lw>} {rounded|butt|square} {dashlength <dl>}",
"                      {pointscale <ps>}",
"                      {size <XX>{unit},<YY>{unit}}",
"",
" この出力形式は、拡張文字列処理モード (enhanced text mode) をサポートし",
" ていて、フォントや書式コマンド (上付、下付など) をラベルや他の文字列に",
" 埋め込むことができます。拡張文字列処理モードの書式は他の gnuplot の出",
" 力形式と共通です。詳細は、以下参照: `enhanced`。",
"",
" 描画における全ての線の幅は、因子 <lw> で変更できます。",
"",
" `rounded` は、線の端や接合部を丸くします。",
" デフォルトの `butt` は尖った端と角張った接合部を使用します。",
"",
" PNG 出力のデフォルトのサイズは、640 x 480 ピクセルです。オプション",
" `size` は、これをユーザの指定するものへ変更します。デフォルトの X, Y",
" サイズの単位はピクセルですが、他の単位も使用可能です (現在は cm とイン",
" チ)。サイズを cm かインチで与えるとそれは、解像度 72 dpi でのピクセル",
" 数に変換されます。`size` オプションで指定されたことによる描画の端から",
" 端までの領域は、常にスクリーン座標の 0.0 から 1.0 に対応します。",
"",
" <font> は、\"FontFace,FontSize\" の書式、つまりフォント名とサイズをカ",
" ンマで区切った一つの文字列として表記します。FontFace は、\'Arial\' の",
" ような通常のフォント名です。フォント名を与えない場合、pngcairo 出力形",
" 式では\'Sans\' が使用されます。FontSize はポイント単位でのフォントサイ",
" ズです。指定しない場合は、pngcairo 出力形式では 12 ポイントのサイズが",
" 使用されます。",
"    例 :",
"       set term pngcairo font \"Arial,12\"",
"       set term pngcairo font \"Arial\" # フォント名のみ変更",
"       set term pngcairo font \",12\" # フォントサイズのみ変更",
"       set term pngcairo font \"\" # フォント名とサイズをリセット",
"",
" フォントは、通常のフォント処理機構により取得されます。Windows では、フ",
" ォントはコントロールパネルの \"フォント\" の項目で構成され見つけられる",
" もので、UNIX では、フォントは \"fontconfig\" で処理されます。",
"",
" 文字列のレイアウトに使用されるライブラリ Pango は、utf-8 に基づいてい",
" ますので、pngcairo 出力形式では、文字コードを utf-8 に変換する必要があ",
" ります。デフォルトの入力文字コードは、あなたが使用している \'locale\'",
" に基づきます。他の文字コードにしたい場合は、あなたがどの文字コードを使",
" っているのかを確実に gnuplot がわかるようにしてください。詳細について",
" は、以下参照: `encoding`。",
"",
" pango は、unicode マッピングでないフォントに対しては予期せぬ結果を与え",
" るかもしれません。例えば Symbol フォントに対しては、pngcairo 出力形式",
" は、文字コードを unicode に変換するために http://www.unicode.org/ で提",
" 供されるマッピングを利用します。なお、\"the Symbol font\" は、Acrobat",
" Reader と一緒に \"SY______.PFB\" として配布されている Adobe Symbol フ",
" ォントであると解釈されることに注意してください。この代わりに、",
" OpenOffice.org と一緒に \"opens___.ttf\" として配布される OpenSymbol",
" フォントが同じ文字を提供しています。Microsoft も Symbol フォント",
" (\"symbol.ttf\") を配布していますが、これは異なる文字セットになってい",
" て、いくつかは欠けていますし、いくつかは数式記号に変わってしまっていま",
" す。あなたのデフォルトの設定でなんらかの問題が起きた場合 (例えばデモス",
" クリプト enhancedtext.dem がちゃんと表示されないといった場合) は、",
" Adobe か OpenOffice の Symbol フォントをインストールして、Microsoft の",
" Symbol フォントを削除しないといけないかもしれません。",
"",
" レンダリングは、cairo と pango ライブラリがサポートする範囲内で、オーバ",
" ーサンプリングとアンチエイリアス、フォントのヒンティングを行います。",
""
#endif /* JAPANESE_DOC */
END_HELP(pngcairo)
START_HELP(post)
#ifndef JAPANESE_DOC
"1 postscript",
"?commands set terminal postscript",
"?set terminal postscript",
"?set term postscript",
"?terminal postscript",
"?term postscript",
"?postscript",
" Several options may be set in the `postscript` driver.",
"",
" Syntax:",
"       set terminal postscript {default}",
"       set terminal postscript {landscape | portrait | eps}",
"                               {enhanced | noenhanced}",
"                               {defaultplex | simplex | duplex}",
"                               {fontfile {add | delete} \"<filename>\"",
"                                | nofontfiles} {{no}adobeglyphnames}",
PS_COMMON_OPTS1
PS_COMMON_OPTS2
PS_COMMON_PROLOG_INFO
"",
" `landscape` and `portrait` choose the plot orientation.",
" `eps` mode generates EPS (Encapsulated PostScript) output, which is just",
" regular PostScript with some additional lines that allow the file to be",
" imported into a variety of other applications.  (The added lines are",
" PostScript comment lines, so the file may still be printed by itself.)  To",
" get EPS output, use the `eps` mode and make only one plot per file.  In `eps`",
" mode the whole plot, including the fonts, is reduced to half of the default",
" size.",
"",
" `enhanced` enables enhanced text mode features (subscripts,",
" superscripts and mixed fonts). See `enhanced` for more information.",
" `blacktext` forces all text to be written in black even in color mode;",
"",
" Duplexing in PostScript is the ability of the printer to print on both",
" sides of the same sheet of paper.  With `defaultplex`, the default setting",
" of the printer is used; with `simplex` only one side is printed; `duplex`",
" prints on both sides (ignored if your printer can't do it).",
"",
" `\"<fontname>\"` is the name of a valid PostScript font; and `<fontsize>` is",
" the size of the font in PostScript points.",
" In addition to the standard postscript fonts, an oblique version of the",
" Symbol font, useful for mathematics, is defined. It is called",
" \"Symbol-Oblique\".",
"",
" `default` sets all options to their defaults: `landscape`, `monochrome`,",
" `dl 1.0`, `lw 1.0`, `defaultplex`, `enhanced`, \"Helvetica\" and",
" 14pt.  Default size of a PostScript plot is 10 inches wide and 7 inches high.",
PS_COMMON_DOC1
" Fonts listed by `fontfile` or `fontfile add` encapsulate the font",
" definitions of the listed font from a postscript Type 1 or TrueType font",
" file directly into the gnuplot output postscript file.  Thus, the enclosed",
" font can be used in labels, titles, etc.  See the section",
" `postscript fontfile` for more details.  With `fontfile delete`, a fontfile",
" is deleted from the list of embedded files.  `nofontfiles` cleans the list",
" of embedded fonts.",
"",
" Examples:",
"       set terminal postscript default       # old postscript",
"       set terminal postscript enhanced      # old enhpost",
"       set terminal postscript landscape 22  # old psbig",
"       set terminal postscript eps 14        # old epsf1",
"       set terminal postscript eps 22        # old epsf2",
"       set size 0.7,1.4; set term post portrait color \"Times-Roman\" 14",
"       set term post \"VAGRoundedBT_Regular\" 14 fontfile \"bvrr8a.pfa\"",
"",
" Linewidths and pointsizes may be changed with `set style line`.",
"",
" The `postscript` driver supports about 70 distinct pointtypes, selectable",
" through the `pointtype` option on `plot` and `set style line`.",
"",
" Several possibly useful files about `gnuplot`'s PostScript are included",
" in the /docs/psdoc subdirectory of the `gnuplot` distribution and at the",
" distribution sites.  These are \"ps_symbols.gpi\" (a `gnuplot` command file",
" that, when executed, creates the file \"ps_symbols.ps\" which shows all the",
" symbols available through the `postscript` terminal), \"ps_guide.ps\" (a",
" PostScript file that contains a summary of the enhanced syntax and a page",
" showing what the octal codes produce with text and symbol fonts),",
" \"ps_file.doc\" (a text file that contains a discussion of the organization",
" of a PostScript file written by `gnuplot`), and \"ps_fontfile_doc.tex\"",
" (a LaTeX file which contains a short documentation concerning the",
" encapsulation of LaTeX fonts with a glyph table of the math fonts).",
"",
" A PostScript file is editable, so once `gnuplot` has created one, you are",
" free to modify it to your heart's desire.  See the `editing postscript`",
" section for some hints.",
"2 editing postscript",
"?commands set terminal postscript editing",
"?set terminal postscript editing",
"?set term postscript editing",
"?terminal postscript editing",
"?term postscript editing",
"?editing_postscript",
"?editing postscript",
" The PostScript language is a very complex language---far too complex to",
" describe in any detail in this document.  Nevertheless there are some things",
" in a PostScript file written by `gnuplot` that can be changed without risk of",
" introducing fatal errors into the file.",
"",
" For example, the PostScript statement \"/Color true def\" (written into the",
" file in response to the command `set terminal postscript color`), may be",
" altered in an obvious way to generate a black-and-white version of a plot.",
" Similarly line colors, text colors, line weights and symbol sizes can also be",
" altered in straight-forward ways.  Text (titles and labels) can be edited to",
" correct misspellings or to change fonts.  Anything can be repositioned, and",
" of course anything can be added or deleted, but modifications such as these",
" may require deeper knowledge of the PostScript language.",
"",
" The organization of a PostScript file written by `gnuplot` is discussed in",
" the text file \"ps_file.doc\" in the docs/ps subdirectory of the gnuplot",
" source distribution.",
"2 postscript fontfile",
"?commands set terminal postscript fontfile",
"?set terminal postscript fontfile",
"?set term postscript fontfile",
"?terminal postscript fontfile",
"?term postscript fontfile",
"?postscript fontfile",
"?fontfile",
"       set term postscript ... fontfile {add|delete} <filename>",
" The `fontfile` or `fontfile add` option takes one file name as argument",
" and encapsulates this file into the postscript output in order to make",
" this font available for text elements (labels, tic marks, titles, etc.).",
" The `fontfile delete` option also takes one file name as argument. It",
" deletes this file name from the list of encapsulated files.",
"",
" The postscript terminal understands some",
" font file formats: Type 1 fonts in ASCII file format (extension \".pfa\"),",
" Type 1 fonts in binary file format (extension \".pfb\"), and TrueType",
" fonts (extension \".ttf\"). pfa files are understood directly, pfb and ttf",
" files are converted on the fly if appropriate conversion tools are",
" installed (see below). You have to specify the full filename including the",
" extension. Each `fontfile` option takes exact one font file name. This",
" option can be used multiple times in order to include more than one font",
" file.",
"",
" The search order used to find font files is",
" (1) absolute pathname or current working directory",
" (2) any of the directories specified by `set loadpath`",
" (3) the directory specified by `set fontpath`",
" (4) the directory given in environmental variable GNUPLOT_FONTPATH.",
" NB: This is a CHANGE from earlier versions of gnuplot.",
"",
" For using the encapsulated font file you have to specify the font name",
" (which normally is not the same as the file name). When embedding a",
" font file by using the `fontfile` option in interactive mode, the ",
" font name is printed on the screen. E.g.",
"    Font file 'p052004l.pfb' contains the font 'URWPalladioL-Bold'. Location:",
"    /usr/lib/X11/fonts/URW/p052004l.pfb",
"",
" When using pfa or pfb fonts, you can also find it out by looking into the",
" font file. There is a line similar to \"/FontName /URWPalladioL-Bold def\".",
" The middle string without the slash is the fontname, here",
" \"URWPalladioL-Bold\".",
" For TrueType fonts, this is not so easy since the font name is stored in a",
" binary format. In addition, they often have spaces in the font names which",
" is not supported by Type 1 fonts (in which a TrueType is converted on the",
" fly). The font names are changed in order to eliminate the spaces in the",
" fontnames. The easiest way to find out which font name is generated for",
" use with gnuplot, start gnuplot in interactive mode and type in",
" \"set terminal postscript fontfile '<filename.ttf>'\".",
"",
" For converting font files (either ttf or pfb) to pfa format, the conversion",
" tool has to read the font from a file and write it to standard output. If",
" the output cannot be written to standard output, on-the-fly conversion is",
" not possible.",
"",
" For pfb files \"pfbtops\" is a tool which can do this. If this program",
" is installed on your system the on the fly conversion should work.",
" Just try to encapsulate a pfb file. If the compiled in program call does",
" not work correctly you can specify how this program is called by",
" defining the environment variable GNUPLOT_PFBTOPFA e.g. to",
" \"pfbtops %s\". The `%s` will be replaced by the font file name and thus",
" has to exist in the string.",
"",
" If you don't want to do the conversion on the fly but get a pfa file of",
" the font you can use the tool \"pfb2pfa\" which is written in simple c",
" and should compile with any c compiler.",
" It is available from many ftp servers, e.g.",
"^ <a href=\"ftp://ftp.dante.de/tex-archive/fonts/utilities/ps2mf/\">",
"           ftp://ftp.dante.de/tex-archive/fonts/utilities/ps2mf/",
"^ </a>",
" In fact, \"pfbtopfa\" and \"pfb2ps\" do the same job. \"pfbtopfa\" puts",
" the resulting pfa code into a file, whereas \"pfbtops\" writes it to",
" standard output.",
"",
" TrueType fonts are converted into Type 1 pfa format, e.g.",
" by using the tool \"ttf2pt1\" which is available from",
"^ <a href=\"http://ttf2pt1.sourceforge.net/\">",
"           http://ttf2pt1.sourceforge.net/",
"^ </a>",
" If the builtin conversion does not",
" work, the conversion command can be changed by the environment variable",
" GNUPLOT_TTFTOPFA. For usage with ttf2pt1 it may be set to",
" \"ttf2pt1 -a -e -W 0 %s - \". Here again, `%s` stands for the",
" file name.",
"",
" For special purposes you also can use a pipe (if available for your",
" operating system). Therefore you start the file name definition with ",
" the character \"<\" and append a program call. This program has ",
" to write pfa data to standard output. Thus, a pfa file may be accessed",
" by `set fontfile \"< cat garamond.pfa\"`.",
"",
" For example, including Type 1 font files can be used for including the",
" postscript output in LaTeX documents. The \"european computer modern\"",
" font (which is a variant of the \"computer modern\" font) is available",
" in pfb format from any CTAN server, e.g.",
"^ <a href=\"ftp://ftp.dante.de/tex-archive/fonts/ps-type1/cm-super/\">",
"           ftp://ftp.dante.de/tex-archive/fonts/ps-type1/cm-super/",
"^ </a>",
" For example, the file \"sfrm1000.pfb\" contains the normal upright fonts",
" with serifs in the design size 10pt (font name \"SFRM1000\").",
" The computer modern fonts, which are still necessary for mathematics,",
" are available from",
"^ <a href=\"ftp://ftp.dante.de/tex-archive/fonts/cm/ps-type1/bluesky\">",
"           ftp://ftp.dante.de/tex-archive/fonts/cm/ps-type1/bluesky",
"^ </a>",
" With these you can use any character available in TeX. However, the",
" computer modern fonts have a strange encoding. (This is why you should not",
" use cmr10.pfb for text, but sfrm1000.pfb instead.)",
" The usage of TeX fonts is shown in one of the demos.",
" The file \"ps_fontfile_doc.tex\" in the /docs/psdoc subdirectory of the",
" `gnuplot` source distribution contains a table with glyphs of the TeX",
" mathfonts.",
"",
" If the font \"CMEX10\" is embedded (file \"cmex10.pfb\") gnuplot defines",
" the additional font \"CMEX10-Baseline\". It is shifted vertically in order",
" to fit better to the other glyphs (CMEX10 has its baseline at the top of",
" the symbols).",
"2 postscript prologue",
"?commands set terminal postscript prologue",
"?set terminal postscript prologue",
"?terminal postscript prologue",
"?postscript prologue",
"?prologue",
" Each PostScript output file includes a %%Prolog section and possibly some",
" additional user-defined sections containing, for example, character encodings.",
" These sections are copied from a set of PostScript prologue files that are",
" either compiled into the gnuplot executable or stored elsewhere on your",
" computer. A default directory where these files live is set at the time",
" gnuplot is built. However, you can override this default either by using the",
" gnuplot command `set psdir` or by defining an environment variable",
" GNUPLOT_PS_DIR. See `set psdir`.",
"2 postscript adobeglyphnames",
"?commands set terminal postscript adobeglyphnames",
"?set terminal postscript adobeglyphnames",
"?terminal postscript adobeglyphnames",
"?postscript adobeglyphnames",
"?adobeglyphnames",
"=UTF-8",
" This setting is only relevant to PostScript output with UTF-8 encoding.",
" It controls the names used to describe characters with Unicode entry points",
" higher than 0x00FF.  That is, all characters outside of the Latin1 set.",
" In general unicode characters do not have a unique name; they have only a",
" unicode identification code.  However, Adobe have a recommended scheme for",
" assigning names to certain ranges of characters (extended Latin, Greek, etc).",
" Some fonts use this scheme, others do not.  By default, gnuplot will use",
" the Adobe glyph names.  E.g. the lower case Greek letter alpha will be called",
" /alpha.  If you specific `noadobeglyphnames` then instead gnuplot will use",
" /uni03B1 to describe this character.  If you get this setting wrong, the",
" character may not be found even if it is present in the font.",
" It is probably always correct to use the default for Adobe fonts, but for",
" other fonts you may have to try both settings.  See also `fontfile`.",
"",
""
#else /* JAPANESE_DOC */
"1 postscript",
"?commands set terminal postscript",
"?set terminal postscript",
"?set term postscript",
"?terminal postscript",
"?term postscript",
"?postscript",
" `postscript` ドライバではいくつかのオプションが設定できます。",
"",
" 書式:",
"       set terminal postscript {default}",
"       set terminal postscript {landscape | portrait | eps}",
"                               {enhanced | noenhanced}",
"                               {defaultplex | simplex | duplex}",
"                               {fontfile {add | delete} \"<filename>\"",
"                                | nofontfiles} {{no}adobeglyphnames}",
PS_COMMON_OPTS1
PS_COMMON_OPTS2
PS_COMMON_PROLOG_INFO
"",
" `landscape` と `portrait` は出力が横置か、縦置かを選択します。",
" `eps` モードは EPS (Encapsulated PostScript) 出力を生成しますが、これ",
" は通常の PostScript に、それを他の多くのアプリケーションで取り込むこと",
" ができるようにいくつかの行を追加したものです (追加される行は PostScript",
" のコメント行なので、よってそれ自身もちゃんと印刷できます)。EPS 出力を",
" 得るには `eps` モードを使用し、1 つのファイルには 1 つのグラフのみ、と",
" してください。`eps` モードではフォントも含めてグラフ全体がデフォルトの",
" 大きさの半分に縮められます。",
"",
" `enhanced` は拡張文字列処理モード (上付き文字、下付き文字、および複数",
" のフォントの利用) の機能を有効にします。詳細は、以下参照: `enhanced`。",
" `blacktext` は、たとえカラーモードでも全ての文字列を黒で書きます。",
"",
" PostScript の両面印刷命令 (duplex) は、プリンタで 1 枚の紙に両面印刷す",
" ることを可能にします。`defaultplex` はプリンタのデフォルトの設定を使用",
" し、`simplex` は紙の片面のみ印刷、`duplex` は 両面印刷を行ないます (あ",
" なたのプリンタがそれを行なえないなら無視されます)。",
"",
" `\"<fontname>\"` は有効な PostScript フォントの名前で、`<fontsize>` は",
" PostScript ポイント単位でのフォントの大きさです。",
" 標準的な postscript フォント以外に、数式を表現するのに便利な oblique",
" Symbol フォント (\"Symbol-Oblique\") が定義されています。",
"",
" `default` は全てのオプションを以下のデフォルトの値に設定します:",
" `landscape`, `monochrome`, `dl 1.0`, `lw 1.0`, `defaultplex`,",
" `enhanced`, \"Helvetica\", 14pt。PostScript のグラフのデフォルトの大き",
" さは、10 インチの幅で 7 インチの高さです。",
PS_COMMON_DOC1
" `fontfile` や `fontfile add` で指定されたフォントは、そのフォントのフ",
" ォント定義を直接 postscript Type 1, TrueType フォントから gnuplot の",
" postscript 出力の中にカプセル化します。よって、その埋め込まれたフォン",
" トは見出し、タイトルなどに使うことができます。詳細は、以下参照:",
" `postscript fontfile`。`fontfile delete` によってフォントファイルを埋",
" め込まれるファイルの一覧から取り除くことができます。",
" `nofontfiles` は埋め込みフォントのリストをクリアします。",
"",
" 例:",
"       set terminal postscript default       # 以前の postscript",
"       set terminal postscript enhanced      # 以前の enhpost",
"       set terminal postscript landscape 22  # 以前の psbig",
"       set terminal postscript eps 14        # 以前の epsf1",
"       set terminal postscript eps 22        # 以前の epsf2",
"       set size 0.7,1.4; set term post portrait color \"Times-Roman\" 14",
"       set term post \"VAGRoundedBT_Regular\" 14 fontfile \"bvrr8a.pfa\"",
"",
" 線の幅と点の大きさは `set style line` で変更できます。",
"",
" `postscript` ドライバは約 70 種類の異なる点種をサポートしていて、これ",
" は `plot` や `set style line` の `pointtype` オプションで選択できます。",
"",
" `gnuplot` と Postscript に関する多分有用と思われるファイルが `gnuplot`",
" の配布物、またはその配布サイトの /docs/psdos サブディレクトリ内にいく",
" つか含まれています。そこには \"ps_symbols.gpi\" (実行すると `postscript`",
" ドライバで使える全ての記号を紹介する \"ps_symbols.ps\" というファイルを生",
" 成する `gnuplot` のコマンドファイル)、\"ps_guide.ps\" (拡張された書式に",
" 関する要約と、文字列内で 8 進コードで生成されるもの、symbol フォント等",
" を含む PostScript ファイル)、\"ps_file.doc\" (`gnuplot` で作られる",
" PostScript ファイルの構造の説明を含むテキストファイル)、",
" \"ps_fontfile_doc.tex\" (数式フォントの文字の一覧と LaTeX のフォントの埋",
" め込みに関する短い説明を含む LaTeX ファイル) があります。",
"",
" PostScript ファイルは編集可能で、一度 `gnuplot` でそれを作れば、それを",
" 望むように修正することは自由に行なえます。そのためのヒントを得るには、",
" 以下参照: `editing postscript`。",
"2 PostScript の編集 (editing postscript)",
"?commands set terminal postscript editing",
"?set terminal postscript editing",
"?set term postscript editing",
"?terminal postscript editing",
"?term postscript editing",
"?editing_postscript",
"?editing postscript",
" PostScript 言語はとても複雑な言語で、ここで詳細を記述することはとても",
" できません。それでも、`gnuplot` で作られる PostScript ファイルには、致",
" 命的なエラーをそのファイルに導入してしまう危険性のない変更を行なうこと",
" が可能な部分があります。",
"",
" 例えば、PostScript の文 \"/Color true def\" (`set terminal postscript color`",
" コマンドに答えてファイルに書き込まれます) を変更して、その描画を白黒の",
" ものにする方法はおわかりでしょう。同様に、線の色、文字の色、線の太さ",
" (weight)、記号のサイズも、本当に簡単に書き換えられるでしょう。タイトル",
" や見出しなどの文字列の誤植や、フォントの変更も編集可能でしょう。任意の",
" ものの配置も変更できますし、もちろん、任意のものを追加したり、削除した",
" りもできますが、それらの修正は PostScript 言語の深い知識が必要でしょう。",
"",
" `gnuplot` によって作られる PostScript ファイルの構成に関しては、gnuplot",
" のソース配布物内の docs/ps ディレクトリのテキストファイル \"ps_file.doc\"",
" に述べられています。",
"2 postscript fontfile",
"?commands set terminal postscript fontfile",
"?set terminal postscript fontfile",
"?set term postscript fontfile",
"?terminal postscript fontfile",
"?term postscript fontfile",
"?postscript fontfile",
"?fontfile",
"       set term postscript ... fontfile {add|delete} <filename>",
" オプション `fontfile` または `fontfile add` は 1 つのファイル名を引数",
" として持ち、そのファイルを postscript 出力内にカプセル化して埋め込み、",
" それによって様々な文字列要素 (ラベル、目盛り見出し、タイトル等) をその",
" フォントで出力することを可能にします。オプション `fontfile delete` も",
" 1 つのファイル名を引数に持ち、そのファイル名をカプセル化されるファイル",
" のリストから削除します。",
"",
" postscript 出力ドライバはいくつかのフォントファイル形式を認識します:",
" ASCII 形式の Type 1 フォント (拡張子 \".pfa\")、バイナリ形式の Type 1 フ",
" ォント (拡張子 \".pfb\")、TrueType フォント (拡張子 \".ttf\")。pfa ファイ",
" ルは直接認識されますが、pfb と ttf ファイルは gnuplot の実行中に並行し",
" て変換され、そのために適切な変換ツール (下記参照) がインストールされて",
" いる必要があります。ファイル名は拡張子も含めて完全な形で指定する必要が",
" あります。各 `fontfile` オプションはちょうど一つのフォントファイル名に",
" 対応しますので、複数のフォントファイルを埋め込むためにはこのオプション",
" を複数回使って下さい。",
"",
" フォントファイルを見つけるための検索順は以下の通りです。",
" (1) 絶対パス名、または現在の作業ディレクトリ (カレントディレクトリ)",
" (2) `set loadpath` で指定したディレクトリのすべて",
" (3) `set fontpath` で指定したディレクトリ",
" (4) 環境変数 GNUPLOT_FONTPATH に指定されているディレクトリ",
" 注意: これは、従来の版の gnuplot からの仕様の「変更」です。",
"",
" 埋め込まれたフォントファイルを使うには、フォント名 (通常ファイル名と同",
" じではありません) を指定する必要があります。対話モードで `fontfile` オ",
" プションを使ってフォントを埋め込んだ場合、フォント名はスクリーンに表示",
" されます。例:",
"    Font file 'p052004l.pfb' contains the font 'URWPalladioL-Bold'. Location:",
"    /usr/lib/X11/fonts/URW/p052004l.pfb",
"",
" pfa や pfb フォントでは、フォント名はフォントファイル内に見つけること",
" ができます。フォントファイル中に \"/FontName /URWPalladioL-Bold def\" の",
" ような行がありますが、この真中の物から / を除いたものがフォント名です。",
" この例の場合は \"URWPalladioL-Bold\" となります。",
" TrueType フォントでは、フォント名はバイナリ形式で保存されているので見",
" つけるのは容易ではありません。さらに、その名前は多くの場合、Type 1 フ",
" ォント (実行中に TrueType が変換される形式である) ではサポートされてい",
" ない、スペースを含んだ形式になっています。そのため、フォント名はそこか",
" らスペースを取り除いた形に変換されます。gnuplot で使うために生成された",
" フォント名が何であるかを知る最も簡単な方法は、gnuplot を対話モードで起",
" 動して、以下のように入力することです:",
" \"set terminal postscript fontfile '<filename.ttf>'\".",
"",
" フォントファイル (ttf, pfb) を pfa 形式に変換するために、フォントファ",
" イルを読んで、そして変換結果を標準出力に吐き出す変換ツールが必要になり",
" ます。その出力を標準出力に書き出すことができない場合、実行中の変換はで",
" きません。",
"",
" pfb ファイルに対しては、例えば \"pfbtops\" が使えます。それがシステム",
" にインストールされていれば、実行中の変換はうまく行くはずです。pfb ファ",
" イルのカプセル化をちょっとやってみましょう。もしプログラムの変換時に正",
" しくツールを呼び出していない場合は、どのようにツールを呼び出したら良い",
" かを環境変数 GNUPLOT_PFBTOPFA に、例えば \"pfbtops %s\" のように定義し",
" て下さい。`%s` はフォントファイル名に置き換えられますので、これはその",
" 文字列に必ず必要です。",
"",
" 実行中の変換をしたくなくて、けれども pfa 形式のファイルは必要である場",
" 合、\"pfb2pfa\" という C で書かれた簡単なツールを使えば良いでしょう。こ",
" れは大抵の C コンパイラでコンパイルでき、たくさんの ftp サーバに置いて",
" あります。例えば",
"^ <a href=\"ftp://ftp.dante.de/tex-archive/fonts/utilities/ps2mf/\">",
"           ftp://ftp.dante.de/tex-archive/fonts/utilities/ps2mf/",
"^ </a>",
" 実際に \"pfbtopfa\" と \"pfb2ps\" は同じ作業を行います。\"pfbtops\" は結果の",
" pfa コードを標準出力に出力しますが、\"pfbtopfa\" はファイルに出力します。",
"",
" TrueType フォントは、例えば \"ttf2pt1\" というツールを使って Type 1 pfa",
" フォーマットに変換できます。これは以下にあります:",
"^ <a href=\"http://ttf2pt1.sourceforge.net/\">",
"           http://ttf2pt1.sourceforge.net/",
"^ </a>",
" もし gnuplot に組み込まれている変換手順がうまく行かない場合、変換コマ",
" ンドは環境変数 GNUPLOT_TTFTOPFA で変更できます。ttf2pt1 を使う場合は、",
" それを \"ttf2pt1 -a -e -W 0 %s - \" のように設定して下さい。ここでも",
" `%s` はファイル名を意味します。",
"",
" 特殊な用途のために、パイプも使えるようになっています (パイプをサポート",
" している OS 上で)。ファイル名を \"<\" で始め、その後にプログラム呼び出し",
" を追加します。そのプログラム出力は標準出力への pfa データでなければい",
" けません。結果として pfa ファイルを、例えば以下のようにしてアクセスで",
" きることになります: `set fontfile \"< cat garamond.pfa\"`。",
"",
" Type 1 フォントを取り込むことは、例えば LaTeX 文書中に postscript ファ",
" イルを取り込む場合に使えます。pfb 形式の \"european computer modern\" フ",
" ォント (\"computer modern\" フォントの一種) が各地の CTAN サーバに置かれ",
" ています。",
"^ <a href=\"ftp://ftp.dante.de/tex-archive/fonts/ps-type1/cm-super/\">",
"           ftp://ftp.dante.de/tex-archive/fonts/ps-type1/cm-super/",
"^ </a>",
" 例えば、ファイル \"sfrm1000.pfb\" は、中太、セリフ付き、立体の 10 ポイン",
" トのフォント (フォント名 \"SFRM1000\") です。computer modern フォントは",
" 今でも数式を書くのに必要ですが、それは以下にあります:",
"^ <a href=\"ftp://ftp.dante.de/tex-archive/fonts/cm/ps-type1/bluesky\">",
"           ftp://ftp.dante.de/tex-archive/fonts/cm/ps-type1/bluesky",
"^ </a>",
" これらによって、TeX 用の任意の文字も使えます。しかし、computer modern",
" フォントは少しエンコーディングがおかしくなっています (このため、文字列",
" には cmr10.pfb の代わりに sfrm1000.pfb を使うべきです)。",
" TeX フォントの使用法はいくつかのデモの一つで知ることができます。",
" `gnuplot` のソース配布物の /docs/psdoc に含まれるファイル",
" \"ps_fontfile_doc.tex\" に TeX 数学フォントの文字の一覧表が含まれていま",
" す。",
"",
" フォント \"CMEX10\" (ファイル \"cmex10.pfb\") を埋め込むと、gnuplot は",
" 追加フォント \"CMEX10-Baseline\" も定義します。それは、他の文字にあうよ",
" うに垂直方向にずらされたものです (CMEX10 は、記号の天辺にベースライン",
" があります)。",
"2 PostScript prologue ファイル",
"?commands set terminal postscript prologue",
"?set terminal postscript prologue",
"?terminal postscript prologue",
"?postscript prologue",
"?prologue",
" 各 PostScript 出力ファイルは %%Prolog セクションを含みますし、例えば文",
" 字エンコーディングなどを含む追加ユーザ定義セクションを含むかもしれませ",
" せん。これらのセクションは、gnuplot の実行ファイル中にコンパイルされて",
" いる、あるいはあなたのコンピュータの別のところに保存されている",
" PostScript prologue ファイル群からコピーされます。これらのファイルが置",
" かれるデフォルトのディレクトリは、gnuplot のインストール時に設定されま",
" すが、このデフォルトは gnuplot コマンドの `set psdir` を使うか、環境変",
" 数 GNUPLOT_PS_DIR を定義することで変更できます。以下参照: `set psdir`。",
"2 postscript adobeglyphnames",
"?commands set terminal postscript adobeglyphnames",
"?set terminal postscript adobeglyphnames",
"?terminal postscript adobeglyphnames",
"?postscript adobeglyphnames",
"?adobeglyphnames",
"=UTF-8",
" この設定は、UTF-8 エンコーディングでの PostScript 出力にのみ関係します。",
" これは、0x00FF より大きい Unicode エントリポイント (つまり Latin1 集合",
" 外のすべて) の文字を記述するのに使われる名前を制御します。一般に、",
" unicode 文字は一意の名前を持たず、それは unicode 識別番号しか持ちませ",
" ん。しかし、Adobe は、ある範囲の文字 (拡張ラテン文字、ギリシャ文字等)",
" に名前を割り当てる推奨規則を持っています。フォントによってはこの規則を",
" 利用しているものありますし、そうでないものもあります。gnuplot はデフォ",
" ルトでは Adobe グリフ名を使用します。例えば、ギリシャ文字の小文字のア",
" ルファは /alpha となります。`noadobeglyphnames` を指定した場合、この文",
" 字に対して gnuplot は代わりに /uni03B1 を使おうとします。",
" この設定でおかしくなったとすれば、それはその文字がフォント内にあるにも",
" かかわらずそれが見つからない場合です。Adobe フォントに対しては、デフォ",
" ルトを使うのが常に正しいかもしれませんが、他のフォントでは両方の設定を",
" 試してみないといけないかもしれません。以下も参照: `fontfile`。",
"",
""
#endif /* JAPANESE_DOC */
END_HELP(post)
START_HELP(pslatex)
#ifndef JAPANESE_DOC
"1 pslatex and pstex",
"?commands set terminal pslatex",
"?set terminal pslatex",
"?set term pslatex",
"?terminal pslatex",
"?term pslatex",
"?pslatex",
"?commands set terminal pstex",
"?set terminal pstex",
"?set term pstex",
"?terminal pstex",
"?term pstex",
"?pstex",
" The `pslatex` driver generates output for further processing by LaTeX,",
" while the `pstex` driver generates output for further processing by",
" TeX. `pslatex` uses \\specials understandable by dvips and xdvi. Figures",
" generated by `pstex` can be included in any plain-based format (including",
" LaTeX).",
"",
" Syntax:",
"       set terminal [pslatex | pstex] {default}",
"       set terminal [pslatex | pstex]",
"                               {rotate | norotate}",
"                               {auxfile | noauxfile}",
PS_COMMON_OPTS1
"                               {<font_size>}",
"",
PS_COMMON_PROLOG_INFO
PS_COMMON_DOC1
" if `rotate` is specified, the y-axis label is rotated.",
" <font_size> is the size (in pts) of the desired font.",
"",
" If `auxfile` is specified, it directs the driver to put the PostScript",
" commands into an auxiliary file instead of directly into the LaTeX file.",
" This is useful if your pictures are large enough that dvips cannot handle",
" them.  The name of the auxiliary PostScript file is derived from the name of",
" the TeX file given on the `set output` command; it is determined by replacing",
" the trailing `.tex` (actually just the final extent in the file name) with",
" `.ps` in the output file name, or, if the TeX file has no extension, `.ps`",
" is appended.  The `.ps` is included into the `.tex` file by a",
" \\special{psfile=...} command.  Remember to close the `output file` before",
" next plot unless in `multiplot` mode.",
"",
" The pslatex driver offers a special way of controlling text positioning: ",
" (a) If any text string begins with '{', you also need to include a '}' at the",
" end of the text, and the whole text will be centered both horizontally",
" and vertically by LaTeX.  (b) If the text string begins with '[', you need",
" to continue it with: a position specification (up to two out of t,b,l,r),",
" ']{', the text itself, and finally, '}'. The text itself may be anything",
" LaTeX can typeset as an LR-box. \\rule{}{}'s may help for best positioning.",
"",
" The options not described here are identical to the `Postscript terminal`.",
" Look there if you want to know what they do.",
"",
" Examples:",
"       set term pslatex monochrome rotate       # set to defaults",
" To write the PostScript commands into the file \"foo.ps\":",
"       set term pslatex auxfile",
"       set output \"foo.tex\"; plot ...; set output",
" About label positioning:",
" Use gnuplot defaults (mostly sensible, but sometimes not really best):",
"        set title '\\LaTeX\\ -- $ \\gamma $'",
" Force centering both horizontally and vertically:",
"        set label '{\\LaTeX\\ -- $ \\gamma $}' at 0,0",
" Specify own positioning (top here):",
"        set xlabel '[t]{\\LaTeX\\ -- $ \\gamma $}'",
" The other label -- account for long ticlabels:",
"        set ylabel '[r]{\\LaTeX\\ -- $ \\gamma $\\rule{7mm}{0pt}}'",
"",
" Linewidths and pointsizes may be changed with `set style line`."
""
#else /* JAPANESE_DOC */
"1 pslatex and pstex",
"?commands set terminal pslatex",
"?set terminal pslatex",
"?set term pslatex",
"?terminal pslatex",
"?term pslatex",
"?pslatex",
"?commands set terminal pstex",
"?set terminal pstex",
"?set term pstex",
"?terminal pstex",
"?term pstex",
"?pstex",
" `pslatex` ドライバは LaTeX で後処理される出力を生成し、`pstex` ドライ",
" バは TeX で後処理される出力を生成します。`pslatex` は dvips と xdvi で",
" 認識可能な \\special 命令を使用します。`pstex` で生成される図は、任意",
" の plain-TeX ベースの TeX (LaTeX もそうです) で取り込むことができます。", 
"",
" 書式:",
"       set terminal [pslatex | pstex] {default}",
"       set terminal [pslatex | pstex]",
"                               {rotate | norotate}",
"                               {oldstyle | newstyle}",
"                               {auxfile | noauxfile}",
PS_COMMON_OPTS1
"                               {<font_size>}",
"",
PS_COMMON_PROLOG_INFO
PS_COMMON_DOC1
" `rotate` が指定されると y 軸の見出しが回転されます。",
" <font_size> は希望するフォントの (ポイント単位での) 大きさです。",
"",
" `auxfile` が指定されると、ドライバは PostScript コマンドを、LaTeX ファ",
" イルに直接出力する代わりに、補助ファイルに書き出すようになります。これ",
" は、dvips がそれを扱えないくらい大きいグラフである場合に有用です。補助",
" PostScript ファイルの名前は、`set output` コマンドで与えられる TeX フ",
" ァイルの名前から導かれるもので、それはその最後の `.tex` の部分 (実際の",
" ファイル名の最後の拡張子の部分) を `.ps` で置き換えたもの、または、TeX",
" ファイルに拡張子がないならば `.ps` を最後に付け足したものになります。",
" `.ps` ファイルは \\special{psfile=...} という命令で `.tex` ファイルに",
" 取り込まれます。`multiplot` モード以外では、次の描画を行なう前にその出",
" 力ファイルをクローズするのを忘れないでください。",
"",
" version 4.2 より前の gnuplot は ps(la)tex 出力形式では 5 x 3 インチの",
" 出力でしたが、現在では 5 x 3.5 インチになっています。これは postscript",
" eps 出力形式に合わせた変更です。加えて、文字幅は、以前の epslatex 出力",
" 形式はフォントサイズの 50% と見なしましたが、現在は 60% と評価していま",
" す。従来の形式に戻すには、オプション `oldstyle` を指定してください。",
"",
" pslatex ドライバは文字列の配置の制御に特別な方法を提供します:",
" (a) '{' で始まる文字列は、'}' で閉じる必要がありますが、その文字列全体",
" が LaTeX によって水平方向にも垂直方向にもセンタリングされます。",
" (b) '[' で始まる文字列の場合は、位置の指定をする文字列 (t,b,l,r のうち",
" 2 つまで) が続き、次に ']{'、文字列本体、で最後に '}' としますが、この",
" 文字列は LaTeX が LR-box として整形します。\\rule{}{} を使えばさらに良",
" い位置合わせが可能でしょう。",
"",
" ここに記述されていないオプションは `Postscript terminal` のものと同一で",
" すので、それらが何を行なうのかを知りたければそちらを参照してください。",
"",
" 例:",
"       set term pslatex monochrome rotate       # デフォルトに設定",
" PostScript コマンドを \"foo.ps\" に書き出す:",
"       set term pslatex auxfile",
"       set output \"foo.tex\"; plot ...; set output",
" 見出しの位置合わせに関して:",
" gnuplot のデフォルト (大抵それなりになるが、そうでないこともある):",
"        set title '\\LaTeX\\ -- $ \\gamma $'",
" 水平方向にも垂直方向にもセンタリング:",
"        set label '{\\LaTeX\\ -- $ \\gamma $}' at 0,0",
" 位置を明示的に指定 (上に合わせる):",
"        set xlabel '[t]{\\LaTeX\\ -- $ \\gamma $}'",
" 他の見出し -- 目盛りの長い見出しに対する見積り:",
"        set ylabel '[r]{\\LaTeX\\ -- $ \\gamma $\\rule{7mm}{0pt}}'",
"",
" 線幅と点の大きさは `set style line` で変更できます。",
""
#endif /* JAPANESE_DOC */
END_HELP(pslatex)
START_HELP(pstricks)
#ifndef JAPANESE_DOC
"1 pstricks",
"?commands set terminal pstricks",
"?set terminal pstricks",
"?set term pstricks",
"?terminal pstricks",
"?term pstricks",
"?pstricks",
" The `pstricks` driver is intended for use with the \"pstricks.sty\" macro",
" package for TeX or LaTeX.",
" You need \"pstricks.sty\", and, of course, a printer that understands",
" PostScript, or a converter such as Ghostscript.",
"",
" PSTricks is available at",
"^ <a href=\"http://tug.org/PSTricks/\">",
"           http://tug.org/PSTricks/.",
"^ </a>",
" This driver definitely does not come close to using the full",
" capability of the PSTricks package.",
"",
" Syntax:",
"       set terminal pstricks",
"                      {unit | size <XX>{unit},<YY>{unit}}",
"                      {standalone | input}",
"                      {blacktext | colortext | colourtext}",
"                      {linewidth <lw>} {rounded | butt}",
"                      {pointscale <ps>}",
"                      {psarrows | gparrows}",
"                      {background <rgbcolor>}",
"                      {pstricks | pdftricks2}",
"",
" The `unit` option produces a plot with internal dimensions 1x1. The default",
" is a plot of `size 5in,3in`.",
"",
" `standalone` produces a LaTeX file with possibly multiple plots, ready",
" to be compiled.  The default is `input` to produce a TeX file which can",
" be included.",
"",
" `blacktext` forces all text to be written in black. `colortext` enables",
" colored text. The default is `blacktext`.",
"",
" `rounded` sets line caps and line joins to be rounded. `butt` sets butt",
" caps and mitered joins and is the default.",
"",
" `linewidth` and `pointscale` scale the width of lines and the size of point",
" symbols, respectively.",
"",
" `psarrows` draws `arrow`s using PSTricks commands which are shorter but do",
" not offer all options. `gparrows` selects drawing arrows using gnuplot's own",
" routine for full functionality instead.",
"",
" With the option `pdftricks2` you can create output for the `pdftricks2`",
" macro package, which can be used with pdflatex/lualatex. Otherwise, output",
" for the `pstricks` package with traditional tex/latex or xelatex is",
" produced.",
"",
" The old `hacktext` option has been replaced by the new default format (%h),",
" see `format specifiers`.",
"",
" Transparency requires support by Ghostscript or conversion to PDF."
#else /* JAPANESE_DOC */
"1 pstricks",
"?commands set terminal pstricks",
"?set terminal pstricks",
"?set term pstricks",
"?terminal pstricks",
"?term pstricks",
"?pstricks",
" `pstricks` ドライバは TeX、または LaTeX の \"pstricks.sty\" マクロパッ",
" ケージと共に使われることを意図しています。",
" \"pstricks.sty\" は必要ですが、もちろん PostScript を解釈するプリンタ、",
" または Ghostscript のような変換ソフトも必要です。",
"",
" PSTricks は以下にあります。",
"^ <a href=\"http://tug.org/PSTricks/\">",
"           http://tug.org/PSTricks/。",
"^ </a>",
" このドライバは、PSTricks パッケージの全ての能力を使おうとなどとは全く考",
" えていません。",
"",
" 書式:",
"       set terminal pstricks",
"                      {unit | size <XX>{unit},<YY>{unit}}",
"                      {standalone | input}",
"                      {blacktext | colortext | colourtext}",
"                      {linewidth <lw>} {rounded | butt}",
"                      {pointscale <ps>}",
"                      {psarrows | gparrows}",
"                      {background <rgbcolor>}",
"                      {pstricks | pdftricks2}",
"",
" オプション `unit` は、内部サイズ 1x1 のグラフを生成します。デフォルトの",
" グラフは、`size 5in,3in` です。",
"",
" `standalone` は、そのままコンパイルできる、複数のグラフも可能な LaTeX",
" ファイルを生成します。デフォルトは `input` で、これは他の LaTeX ファイ",
" から include できるものを生成します。",
"",
" `blacktext` は、すべての文字列を強制的に黒で書き出し、`colortext` は色",
" 付きの文字を可能にします。デフォルトは `blacktext` です。",
"",
" `rounded` は、線の端や接合部を丸くし、デフォルトの `butt` は尖った端と",
" 角張った接合部を使用します。",
"",
" `linewidth` と `pointscale` は、それぞれ線幅と点 (point) 記号のサイズを",
" 伸縮します。",
"",
" `psarrows` は、`arrow` (矢) を PSTricks コマンドで描きますが、これは少",
" し短かく、そしてすべてのオプションを無視します。`gparrows` は、それに代",
" わり、gnuplot 自身のサブルーチンによる、すべての gnuplot 用の機能に対応",
" する arrow を描きます。",
"",
" オプション `pdftricks2` を使用すると、`pdftricks` マクロパッケージ用の",
" 出力を生成し、これは pdflatex/lualatex で利用できます。そうでない場合",
" は伝統的な tex/latex、あるいは xelatex で使用する `pstricks` パッケー",
" ジ用の出力を生成します。",
"",
" 古いオプション `hacktext` は、新しいデフォルトの書式 (%h) で置き換えら",
" れています。以下参照: `format specifiers`。",
"",
" 透過色の使用は、Ghostscript、または PDF に変換する他のものがそれをサポ",
" ートしている必要があります。"
#endif /* JAPANESE_DOC */
END_HELP(pstricks)
START_HELP(qt)
#ifndef JAPANESE_DOC
"1 qt",
"?set terminal qt",
"?terminal qt",
"?set term qt",
"?term qt",
"?qt",
" The `qt` terminal device generates output in a separate window with the Qt library."
"",
" Syntax:",
"         set term qt {<n>}",
"                     {size <width>,<height>}",
"                     {position <x>,<y>}",
"                     {title \"title\"}",
"                     {font <font>} {{no}enhanced}",
"                     {rounded|butt}",
"                     {{no}replotonresize}",
"                     {{no}antialias}",
"                     {linewidth <lw>} {dashlength <dl>}",
"                     {{no}persist} {{no}raise} {{no}ctrl}",
"                     {close}",
"                     {widget <id>}",
"",
" Multiple plot windows are supported: `set terminal qt <n>` directs the",
" output to plot window number n.",
"",
" The default window title is based on the window number. This title can also",
" be specified with the keyword \"title\".",
"",
" Plot windows remain open even when the `gnuplot` driver is changed to a",
" different device. A plot window can be closed by pressing the letter 'q'",
" while that window has input focus, by choosing `close` from a window",
" manager menu, or with `set term qt <n> close`.",
"",
" The size of the plot area is given in pixels, it defaults to 640x480.",
" In addition to that, the actual size of the window also includes the space",
" reserved for the toolbar and the status bar.",
" When you resize a window, the plot is immediately scaled to fit in the",
" new size of the window. The `qt` terminal scales the whole plot, including",
" fonts and linewidths, and keeps its global aspect ratio constant.",
" If you type `replot`, click the `replot` icon in the terminal toolbar or",
" type a new `plot` command, the new plot will completely fit in the window",
" and the font size and the linewidths will be reset to their defaults.",
"",
" The position option can be used to set the position of the plot window.",
" The position option only applies to the first plot after the `set term`",
" command.",
"",
"",
" The active plot window (the one selected by `set term qt <n>`) is",
" interactive. Its behaviour is shared with other terminal types. See `mouse`",
" for details. It also has some extra icons, which are supposed to be",
" self-explanatory.",
"",
" This terminal supports an enhanced text mode, which allows font and other",
" formatting commands (subscripts, superscripts, etc.) to be embedded in labels",
" and other text strings. The enhanced text mode syntax is shared with other",
" gnuplot terminal types. See `enhanced` for more details.",
"",
" <font> is in the format \"FontFace,FontSize\", i.e. the face and the size",
" comma-separated in a single string. FontFace is a usual font face name, such",
" as \'Arial\'. If you do not provide FontFace, the qt terminal will use",
" \'Sans\'. FontSize is the font size, in points. If you do not provide it,",
" the qt terminal will use a size of 9 points.",
"    For example :",
"       set term qt font \"Arial,12\"",
"       set term qt font \"Arial\" # to change the font face only",
"       set term qt font \",12\" # to change the font size only",
"       set term qt font \"\" # to reset the font name and size",
"",
" The dashlength affects only custom dash patterns, not Qt's built-in set.",
"",
#if (QTVER == 4)
" The Qt rendering speed is affected strongly by the rendering mode used.",
" In Qt version 4 this can be controlled by the environmental",
" variable QT_GRAPHICSSYSTEM. The options are \"native\", \"raster\", or",
" \"opengl\" in order of increasing rendering speed.  For earlier versions",
" of Qt the terminal defaults to \"raster\".",
"",
#endif
" To obtain the best output possible, the rendering involves three",
" mechanisms : antialiasing, oversampling and hinting.",
" Oversampling combined with antialiasing provides subpixel accuracy,",
" so that gnuplot can draw a line from non-integer coordinates. This avoids",
" wobbling effects on diagonal lines ('plot x' for example).",
" Hinting avoids the blur on horizontal and vertical lines caused by",
" oversampling. The terminal will snap these lines to integer coordinates so",
" that a one-pixel-wide line will actually be drawn on one and only one pixel.",
"",
" `butt` instructs the driver to use a line drawing method that does",
" not overshoot the desired end point of a line.  This setting is only",
" applicable for line widths greater than 1.  This setting is most useful when",
" drawing horizontal or vertical lines.  Default is `rounded`.",
"",
" The option `replotonresize` replots the data when the plot window is",
" resized. Without this option, the even-aspect-ratio scaling may result in the",
" plot filling only part of the window after resizing.  With this option, gnuplot",
" does a full replot on each resize event, resulting in better space",
" utilization. This option is generally desirable, unless the potentially",
" CPU-intensive replotting during resizing is a concern. Replots can be manually",
" initiated with hotkey 'e' or the 'replot' command.",
"",
" By default, the window is raised to the top of your desktop when a plot is",
" drawn. This can be controlled with the keyword \"raise\".",
" The keyword \"persist\" will prevent gnuplot from exiting before you",
" explicitly close all the plot windows.",
"",
" The <space> key raises the gnuplot console window [MS Windows only].",
" The 'q' key closes the plot window. These hot keys can be changed to",
" ctrl-space and ctrl-q using the terminal option keyword \"{no}ctrl\".",
" However the preferred way to select ctrl-q rather than 'q' is to use",
" the toggle in the tools widget of the plot window.",
"",
" The gnuplot outboard driver, gnuplot_qt, is searched in a default place",
" chosen when the program is compiled.  You can override that by defining",
" the environment variable GNUPLOT_DRIVER_DIR."
#else /* JAPANESE_DOC */
"1 qt",
"?set terminal qt",
"?terminal qt",
"?set term qt",
"?term qt",
"?qt",
" `qt` 出力形式は、Qt ライブラリを用いて別ウィンドウへの出力を生成します。",
"",
" 書式:",
"         set term qt {<n>}",
"                     {size <width>,<height>}",
"                     {position <x>,<y>}",
"                     {title \"title\"}",
"                     {font <font>} {{no}enhanced}",
"                     {rounded|butt}",
"                     {{no}replotonresize}",
"                     {{no}antialias}",
"                     {linewidth <lw>} {dashlength <dl>}",
"                     {{no}persist} {{no}raise} {{no}ctrl}",
"                     {close}",
"                     {widget <id>}",
"",
" 複数の描画ウィンドウもサポートしていて、`set terminal qt <n>` とすれば",
" 番号 n の描画ウィンドウへ出力します。",
"",
" デフォルトのウィンドウタイトルは、このウィンドウ番号に基づいています。",
" そのタイトルはキーワード \"title\" でも指定できます。",
"",
" 描画ウィンドウは、`gnuplot` の出力形式を別なものに変更した後でも開いた",
" まま残ります。描画ウィンドウは、そのウィンドウが入力フォーカスを持って",
" いる状態で文字 'q' を打つか、ウィンドウマネージャメニューで `close` を",
" 選択するか、または `set term qt <n> close` とすることで閉じることができ",
" ます。",
"",
" 描画領域のサイズはピクセル単位で与えます、デフォルトは 640x480 です。",
" それに加えて、ウィンドウの実際のサイズには、ツールバーやステータスバー",
" 用のスペースも追加されます。",
" ウィンドウのサイズを変更すると、描画グラフもウィンドウの新しいサイズに",
" ぴったり合うようにすぐに伸縮されます。`qt` 出力形式はフォント、線幅も含",
" めて描画全体を伸縮しますが、全体のアスペクト比は一定に保ちます。",
" その後 `replot` とタイプするか、ターミナルツールバーの `replot` アイコ",
" ンをクリックするか、新たに `plot` コマンドを入力すると、その新しい描画",
" では完全にそのウィンドウに合わせられますが、フォントサイズや線幅はそれ"
" ぞれのデフォルトにリセットされます。",
"",
" position オプションは描画ウィンドウの位置を設定するのに使えます。これは",
" コマンド `set term` 後の最初の描画にのみ適用されます。",
"",
"",
" 現在の描画ウィンドウ (`set term qt <n>` で選択されたもの) は対話型で、",
" その挙動は、他の出力形式と共通です。詳細は、以下参照: `mouse`。それには",
" 追加のアイコンもいくつかついていますが、それらはそれ自体が説明的なもの",
" になっているはずです。",
"",
" この出力形式は、拡張文字列処理モード (enhanced text mode) をサポートし",
" ていて、フォントや書式コマンド (上付、下付など) をラベルや他の文字列に",
" 埋め込むことができます。拡張文字列処理モードの書式は、gnuplot の他の出",
" 力形式と共通です。詳細は、以下参照: `enhanced`。",
"",
" <font> は \"FontFace,FontSize\" の形式で、FontFace と FontSize とをコ",
" ンマで分離して一つの文字列として書きます。FontFace は、\'Arial\' のよ",
" うな通常のフォント名です。FontFace を与えない場合は、qt 出力形式は",
" \'Sans\' を使用します。FontSize はポイント単位のフォントサイズです。",
" FontSize を与えない場合は、qt 出力形式は 9 ポイントを使用します。",
"    例 :",
"       set term qt font \"Arial,12\"",
"       set term qt font \"Arial\" # フォント名のみ変更",
"       set term qt font \",12\" # フォントサイズのみ変更",
"       set term qt font \"\" # フォント名、、フォントサイズをリセット",
"",
" dashlength は、点線/破線パターンのユーザ定義にのみ影響を与え、Qt が内部",
" に持っているパターンには影響を与えません。",
"",
#if (QTVER == 4)
" Qt のレンダリング速度は、使用するレンダリングモードによって大きく変わり",
" ます。Qt バージョン 4 では、これは環境変数 QT_GRAPHICSSYSTEM で制御でき",
" るようになっています。指定するオプションは、レンダリング速度の遲い順に",
" \"native\", \"raster\", \"opengl\" となっています。従来の Qt の版では、",
" この出力形式ではデフォルトを \"raster\" にします。",
"",
#endif
" 可能な限り最も良い出力を生成するために、このレンダリングはアンチアリア",
" ス、オーバーサンプリング、ヒンチングの 3 つの機構を持っています。",
" オーバーサンプリングは、アンチエイリアスと組でピクセルよりも小さいサイ",
" ズでの精度を提供し、gnuplot が非整数座標の直線を書けるようになります。",
" これは、対角方向の直線 (例えば 'plot x') が左右に揺れるのを避けます。",
" ヒンティングは、オーバーサンプリングによって引き起こされる水平、垂直方",
" 向の線分のぼかしを避けます。この出力形式は、これらの直線を整数座標に揃",
" え、それにより、1 ピクセル幅の直線は本当に 1 つ (1 つより多くも少なく",
" もない) のピクセルで描画します。",
"",
" `butt` は、求める線分の端点がはみ出さないような線分の描画方法を使うよう",
" ドライバに指示します。この設定は、線幅が 1 より大きい場合にのみ適用しま",
" す。この設定は、水平か垂直の線を書く場合に最も有用です。デフォルトは、",
" `rounded` です。",
"",
" オプション `replotonresize` は、描画ウィンドウのサイズが変更されるとデ",
" ータを replot します。このオプションがない状態では、アスペクト比を変え",
" ないウィンドウサイズ変更の後で、ウィンドウの一部分しか描画されないかも",
" しれません。このオプションをつけると、gnuplot は個々のサイズ変更イベン",
" ト毎に完全に replot を行い、スペースを適切に利用した結果になります。こ",
" のオプションは、サイズ変更の間の再描画に対する CPU の内在的な集中に心配",
" がある場合を除いては、一般的に望ましいものです。replot は、ホットキーの",
" 'e' を使ったりコマンド 'replot' によって手動で実行することも可能です。",
"",
" デフォルトでは、描画が行われたときにウィンドウはデスクトップの一番上",
" (最前面) に表示されます。これは、キーワード \"raise\" で制御できます。",
" キーワード \"persist\" は、すべての描画ウインドウを明示的に閉じない間",
" は、gnuplot が終了しないようにします。",
"",
" <space> キーは gnuplot コンソールウィンドウを上に上げます (MS Windows",
" のみ)。'q' は描画ウィンドウを閉じます。これらのホットキーは、terminal",
" オプションキーワドの \"{no}ctrl\" を使うことで、ctl-space や ctrl-q に",
" 変更できます。しかし、'q' の代わりに ctrl-q を選択するよりもよい方法は、",
" 描画ウィンドウのツールウィジェットのトグルスィッチを使うことです。",
"",
" プログラムのコンパイル時に選択した場所に、gnuplot の外部ドライバ",
" gnuplot_qt がインストールされますが、環境変数 GNUPLOT_DRIVER_DIR を設定",
" することで置き場所を変更することもできます。"
#endif /* JAPANESE_DOC */
END_HELP(qt)
START_HELP(regis)
#ifndef JAPANESE_DOC
"1 regis",
"?commands set terminal regis",
"?set terminal regis",
"?set term regis",
"?terminal regis",
"?term regis",
"?regis",
" Note: legacy terminal.",
" The `regis` terminal device generates output in the REGIS graphics language.",
" It has the option of using 4 (the default) or 16 colors.",
"",
" Syntax:",
"       set terminal regis {4 | 16}"
#else /* JAPANESE_DOC */
"1 regis",
"?commands set terminal regis",
"?set terminal regis",
"?set term regis",
"?terminal regis",
"?term regis",
"?regis",
" 注意: 古い (legacy) 出力形式です。",
" `regis` ドライバは REGIS グラフィック言語での出力を生成します。このド",
" ライバには色を 4 色使うか (デフォルト) 16 色使うかのオプションがありま",
" す。",
"",
" 書式:",
"       set terminal regis {4 | 16}"
#endif /* JAPANESE_DOC */
END_HELP(regis)
START_HELP(sixelgd)
#ifndef JAPANESE_DOC
"1 sixelgd",
"?commands set terminal sixelgd",
"?set terminal sixelgd",
"?set term sixelgd",
"?terminal sixelgd",
"?term sixelgd",
"?sixelgd",
" Syntax:",
"       set terminal sixelgd",
"              {{no}enhanced} {{no}truecolor} {rounded|butt}",
"              {linewidth <lw>} {dashlength <dl>}",
"              {tiny | small | medium | large | giant}",
"              {font \"<face> {,<pointsize>}\"} {fontscale <scale>}",
"              {size <x>,<y>} {animate|anchor} {{no}transparent}",
"              {background <rgb_color>}",
"",
" The `sixel` output format was originally used by DEC terminals and printers.",
" The gnuplot sixelgd driver produces a sixel output stream by converting a",
" PNG image created internally using the gd library. The sixel output stream",
" can be viewed in the terminal as it is created or it can be written to a file",
" so that it can be replayed later by echoing the file to the terminal.",
"",
" The sixel terminal is also useful for displaying gnuplot graphics on the",
" linux console when no windowing system or graphics display manager is active.",
" See `linux console`.",
"",
" The `linewidth` and `dashlength` options are scaling factors that affect all",
" lines drawn.  They are multiplied by values requested in drawing commands.",
"",
" By default the sixel output uses 16 indexed colors. The `truecolor` option",
" instead creates a 24-bit RGB png image that is mapped down onto 256 colors",
" in the output sixel image. Transparent fill styles require the `truecolor`",
" option. See `fillstyle`.",
"",
" `butt` instructs the driver to use a line drawing method that does",
" not overshoot the desired end point of a line.  This setting is only",
" relevant for line widths greater than 1.  The alternative is `rounded`,",
" which produces somewhat more uniform curved lines but can be much slower.",
"",
" The details of font selection in the gdlib terminals are complicated.",
" For more information please see `fonts`.",
"",
" The output plot size <x,y> is given in pixels.  It defaults to 640x480,",
" which is probably smaller than the size of your terminal window.",
"",
" `transparent` instructs the driver to make the background color transparent,",
" but most terminal emulators do not support this. Default is `notransparent`.",
"",
" Gnuplot's sixelgd output has been successfully tested with terminal",
" emulators including konsole, mlterm, mintty, and the vt340 mode of xterm",
" (note that distributed copies of xterm may not have been configured",
" to support sixel graphics). Sixel support in the KDE konsole terminal",
" was added in version 22.04.0.",
"",
"?set terminal sixelgd animate",
"?set term sixelgd animate",
"?term sixelgd animate",
"?set terminal sixelgd anchor",
"?set term sixelgd anchor",
"?term sixelgd anchor",
"      set term sixel animate",
"      set term sixel anchor",
"",
" The `animate` option resets the cursor position to the terminal top left at",
" the start of every plot so that successive plots overwrite the same area on",
" the screen rather than having earlier plots scroll off the top. This can be",
" used to create an in-place animation. `anchor` has the same effect.",
""
#else /* JAPANESE_DOC */
"1 sixelgd",
"?commands set terminal sixelgd",
"?set terminal sixelgd",
"?set term sixelgd",
"?terminal sixelgd",
"?term sixelgd",
"?sixelgd",
" 書式:",
"       set terminal sixelgd",
"              {{no}enhanced} {{no}truecolor} {rounded|butt}",
"              {linewidth <lw>} {dashlength <dl>}",
"              {tiny | small | medium | large | giant}",
"              {font \"<face> {,<pointsize>}\"} {fontscale <scale>}",
"              {size <x>,<y>} {animate} {{no}transparent}",
"              {background <rgb_color>}",
"",
" `sixel` 出力フォーマットは、元々 DEC のターミナルやプリンタで使われて",
" いたものです。gnuplot の sixelgd ドライバは、gd ライブラリを内部的に使",
" 用して作成した PNG 画像を変換して sixel 出力列を生成します。sixel 出力",
" 列は、それを作成したときにターミナル上に表示させることができますが、ま",
" たはその出力列をファイルに書きだしておいて、後からそのファイルをターミ",
" ナルに吐き出すことで表示に置き換えることもできます。",
"",
" sixel 出力形式は、ウィンドウシステムか、またはグラフィックディスプレイ",
" マネージャが有効でない場合に、gnuplot のグラフを linux コンソールで表",
" 示させたい場合にも便利です。以下参照: `linux console`。",
"",
" オプション `linewidth` と `dashlength` は拡大率で、描画されるすべての",
" 線に影響を与えます。これらは、描画コマンドで要求される値にかけ算されま",
" す。",
"",
" デフォルトでは、sixel 出力は、番号付きの 16 色を使用します。オプション",
" `truecolor` では、24bit RGB PNG 画像を作成し、それを 256 色の sixel 画",
" 像出力に減色します。透過型塗り潰しスタイルには、オプション `truecolor`",
" が必要です。以下参照: `fillstyle`。",
"",
" `butt` は線分の描画で、その端の点でのはみだしを起こさない描画メソッド",
" を使うようドライバに指示します。この設定は、線幅が 1 より大きい場合に",
" のみ意味があります。これの逆が `rounded` で、多少より均一な曲線を生成",
" しますが、より遅くなります。",
"",
" gdlib を使用する出力形式におけるフォントの選択の詳細は、やや複雑です。",
" 詳細は、以下参照: `fonts`。",
"",
" 出力描画サイズ <x,y> はピクセル単位で与えます。デフォルトは 640x480 で",
" すが、あなたのターミナルウィンドウのサイズより多分小さいでしょう。",
"",
" `transparent` は、ドライバに背景色の透明化 (transparent) を行うよう指示",
" しますが、ほとんどの端末エミュレータはこれをサポートしていません。デフ",
" ォルトは `notransparent` です。",
"",
" gnuplot の sixelgd 出力は、以下の端末エミュレータ上でテストされ正常動",
" 作しています: konsole, mlterm, mintty, vt340 モードの xterm (注意: 元",
" 々付属する xterm は sixel グラフィックをサポートするようにビルドされて",
" いないかもしれません)。KDE konsole terminal の sixel サポートは、バー",
" ジョン 22.04.0 で追加されました。",
"",
"?set terminal sixelgd animate",
"?set term sixelgd animate",
"?term sixelgd animate",
"      set term sixel animate",
"",
" オプション `animate` は、連続する plot 命令で前のグラフが上にスクロー",
" ルして消える代わりに、各 plot がスクリーンの同じ領域を上書きするように",
" 各 plot の開始時にカーソル位置をターミナルの左上にリセットします。これ",
" は場所固定式アニメーション (in-place animation) を作るのに使えます。",
""
#endif /* JAPANESE_DOC */
END_HELP(sixelgd)
START_HELP(svg)
#ifndef JAPANESE_DOC
"1 svg",
"?commands set terminal svg",
"?set terminal svg",
"?set term svg",
"?terminal svg",
"?term svg",
"?svg",
" This terminal produces files in the W3C Scalable Vector Graphics format.",
"",
" Syntax:",
"       set terminal svg {size <x>,<y> {|fixed|dynamic}}",
"                        {mouse} {standalone | jsdir <dirname>}",
"                        {name <plotname>}",
"                        {font \"<fontname>{,<fontsize>}\"} {{no}enhanced}",
"                        {fontscale <multiplier>}",
"                        {rounded|butt|square} {solid|dashed} {linewidth <lw>}",
"                        {background <rgb_color>}",
"",
" where <x> and <y> are the size of the SVG plot to generate,",
" `dynamic` allows a svg-viewer to resize plot, whereas the default",
" setting, `fixed`, will request an absolute size.",
"",
" `linewidth <w>` increases the width of all lines used in the figure",
" by a factor of <w>.",
"",
" <font> is the name of the default font to use (default Arial) and",
" <fontsize> is the font size (in points, default 12). SVG viewing",
" programs may substitute other fonts when the file is displayed.",
"",
" The enhanced text mode syntax is shared with other gnuplot terminal types.",
" See `enhanced` for more details.",
"",
" The `mouse` option tells gnuplot to add support for mouse tracking and for",
" toggling individual plots on/off by clicking on the corresponding key entry.",
" By default this is done by including a link that points to a script in a",
" local directory, usually /usr/local/share/gnuplot/<version>/js.",
" You can change this by using the `jsdir` option to specify either a",
" different local directory or a general URL. The latter is usually",
" appropriate if you are embedding the svg into a web page.",
" Alternatively, the `standalone` option embeds the mousing code in the svg",
" document itself rather than linking to an external resource.",
"",
" When an SVG file will be used in conjunction with external files,",
" e.g. if it is referenced by javascript code in a web page or parent document,",
" then a unique name is required to avoid potential conflicting references",
" to other SVG plots.  Use the `name` option to ensure uniqueness.",
""
#else /* JAPANESE_DOC */
"1 svg",
"?commands set terminal svg",
"?set terminal svg",
"?set term svg",
"?terminal svg",
"?term svg",
"?svg",
" このドライバは W3C SVG (Scalable Vector Graphics) フォーマットを生成し",
" ます。",
"",
" 書式:",
"       set terminal svg {size <x>,<y> {|fixed|dynamic}}",
"                  {mouse} {standalone | jsdir <dirname>}",
"                  {name <plotname>}",
"                  {font \"<fontname>{,<fontsize>}\"} {{no}enhanced}",
"                  {fontscale <multiplier>}",
"                  {rounded|butt|square} {solid|dashed} {linewidth <lw>}",
"                  {background <rgb_color>}",
"",
" ここで <x> と <y> は生成される SVG グラフのサイズですが、`dynamic` は",
" svg ビューワに描画のリサイズを許し、`fixed` は絶対サイズを要求します",
" (デフォルト)。",
"",
" `linewidth <w>` は図の中で使用される全ての線の幅を因子 <w> だけ増加さ",
" せます。",
"",
" <font> はデフォルトとして使われるフォント名 (デフォルトでは Arial)、",
" <fontsize> はポイント単位でのフォントサイズ (デフォルトは 12) です。",
" svg ビューワソフトは、そのファイルの表示の際には別の代用フォントを使う",
" ことになるでしょう。",
"",
" 拡張文字列処理 (enhanced) モードの書式指定は、他の出力形式の場合と同じ",
" です。詳細は、以下参照: `enhanced`。",
"",
" オプション `mouse` は、マウストラッキング機能と、対応する key 上でクリ",
" ックすることでそれぞれのグラフの描画を On/Off にする機能をサポートを追",
" 加することを gnuplot に指示します。デフォルトではローカルディレクトリ、",
" 通常は /usr/local/share/gnuplot/<version>/js 内のあるスクリプトを指すリ",
" ンクを取り込むことで行われますが、オプション `jsdir` に別のローカルディ",
" レクトリか、通常の URL を指定することでこれは変更できます。SVG 画像を",
" Web ページに入れるのであれば、普通は後者の URL の方を指定します。一方で",
" オプション `standalone` は、マウス操作プログラムを SVG 文書自体に埋め込",
" み、外部リソースへのリンクは行いません。",
"",
" SVG ファイルを何かの外部ファイルと組み合わせて利用したい場合、例えばそ",
" れがある Web ページや親文書の javascriptコードから参照されているような",
" 場合、他の SVG グラフへの参照との衝突を避けるために一意的な名前が必要に",
" なります。その場合はオプション `name` を使って固有の名前を確保してくだ",
" さい。",
""
#endif /* JAPANESE_DOC */
END_HELP(svg)
START_HELP(svga)
#ifndef JAPANESE_DOC
"1 svga",
"?commands set terminal svga",
"?set terminal svga",
"?set term svga",
"?terminal svga",
"?term svga",
"?svga",
" Legacy terminal. The `svga` terminal driver supports PCs with SVGA graphics.",
" It is typically only compiled with DJGPP and uses the GRX graphics library.",
" There is also a variant for Windows 32bit, which is mainly used for",
" debugging. The underlying library also supports X11, Linux console and SDL,",
" but these targets are currently not supported.",
"",
" Syntax:",
"       set terminal svga {font \"<fontname>\"}",
"                         {{no}enhanced}",
"                         {background <rgb color>}",
"                         {linewidth|lw <lw>}",
"                         {pointscale|ps <scale>}",
"                         {fontscale|fs <scale>}",
"",
" Enhanced text support can be activated using the `enhanced` option,",
 " see `enhanced text`.  Note that changing the font size in enhanced text is",
" currently not supported. Hence, super- and subscripts will have the same size.",
"",
" The `linewidth` parameter scales the width of lines. The `pointscale`",
" parameter sets the scale factor for point symbols. You can use `fontscale`",
" to scale the bitmap font. This might be useful if you have a hi-res display.",
" Note that integer factors give best results."
#else /* JAPANESE_DOC */
"1 svga",
"?commands set terminal svga",
"?set terminal svga",
"?set term svga",
"?terminal svga",
"?term svga",
"?svga",
" 古い (legacy) 出力形式です。`svga` ドライバは SVGA グラフィックの PC を",
" サポートします。これは、通常は DJGPP のみでコンパイルされ、GRX グラフィ",
" ックライブラリを使用しますが、Windows 32bit 用の変種もあり、それは主に",
" デバッグ用です。ベースになるライブラリは、X11 や Linux コンソール、SDL",
" もサポートしていますが、現在それらのターゲットはサポートしていません。",
"",
" 書式:",
"       set terminal svga {font \"<fontname>\"}",
"                         {{no}enhanced}",
"                         {background <rgb color>}",
"                         {linewidth|lw <lw>}",
"                         {pointscale|ps <scale>}",
"                         {fontscale|fs <scale>}",
"",
" `enhanced` オプションにより、拡張文字列処理のサポートが有効になります。",
" 以下参照: `enhanced text`。拡張文字列内でのフォントサイズの変更は現在は",
" サポートしていないことに注意してください。よって、上付き、下付き文字も",
" 同じサイズになります。",
"",
" パラメータ `linewidth` は線の幅を拡大します。パラメータ `pointscale` は",
" point 記号の拡大率を設定します。ビットマップフォントを拡大するには、",
" `fontscale` を使うことができます。それは高解像度ディスプレイを使ってい",
" る場合は有用でしょう。",
" 整数倍の拡大率が最も良い結果を生むことに注意してください。"
#endif /* JAPANESE_DOC */
END_HELP(svga)
START_HELP(tek40)
#ifndef JAPANESE_DOC
"1 tek40",
"?commands set terminal tek40xx",
"?set terminal tek40xx",
"?set term tek40xx",
"?terminal tek40xx",
"?term tek40xx",
"?tek40",
"?commands set terminal vttek",
"?set terminal vttek",
"?set term vttek",
"?terminal vttek",
"?term vttek",
"?vttek",
"?commands set terminal xterm",
"?set terminal xterm",
"?set term xterm",
"?terminal xterm",
"?term xterm",
"?xterm",
#ifdef KERMIT
"?commands set terminal kc-tek40xx",
"?set terminal kc-tek40xx",
"?set term kc-tek40xx",
"?terminal kc-tek40xx",
"?term kc-tek40xx",
"?kc-tek40xx",
"?commands set terminal km-tek40xx",
"?set terminal km-tek40xx",
"?set term km-tek40xx",
"?terminal km-tek40xx",
"?term km-tek40xx",
"?km-tek40xx",
#endif
#ifdef SELANAR
"?commands set terminal selanar",
"?set terminal selanar",
"?set term selanar",
"?terminal selanar",
"?term selanar",
"?selanar",
#endif
#ifdef SIXEL
"?commands set terminal sixeltek",
"?set terminal sixeltek",
"?set term sixeltek",
"?terminal sixeltek",
"?term sixeltek",
"?sixeltek",
" Syntax:",
"    set terminal sixeltek {<fontsize>} {color|colors <n>|mono} {size <x>,<y>}",
"",
" The `sixel` output format was originally used by DEC terminals and printers.",
" This driver supports palette images with a maximum of 256 colors. The default",
" is 16 which can be changed using the `colors` option.",
"",
" The font size can be specified as `small`, `medium` or `large`.",
"",
" For use with xterm emulation, xterm must be compiled/configured with",
" \"--enable-sixel-graphics\" and started with \"-ti 340\" on the command line.",
" The menu option \"sixelScrolling\" should be selected.",
"",
" Note that gnuplot also supports another sixel output terminal, `sixelgd`,",
" that offers more options and features."
#endif
#ifdef BITGRAPH
"?commands set terminal bitgraph",
"?set terminal bitgraph",
"?set term bitgraph",
"?terminal bitgraph",
"?term bitgraph",
"?bitgraph",
#endif
" This family of terminal drivers supports a variety of VT-like terminals.",
" `tek40xx` supports Tektronix 4010 and others as well as most TEK emulators.",
" `vttek` supports VT-like tek40xx terminal emulators.",
" The following are present only if selected when gnuplot is built:",
" `kc-tek40xx` supports MS-DOS Kermit Tek4010 terminal emulators in color;",
" `km-tek40xx` supports them in monochrome. `selanar` supports Selanar graphics.",
" `bitgraph` supports BBN Bitgraph terminals.",
" None have any options."
#else /* JAPANESE_DOC */
"1 tek40",
"?commands set terminal tek40xx",
"?set terminal tek40xx",
"?set term tek40xx",
"?terminal tek40xx",
"?term tek40xx",
"?tek40",
"?commands set terminal vttek",
"?set terminal vttek",
"?set term vttek",
"?terminal vttek",
"?term vttek",
"?vttek",
"?commands set terminal xterm",
"?set terminal xterm",
"?set term xterm",
"?terminal xterm",
"?term xterm",
"?xterm",
#ifdef KERMIT
"?commands set terminal kc-tek40xx",
"?set terminal kc-tek40xx",
"?set term kc-tek40xx",
"?terminal kc-tek40xx",
"?term kc-tek40xx",
"?kc-tek40xx",
"?commands set terminal km-tek40xx",
"?set terminal km-tek40xx",
"?set term km-tek40xx",
"?terminal km-tek40xx",
"?term km-tek40xx",
"?km-tek40xx",
#endif
#ifdef SELANAR
"?commands set terminal selanar",
"?set terminal selanar",
"?set term selanar",
"?terminal selanar",
"?term selanar",
"?selanar",
#endif
#ifdef SIXEL
"?commands set terminal sixeltek",
"?set terminal sixeltek",
"?set term sixeltek",
"?terminal sixeltek",
"?term sixeltek",
"?sixeltek",
" 書式:",
"    set terminal sixeltek {<fontsize>} {color|colors <n>|mono}",
"                          {size <x>,<y>}",
"",
" `sixel` 出力形式は、元は DEC ターミナル、プリンタで使われていました。",
" このドライバは、最大で 256 色のパレット画像をサポートします。デフォルト",
" は 16 色で、これはオプション `colors` で変更できます。",
"",
" フォントサイズは、`small`, `medium`, `large` の何れかを指定できます。",
"",
" xterm エミュレーションで利用する場合、\"--enable-sixel-graphics\" 付き",
" で xterm が configure/コンパイルされていて、かつ \"-ti 340\" をつけて起",
" 動する必要があります。",
" メニューオプション \"sixelScrolling\" を選択するといいでしょう。",
"",
" gnuplot は他の sixel 出力形式 `sixelgd` もサポートしていることに注意し",
" てください。それはより多くのオプションや機能を提供しています。"
#endif
#ifdef BITGRAPH
"?commands set terminal bitgraph",
"?set terminal bitgraph",
"?set term bitgraph",
"?terminal bitgraph",
"?term bitgraph",
"?bitgraph",
#endif
" このドライバ群は VT-ライクな端末のいくつかをサポートします。`tek40xx`",
" は Tektronix 4010 とその他ほとんどの TEK エミュレータをサポートします。",
" `vttek` は VT-ライクな tek40xx 端末エミュレータをサポートします。",
" 以下のものは、gnuplot のコンパイル時に選択されたもののみが利用できます:",
" `kc-tek40xx` はカラーの MS-DOS Kermit Tek4010 ターミナルエミュレータを、",
" `km-tek40xx` はその白黒版をサポートします。",
" `selanar` は Selanar グラフィック端末をサポートします。",
" `bitgraph` は BBN Bitgraph 端末をサポートします。",
" いずれもオプションはありません。"
#endif /* JAPANESE_DOC */
END_HELP(tek40)
START_HELP(tek410x)
#ifndef JAPANESE_DOC
"1 tek410x",
"?commands set terminal tek410x",
"?set terminal tek410x",
"?set term tek410x",
"?terminal tek410x",
"?term tek410x",
"?tek410x",
" The `tek410x` terminal driver supports the 410x and 420x family of Tektronix",
" terminals.  It has no options."
#else /* JAPANESE_DOC */
"1 tek410x",
"?commands set terminal tek410x",
"?set terminal tek410x",
"?set term tek410x",
"?terminal tek410x",
"?term tek410x",
"?tek410x",
" `tek410x` ドライバは Tektronix 410x, 420x ファミリーをサポートしていま",
" す。オプションはありません。"
#endif /* JAPANESE_DOC */
END_HELP(tek410x)
START_HELP(texdraw)
#ifndef JAPANESE_DOC
"1 texdraw",
"?commands set terminal texdraw",
"?set terminal texdraw",
"?set term texdraw",
"?terminal texdraw",
"?term texdraw",
"?texdraw",
" The `texdraw` terminal driver supports the (La)TeX texdraw environment.  It is",
" intended for use with the texdraw package,",
" see https://www.ctan.org/tex-archive/graphics/texdraw/ .",
"",
"       set terminal texdraw",
"                      {size <XX>{unit},<YY>{unit}}",
"                      {standalone | input}",
"                      {blacktext | colortext | colourtext}",
"                      {linewidth <lw>} {rounded | butt}",
"                      {pointscale <ps>}",
"                      {psarrows | gparrows} {texpoints | gppoints}",
"                      {background <rgbcolor>}",
"",
" Note: Graphics are in grayscale only. Text is always black. Boxes and polygons",
" are filled using solid gray levels only. Patterns are not available.",
"",
" Points, among other things, are drawn using the LaTeX commands \"\\Diamond\" and",
" \"\\Box\".  These commands no longer belong to the LaTeX2e core; they are included",
" in the latexsym package, which is part of the base distribution and thus part",
" of any LaTeX implementation.  Please do not forget to use this package.",
" Other point types use symbols from the amssymb package. For compatibility with",
" plain TeX you need to specify the `gppoints` option.",
"",
" `standalone` produces a LaTeX file with possibly multiple plots, ready",
" to be compiled.  The default is `input` to produce a TeX file which can",
" be included.",
"",
" `blacktext` forces all text to be written in black. `colortext` enables",
" \"colored\" text. The default is `blacktext` and \"color\" means grayscale",
" really.",
"",
" `rounded` sets line caps and line joins to be rounded; `butt` sets butt",
" caps and mitered joins and is the default.",
"",
" `linewidth` and `pointscale` scale the width of lines and the size of point",
" symbols, respectively. `pointscale` only applies to `gppoints`.",
"",
" `psarrows` draws `arrow`s using TeXdraw commands which are shorter but do not",
" offer all options. `gparrows` selects drawing arrows using gnuplot's",
" own routine for full functionality instead.  Similarly, `texpoints`, and ",
" `gppoints` select LaTeX symbols or gnuplot's point drawing routines."
#else /* JAPANESE_DOC */
"1 texdraw",
"?commands set terminal texdraw",
"?set terminal texdraw",
"?set term texdraw",
"?terminal texdraw",
"?term texdraw",
"?texdraw",
" `texdraw` ドライバは (La)TeX texdraw 環境をサポートします。それは",
" texdraw パッケージと共に利用されることを想定しています。以下を参照して",
" ください: https://www.ctan.org/tex-archive/graphics/texdraw/ 。",
"",
"       set terminal texdraw",
"                      {size <XX>{unit},<YY>{unit}}",
"                      {standalone | input}",
"                      {blacktext | colortext | colourtext}",
"                      {linewidth <lw>} {rounded | butt}",
"                      {pointscale <ps>}",
"                      {psarrows | gparrows} {texpoints | gppoints}",
"                      {background <rgbcolor>}",
"",
" 注意: グラフィックは、灰色階調のみです。文字列は常に黒です。箱 (box) と",
" 多角形の塗り潰しは、ベタ塗り (solid) の灰色階調のみで、パターン塗りは使",
" えません。",
"",
" 数ある中で、点 (point) は、LaTeX のコマンド \"\\Diamond\", \"\\Box\" などを",
" 使って描かれます。これらのコマンドは現在は LaTeX2e のコアには存在せず",
" latexsym パッケージに含まれていますが、このパッケージ基本配布の一部で",
" あり、よって多くの LaTeX のシステムの一部になっています。このパッケー",
" ジを使うことを忘れないでください。",
" 他の点種は、amssymb パッケージの記号を使用します。plain TeX との互換性",
" のためには、オプション `gppoints` を指定する必要があります。",
"",
" `standalone` は、コンパイルの用意ができた、複数のグラフを持つ可能性のあ",
" る LaTeX ファイルを生成します。デフォルトは `input` で、他のファイルか",
" ら include できる TeX ファイルを生成します。",
"",
" `blacktext` は、強制的にすべの文字列を黒で書きますが、`colortext` は、",
" 「色付き」の文字列を可能にします。デフォルトは `blacktext` で、ここでの",
" 「色」は、実際には灰色階調を意味します。",
"",
" `rounded` は線の端や接合部を丸くし、`butt` は尖った端と角張った接合部を",
" 使用し、これがデフォルトです。",
"",
" `linewidth` と `pointscale` は、線幅と点記号のサイズをそれぞれ伸縮しま",
" す。`pointscale` は、`gppoints` にのみ適用します。",
"",
" `psarrows` は、TeXdraw コマンドを用いて `arrow` (矢) を書きます。これは",
" は簡単ですが、どんなオプションも提供しません。`gparrows` は、代わりに、",
" gnuplot 自身の、すべての機能を備えたサブルーチンによる arrow の描画を選",
" 択します。同様に、`texpoints` と `gppoints` は LaTeX の記号と gnuplot",
" の点描画ルーチンの選択です。"
#endif /* JAPANESE_DOC */
END_HELP(texdraw)
START_HELP(tgif)
#ifndef JAPANESE_DOC
"1 tgif",
"?commands set terminal tgif",
"?set terminal tgif",
"?set term tgif",
"?terminal tgif",
"?term tgif",
"?tgif",
" Legacy terminal (present only if gnuplot was configured --with-tgif).",
" Tgif is/was an Xlib based interactive 2-D vector graphics drawing tool",
" also capable of importing and marking up bitmap images.",
"",
" The `tgif` driver supports a choice of font and font size and multiple",
" graphs on the page.  The proportions of the axes are not changed.",
"",
" Syntax:",
"       set terminal tgif {portrait | landscape | default} {<[x,y]>}",
"                         {monochrome | color}",
"                         {{linewidth | lw} <LW>}",
"                         {solid | dashed}",
"                         {font \"<fontname>{,<fontsize>}\"}",
"",
" where <[x,y]> specifies the number of graphs in the x and y directions on the",
" page, `color` enables color, `linewidth` scales all linewidths by <LW>,",
" \"<fontname>\" is the name of a valid PostScript font, and <fontsize>",
" specifies the size of the PostScript font.",
" `defaults` sets all options to their defaults: `portrait`, `[1,1]`, `color`,",
" `linewidth 1.0`, `dashed`, `\"Helvetica,18\"`.",
"",
" The `solid` option is usually preferred if lines are colored, as they often",
" are in the editor.  Hardcopy will be black-and-white, so `dashed` should be",
" chosen for that.",
"",
" Multiplot is implemented in two different ways.",
"",
" The first multiplot implementation is the standard gnuplot multiplot feature:",
"",
"       set terminal tgif",
"       set output \"file.obj\"",
"       set multiplot",
"       set origin x01,y01",
"       set size  xs,ys",
"       plot ...",
"            ...",
"       set origin x02,y02",
"       plot ...",
"       unset multiplot",
"",
" See `set multiplot` for further information.",
"",
" The second version is the [x,y] option for the driver itself.  The advantage",
" of this implementation is that everything is scaled and placed automatically",
" without the need for setting origins and sizes; the graphs keep their natural",
" x/y proportions of 3/2 (or whatever is fixed by `set size`).",
"",
" If both multiplot methods are selected, the standard method is chosen and a",
" warning message is given.",
"",
" Examples of single plots (or standard multiplot):",
"       set terminal tgif                  # defaults",
"       set terminal tgif \"Times-Roman,24\"",
"       set terminal tgif landscape",
"       set terminal tgif landscape solid",
"",
" Examples using the built-in multiplot mechanism:",
"       set terminal tgif portrait [2,4]  # portrait; 2 plots in the x-",
"                                         # and 4 in the y-direction",
"       set terminal tgif [1,2]           # portrait; 1 plot in the x-",
"                                         # and 2 in the y-direction",
"       set terminal tgif landscape [3,3] # landscape; 3 plots in both",
"                                         # directions"
#else /* JAPANESE_DOC */
"1 tgif",
"?commands set terminal tgif",
"?set terminal tgif",
"?set term tgif",
"?terminal tgif",
"?term tgif",
"?tgif",
" 古い (legacy) 出力形式です (gnuplot の configure 時に --with-tgif をつ",
" けたときのみ使用可能)。",
" tgif は、Xlib ベースの対話型、2 次元ベクトル形式のドローイングツールで",
" ビットマップ画像を取り込んだり、結果をビットマップ化したりできます。",
"",
" `tgif` ドライバは、フォント指定、フォントサイズ指定、1 ページ内の複数の",
" グラフ描画をサポートしています。軸の比率は変更されません。",
"",
" 書式:",
"       set terminal tgif {portrait | landscape | default} {<[x,y]>}",
"                         {monochrome | color}",
"                         {{linewidth | lw} <LW>}",
"                         {solid | dashed}",
"                         {font \"<fontname>{,<fontsize>}\"}",
"",
" <[x,y]> にはそのページ内の x 方向、y 方向のグラフの数を指定し、",
" `color` はカラー機能を有効にし、`linewidth` は全ての線幅を <LW> 倍し、", 
" \"<fontname>\" には有効な PostScript フォント名、<fontsize> はその",
" PostScript フォントの大きさを指定します。`defaults` は全てのオプション",
" の値をデフォルトの値にセットします。デフォルトは `portrait`, `[1,1]`,",
" `color`, `linewidth 1.0`, `dashed`, `\"Helvetica,18\"` です。",
"",
" `solid` オプションは、編集作業中にそうであるように、線がカラーである場",
" 合に普通使われます。ハードコピーは白黒になることが多いので、その場合は",
" `dashed` を選択すべきでしょう。",
"",
" 多重描画 (multiplot) は 2 種類の方法で実装されています。",
"",
" その一つは、標準的な gnuplot の多重描画のやり方です:",
"",
"       set terminal tgif",
"       set output \"file.obj\"",
"       set multiplot",
"       set origin x01,y01",
"       set size  xs,ys",
"       plot ...",
"            ...",
"       set origin x02,y02",
"       plot ...",
"       unset multiplot",
"",
" より詳しい情報については、以下参照: `set multiplot`。",
"",
" もう一つの方法はドライバの [x,y] オプションです。この方法の長所は、原",
" 点 (origin) や大きさ (size) の設定をしなくても全てのグラフが自動的に縮",
" 尺され配置されることです。グラフの比 x/y は、自然な比 3/2 (または `set",
" size` で設定されたもの) が保持されます。",
"",
" 両方の多重描画の実装が選択された場合、標準的なやり方の方が選択され、警",
" 告のメッセージが表示されます。",
"",
" 単一描画 (または標準的な多重描画) の例:",
"       set terminal tgif                  # デフォルト",
"       set terminal tgif \"Times-Roman,24\"",
"       set terminal tgif landscape",
"       set terminal tgif landscape solid",
"",
" ドライバの持つ多重描画の仕組みを利用する例:",
"       set terminal tgif portrait [2,4]  # 縦置、x-方向に 2 つ、y-方向",
"                                         # に 4 つのグラフ描画",
"       set terminal tgif [1,2]           # 縦置、x-方向に 1 つ、y-方向",
"                                         # に 2 つのグラフ描画",
"       set terminal tgif landscape [3,3] # 横置、両方の方向に 3 つのグ",
"                                         # ラフ描画"
#endif /* JAPANESE_DOC */
END_HELP(tgif)
START_HELP(tikz)
#ifndef JAPANESE_DOC
"1 tikz",
"?commands set terminal tikz",
"?set terminal tikz",
"?set term tikz",
"?terminal tikz",
"?term tikz",
"?tikz",
" This driver creates output for use with the TikZ package of graphics macros",
" in TeX.  It is currently implemented via an external lua script, and ",
" `set term tikz` is a short form of the command `set term lua tikz`.",
" See `term lua tikz` for a complete description.",
" Use the command `set term tikz help` to print terminal options."
#else /* JAPANESE_DOC */
"1 tikz",
"?commands set terminal tikz",
"?set terminal tikz",
"?set term tikz",
"?terminal tikz",
"?term tikz",
"?tikz",
" このドライバは、TeX のグラフィックマクロの TikZ パッケージとともに使用",
" する出力を生成します。現在は、外部 lua script によって実装されていて、",
" `set term tikz` は `set term lua tikz` の省略形です。",
" 完全な説明は、以下参照: `term lua tikz`。",
" 出力形式オプションの表示は、`set term tikz help` を使用してください。"
#endif
END_HELP(tikz)
START_HELP(tkcanvas)
#ifndef JAPANESE_DOC
"1 tkcanvas",
"?commands set terminal tkcanvas",
"?set terminal tkcanvas",
"?set term tkcanvas",
"?terminal tkcanvas",
"?term tkcanvas",
"?tkcanvas",
" This terminal driver generates Tk canvas widget commands in one of the",
" following scripting languages: Tcl (default), Perl, Python, Ruby, or REXX.",
"",
" Syntax:",
"       set terminal tkcanvas {tcl | perl | perltkx | python | ruby | rexx}",
"                             {standalone | input}",
"                             {interactive}",
"                             {rounded | butt}",
"                             {nobackground | background <rgb color>}",
"                             {{no}rottext}",
"                             {size <width>,<height>}",
"                             {{no}enhanced}",
"                             {externalimages | pixels}",
"",
" Execute the following sequence of Tcl/Tk commands to display the result:",
"",
"       package require Tk",
"       # the following two lines are only required to support external images",
"       package require img::png",
"       source resize.tcl",
"       source plot.tcl",
"       canvas .c -width 800 -height 600",
"       pack .c",
"       gnuplot .c",
"",
" Or, for Perl/Tk use a program like this:",
"",
"       use Tk;",
"       my $top = MainWindow->new;",
"       my $c = $top->Canvas(-width => 800, -height => 600)->pack;",
"       my $gnuplot = do \"plot.pl\";",
"       $gnuplot->($c);",
"       MainLoop;",
"",
" Or, for Perl/Tkx use a program like this:",
"",
"       use Tkx;",
"       my $top = Tkx::widget->new(\".\");",
"       my $c = $top->new_tk__canvas(-width => 800, -height => 600);",
"       $c->g_pack;",
"       my $gnuplot = do \"plot.pl\";",
"       $gnuplot->($c);",
"       Tkx::MainLoop();",
"",
" Or, for Python/Tkinter use a program like this:",
"",
"       from tkinter import *",
"       from tkinter import font",
"       root = Tk()",
"       c = Canvas(root, width=800, height=600)",
"       c.pack()",
"       exec(open('plot.py').read())",
"       gnuplot(c)",
"       root.mainloop()",
"",
" Or, for Ruby/Tk use a program like this:",
"",
"       require 'tk'",
"       root = TkRoot.new { title 'Ruby/Tk' }",
"       c = TkCanvas.new(root, 'width'=>800, 'height'=>600) { pack  { } }",
"       load('plot.rb')",
"       gnuplot(c)",
"       Tk.mainloop",
"",
" Or, for Rexx/Tk use a program like this:",
"",
"       /**/",
"       call RxFuncAdd 'TkLoadFuncs', 'rexxtk', 'TkLoadFuncs'",
"       call TkLoadFuncs",
"       cv = TkCanvas('.c', '-width', 800, '-height', 600)",
"       call TkPack cv",
"       call 'plot.rex' cv",
"       do forever",
"           cmd = TkWait()",
"           if cmd = 'AWinClose' then leave",
"           interpret 'call' cmd",
"       end",
"",
" The code generated by `gnuplot` (in the above examples, this code is",
" written to \"plot.<ext>\") contains the following procedures:",
"",
" gnuplot(canvas)",
"    takes the name of a canvas as its argument.",
"    When called, it clears the canvas, finds the size of the canvas and",
"    draws the plot in it, scaled to fit.",
"",
" gnuplot_plotarea()",
"    returns a list containing the borders of the plotting area",
"    (xleft, xright, ytop, ybot) in canvas screen coordinates."
"    It works only for 2-dimensional plotting (`plot`).",
"",
" gnuplot_axisranges()",
"    returns the ranges of the two axes in plot coordinates",
"    (x1min, x1max, y1min, y1max, x2min, x2max, y2min, y2max).",
"    It works only for 2-dimensional plotting (`plot`).",
"",
" You can create self-contained, minimal scripts using the `standalone`",
" option.  The default is `input` which creates scripts which have to be",
" source'd (or loaded or called or whatever the adequate term is for the",
" language selected).",
"",
" If the `interactive` option is specified, mouse clicking on a line segment",
" will print the coordinates of its midpoint to stdout.",
" The user can supersede this behavior by supplying a procedure",
" user_gnuplot_coordinates which takes the following arguments:",
"   win id x1s y1s x2s y2s x1e y1e x2e y2e x1m y1m x2m y2m,",
" i.e. the name of the canvas and the id of the line segment followed by the",
" coordinates of its start and end point in the two possible axis ranges; the",
" coordinates of the midpoint are only filled for logarithmic axes.",
"",
" By default the canvas is `transparent`, but an explicit background color",
" can be set with the `background` option.",
"",
" `rounded` sets line caps and line joins to be rounded;",
" `butt` is the default:  butt caps and mitered joins.",
"",
" Text at arbitrary angles can be activated with the `rottext` option,",
" which requires Tcl/Tk 8.6 or later. The default is `norottext`.",
"",
" The `size` option tries to optimize the tic and font sizes for the given",
" canvas size.  By default an output size of 800 x 600 pixels is assumed.",
"",
" `enhanced` selects `enhanced text` processing (default), but is currently",
" only available for Tcl.",
"",
" The `pixels` (default) option selects the failsafe pixel-by-pixel image",
" handler, see also `image pixels`.",
" The `externalimages` option saves images as external png images, which",
" are later loaded and scaled by the tkcanvas code.  This option is only",
" available for Tcl and display may be slow in some situations since the",
" Tk image handler does not provide arbitrary scaling.  Scripts need to source",
" the provided rescale.tcl.",
"",
" Interactive mode is not yet implemented for Python/Tk and Rexx/Tk.",
" Interactive mode for Ruby/Tk does not yet support user_gnuplot_coordinates."
#else /* JAPANESE_DOC */
"1 tkcanvas",
"?commands set terminal tkcanvas",
"?set terminal tkcanvas",
"?set term tkcanvas",
"?terminal tkcanvas",
"?term tkcanvas",
"?tkcanvas",
" このドライバは、以下のスクリプト言語のうちの一つの Tk canvas widget コ",
" マンドを生成します: Tcl (デフォルト), Perl, Python, Ruby, REXX。",
"",
" 書式:",
"       set terminal tkcanvas {tcl | perl | perltkx | python | ruby | rexx}",
"                             {standalone | input}",
"                             {interactive}",
"                             {rounded | butt}",
"                             {nobackground | background <rgb color>}",
"                             {{no}rottext}",
"                             {size <width>,<height>}",
"                             {{no}enhanced}",
"                             {externalimages | pixels}",
"",
" 結果を表示するには、以下の Tcl/Tk コマンド列を実行します:",
"",
"       package require Tk",
"       # 以下の 2 行は、外部画像を使用する場合にのみ必要",
"       package require img::png",
"       source resize.tcl",
"       source plot.tcl",
"       canvas .c -width 800 -height 600",
"       pack .c",
"       gnuplot .c",
"",
" Perl/Tk の場合は、以下のようにします:",
"",
"       use Tk;",
"       my $top = MainWindow->new;",
"       my $c = $top->Canvas(-width => 800, -height => 600)->pack;",
"       my $gnuplot = do \"plot.pl\";",
"       $gnuplot->($c);",
"       MainLoop;",
"",
" Perl/Tkx の場合は、以下のようにします:",
"",
"       use Tkx;",
"       my $top = Tkx::widget->new(\".\");",
"       my $c = $top->new_tk__canvas(-width => 800, -height => 600);",
"       $c->g_pack;",
"       my $gnuplot = do \"plot.pl\";",
"       $gnuplot->($c);",
"       Tkx::MainLoop();",
"",
" Python/Tkinter の場合は、以下のようにします:",
"",
"       from tkinter import *",
"       from tkinter import font",
"       root = Tk()",
"       c = Canvas(root, width=800, height=600)",
"       c.pack()",
"       exec(open('plot.py').read())",
"       gnuplot(c)",
"       root.mainloop()",
"",
" Ruby/Tk の場合は、以下のようにします:",
"",
"       require 'tk'",
"       root = TkRoot.new { title 'Ruby/Tk' }",
"       c = TkCanvas.new(root, 'width'=>800, 'height'=>600) { pack  { } }",
"       load('plot.rb')",
"       gnuplot(c)",
"       Tk.mainloop",
"",
" Rexx/Tk の場合は、以下のようにします:",
"",
"       /**/",
"       call RxFuncAdd 'TkLoadFuncs', 'rexxtk', 'TkLoadFuncs'",
"       call TkLoadFuncs",
"       cv = TkCanvas('.c', '-width', 800, '-height', 600)",
"       call TkPack cv",
"       call 'plot.rex' cv",
"       do forever",
"           cmd = TkWait()",
"           if cmd = 'AWinClose' then leave",
"           interpret 'call' cmd",
"       end",
"",
" `gnuplot` が生成するコード (上の例では、\"plot.<ext>\" として書き出され",
" ているものです) は、以下のような手続き関数を含んでいます:",
"",
" gnuplot(canvas)",
"    引数として canvas の名前を取ります。",
"    これを呼び出すと、その canvas をクリアし、canvas のサイズを探し、そ",
"    の中にグラフを描き、それに合うように伸縮します。",
"",
" gnuplot_plotarea()",
"    canvas スクリーン座標での描画領域の境界 (xleft, xright, ytop, ybot)",
"    を含むリストを返します。",
"    2 次元グラフ描画 (`plot`) に対してのみ動作します。",
"",
" gnuplot_axisranges()",
"    グラフ座標での 2 つの軸の範囲 (x1min, x1max, y1min, y1max, x2min,",
"    x2max, y2min, y2max) を返します。",
"    2 次元グラフ描画 (`plot`) に対してのみ動作します。",
"",
" オプション `standalone` を使えば、自己完結した最小スクリプトを生成でき",
" ます。デフォルトは `input` で、これは取り込まれるべきスクリプトを作りま",
" す (すなわち、load されるか call されるか、または選択した言語用のなんら",
" かの適切な方法で)。",
"",
" オプション `interactive` を指定すると、一つの線分上でマウスクリックした",
" ときにその中点の座標が標準出力に出力されるようになります。",
" この動作は、user_gnuplot_coordinates という手続き関数を定義することで、",
" 別なものに置き換えることも可能です。その手続き関数には以下の引数が渡さ",
" れます:",
"   win id x1s y1s x2s y2s x1e y1e x2e y2e x1m y1m x2m y2m,",
" これらは、canvas の名前、線分の id、2 つの座標系でのその線分の開始点の",
" 座標、終了点の座標、中点の座標です。中点の座標は、対数軸に対してのみ与",
" えられます",
"",
" デフォルトでは、canvas は `transparent` ですが、オプション `background`",
" で、明示的に背景色を設定することもできます。",
"",
" `rounded` は、線の端や接合部を丸くします。",
" デフォルトの `butt` は、尖った端と角張った接合部を使用します。",
"",
" オプション `rottext` で、文字列の任意角での回転を有効にできますが、それ",
" には Tcl/Tk 8.6 以降が必要です。デフォルトは `norottext` です。",
"",
" オプション `size` は、目盛りの刻みとフォントサイズを、指定された canvas",
" サイズに対して最適化なものにしようとします。デフォルトでは、出力サイズ",
" は 800 x 600 ピクセルとしています。",
"",
" `enhanced` は、拡張文字列処理を選択します (デフォルト) が、これは今のと",
" ころ Tcl でのみ利用可能です。",
"",
" オプション `pixels` (デフォルト) は、フェールセーフなピクセル毎の画像処",
" 理ルーチンを選択します。以下参照: `image pixels`。",
" オプション `externalimages` は、画像を外部 PNG 画像として保存し、それを",
" あとで tkcanvas コードが読み込んで伸縮します。このオプションは、Tcl で",
" のみ有効で、しかも Tk の画像処理ルーチンが任意の伸縮を提供していないた",
" めに、ある状況では遅くなります。この場合、スクリプトで、提供される",
" rescale.tcl を取り込まなければいけません。",
"",
" 対話型モードは、Python/Tk, Rexx/Tk ではまだ実装されていません。Ryby/Tk",
" の対話型モードは、まだ user_gnuplot_coordinates をサポートしていません。"
#endif /* JAPANESE_DOC */
END_HELP(tkcanvas)
START_HELP(webp)
#ifndef JAPANESE_DOC
"1 webp",
"?set terminal webp",
"?terminal webp",
"?set term webp",
"?term webp",
"?webp",
" The `webp` terminal generates either a single frame or an animation.",
" The actual drawing is done via cairo, a 2D graphics library, and pango,",
" a library for laying out and rendering text.",
"",
" Syntax:",
"         set term webp",
"                      {size <x_pixels>,<y_pixels>}",
"                      {font <font>} {fontscale <scale>} {{no}enhanced}",
"                      {{no}transparent} {background <rgbcolor>",
"                      {linewidth <lw>} {rounded|butt|square} {dashlength <dl>}",
"                      {pointscale <ps>}",
"",
"                      {{no}animate {quality <q>} {delay <msec>} {loop <n>}}",
"",
" Individual frames produced by the webp terminal are first created as 32-bit",
" RGB + alpha channel images using routines shared with the pngcairo terminal.",
" See `set term pngcairo` for more details about font and terminal options.",
" The frames are then converted to webp format on output.",
"",
" The `animate` option produces a webp file containing multiple frames,",
" each one created by a separate `plot` or `splot` command.  The animation",
" sequence is terminated by the next `set output` or `set terminal` command.",
"",
" `quality` (1..100) affects the size of the output file.",
" q values from 1 to 74 use lossy compression; smaller values produce a",
" smaller file at the cost of lost detail in the rendered image.",
" q values from 75 to 100 use lossless compression. All produce the same",
" image quality (lossless!). Larger values spend more computing time for",
" diminishing benefit in reduced file size.",
" The default is 75, lossless compression without excessive computation.",
"",
" The `delay` suboption sets the delay time in milliseconds between frames",
" during playback (default 50 milliseconds).",
"",
" The `loop` suboption specifies how many times the animation sequence should",
" be repeated during playback.  The default (0) gives a continuous loop.", 
""
#else /* JAPANESE_DOC */
"1 webp",
"?set terminal webp",
"?terminal webp",
"?set term webp",
"?term webp",
"?webp",
" `webp` 出力形式は、単一フレーム、またはアニメーションを生成します。実際",
" の描画は、2 次元グラフィックライブラリ cairo と、レイアウト、文字の描画",
" ライブラリ pango が担当します。",
"",
" 書式:",
"         set term webp",
"                      {size <x_pixels>,<y_pixels>}",
"                      {font <font>} {fontscale <scale>} {{no}enhanced}",
"                      {{no}transparent} {background <rgbcolor>",
"                      {linewidth <lw>} {rounded|butt|square} {dashlength <dl>}",
"                      {pointscale <ps>}",
"",
"                      {{no}animate {quality <q>} {delay <msec>} {loop <n>}}",
"",
" ンネル画像として、pngcairo 出力形式と共有するルーチンを使って作ります。",
" フォントや terminal オプションに関する詳細は、以下参照:",
" `set terminal pngcairo`。",
" その後、そのフレームを出力時に webp 形式に変換します。",
"",
" オプション `animate` は、複数のフレームからなる webp ファイルを生成しま",
" す。個々のフレームは、個別の `plot`、または `splot` コマンドで生成した",
" ものです。そのアニメーション列は、コマンド `set output` か、",
" `set terminal` で終了します。",
"",
" `quality` (1..100) は、出力ファイルのサイズに影響します。1-74 の q の値",
" は、損失 (loss) のある圧縮を使用します。より小さい値を指定すると、描画",
" する画像の細部の喪失を犠牲にして、より小さいファイルを作成します。",
" 75-100 の q の値は、損失のない (lossless) 圧縮を行います。これはすべて",
" 同じ画像品質です (lossless!)。より大きな値を指定すると、減らすファイル",
" サイズにおける価値の減少のためにより多くの計算時間を費します。",
" デフォルトは 75 で、余分な計算なしに損失のない圧縮を行います。",
"",
" サブオプション `delay` は、再生時のフレーム間隔をミリ秒単位で設定します",
" (デフォルトは 50 ミリ秒)。",
"",
" サブオプション `loop` は、再生時にアニメーション列を何回繰り返して再生",
" するかを指定します。デフォルトの 0 はループし続けます。",
""
#endif /* JAPANESE_DOC */
END_HELP(webp)
START_HELP(windows)
#ifndef JAPANESE_DOC
"1 windows",
"?commands set terminal windows",
"?set terminal windows",
"?set term windows",
"?terminal windows",
"?term windows",
"?windows",
" The `windows` terminal is a fast interactive terminal driver that uses the",
" Windows GDI to draw and write text. The cross-platform `terminal wxt` and",
" `terminal qt` are also supported on Windows.",
"",
" Syntax:",
"       set terminal windows {<n>}",
"                            {color | monochrome}",
"                            {solid | dashed}",
"                            {rounded | butt}",
"                            {enhanced | noenhanced}",
"                            {font <fontspec>}",
"                            {fontscale <scale>}",
"                            {linewidth <scale>}",
"                            {pointscale <scale>}",
"                            {background <rgb color>}",
"                            {title \"Plot Window Title\"}",
"                            {{size | wsize} <width>,<height>}",
"                            {position <x>,<y>}",
"                            {docked {layout <rows>,<cols>} | standalone}",
"                            {close}",
"",
" Multiple plot windows are supported: `set terminal win <n>` directs the",
" output to plot window number n.",
"",
" `color` and `monochrome` select colored or mono output,",
" `dashed` and `solid` select dashed or solid lines. Note that `color`",
" defaults to `solid`, whereas `monochrome` defaults to `dashed`.",
" `rounded` sets line caps and line joins to be rounded; `butt` is the",
" default, butt caps and mitered joins.",
" `enhanced` enables enhanced text mode features (subscripts,",
" superscripts and mixed fonts, see `enhanced text` for more information).",
" `<fontspec>` is in the format \"<fontface>,<fontsize>\", where \"<fontface>\"",
" is the name of a valid Windows font, and <fontsize> is the size of the font",
" in points and both components are optional.",
" Note that in previous versions of gnuplot the `font` statement could be left",
" out and <fontsize> could be given as a number without double quotes. This is",
" no longer supported.",
" `linewidth`, `fontscale`, `pointscale` can be used to scale the width of",
" lines, the size of text, or the size of the point symbols.",
" `title` changes the title of the graph window.",
" `size` defines the width and height of the window's drawing area in pixels,",
" `wsize` defines the actual size of the window itself and `position` defines",
" the origin of the window i.e. the position of the top left corner on the",
" screen (again in pixel). These options override any default settings",
" from the `wgnuplot.ini` file.",
"",
" `docked` embeds the graph window in the wgnuplot text window and the `size`",
" and `position` options are ignored.  Note that `docked` is not available for",
" console-mode gnuplot.  Setting this option changes the default for new"
" windows.  The initial default is `standalone`.  The `layout` option allows to",
" reserve a minimal number of columns and rows for graphs in docked mode.  If",
" there are more graphs than fit the given layout, additional rows will be added.",
" Graphs are sorted by the numerical id, filling rows first.",
"",
" Other options may be changed using the `graph-menu` or the initialization file",
" `wgnuplot.ini`.",
"",
/* FIXME:  Move to persist section */
" The Windows version normally terminates immediately as soon as the end of",
" any files given as command line arguments is reached (i.e. in non-interactive",
" mode), unless you specify `-` as the last command line option.",
" It will also not show the text-window at all, in this mode, only the plot.",
" By giving the optional argument `-persist` (same as for gnuplot under x11;",
" former Windows-only options `/noend` or `-noend` are still accepted as well),",
" will not close gnuplot. Contrary to gnuplot on other operating systems,",
" gnuplot's interactive command line is accessible after the -persist option.",
"",
" The plot window remains open when the gnuplot terminal is changed with a",
" `set term` command. The plot window can be closed with `set term windows close`.",
"",
" `gnuplot` supports different methods to create printed output on Windows,",
" see `windows printing`. The windows terminal supports data exchange with ",
" other programs via clipboard and EMF files, see `graph-menu`. You can also",
" use the `terminal emf` to create EMF files.",
"2 graph-menu",
"?commands set terminal windows graph-menu",
"?set terminal windows graph-menu",
"?set term windows graph-menu",
"?windows graph-menu",
"?graph-menu",
" The `gnuplot graph` window has the following options on a pop-up menu",
" accessed by pressing the right mouse button(*) or selecting `Options` from the",
" system menu or the toolbar:",
"",
" `Copy to Clipboard` copies a bitmap and an enhanced metafile picture.",
"",
" `Save as EMF...` allows the user to save the current graph window as",
" enhanced metafile (EMF or EMF+).",
"",
" `Save as Bitmap...` allows the user to save a copy of the graph as bitmap",
" file.",
"",
" `Print...` prints the graphics windows using a Windows printer driver and",
" allows selection of the printer and scaling of the output."
" See also `windows printing`.",
"",
" `Bring to Top` when checked raises the graph window to the top after every",
" plot.",
"",
" `Color` when checked enables color output.  When unchecked it forces",
" all grayscale output.  This is e.g. useful to test appearance of monochrome",
" printouts.",
"",
#ifdef USE_WINGDI
" `GDI backend` draws to the screen using Windows GDI. This is the classical",
" windows terminal, which is fast, but lacks many features such as",
" anti-aliasing, oversampling and full transparency support. It is now",
" deprecated.",
#else
" The `GDI backend` which uses the classic GDI API is deprecated and has been",
" disabled in this version.",
#endif
"",
" `GDI+ backend` draws to the screen using the GDI+ Windows API. It supports",
" full antialiasing, oversampling, transparency and custom dash patterns.",
" This was the default in versions 5.0 and 5.2.",
"",
" `Direct2D backend` uses Direct2D & DirectWrite APIs to draw. It uses graphic",
" card acceleration and is hence typically much faster.  Since Direct2D can"
" not create EMF data, saving and copying to clipboard of EMF data fall back"
" to GDI+ while bitmap data is generated by D2d.",
" This is the recommended and default backend since version 5.3.",
"",
" `Oversampling` draws diagonal lines at fractional pixel positions to avoid",
" \"wobbling\" effects.  Vertical or horizontal lines are still snapped",
" to integer pixel positions to avoid blurry lines.",
"",
" `Antialiasing` enables smoothing of lines and edges. Note that this slows",
" down drawing.  `Antialiasing of polygons` is enabled by default but might",
" slow down drawing with the GDI+ backend.",
"",
" `Fast rotation` switches antialiasing temporarily off while rotating the",
" graph with the mouse. This speeds up drawing considerably at the expense",
" of an additional redraw after releasing the mouse button.",
"",
" `Background...` sets the window background color.",
"",
" `Choose Font...` selects the font used in the graphics window.",
"",
#ifdef WIN_CUSTOM_PENS
" `Line Styles...` allows customization of the line colors and styles.",
"",
#endif
" `Update wgnuplot.ini` saves the current window locations, window sizes, text",
" window font, text window font size, graph window font, graph window font",
" size, background color to the initialization file `wgnuplot.ini`.",
"",
"^<HR align=\"left\" width=\"100\">",
" (*) Note that this menu is only available by pressing the right mouse button",
" with `unset mouse`.",
"2 printing",
"?commands set terminal windows printing",
"?set terminal windows printing",
"?set term windows printing",
"?windows printing",
"?printing",
"?screendump",
" In order of preference, graphs may be printed in the following ways:",
"",
" `1.` Use the `gnuplot` command `set terminal` to select a printer and `set",
" output` to redirect output to a file.",
"",
" `2.` Select the `Print...` command from the `gnuplot graph` window.  An extra",
" command `screendump` does this from the text window.",
"",
" `3.` If `set output \"PRN\"` is used, output will go to a temporary file.  When",
" you exit from `gnuplot` or when you change the output with another `set",
" output` command, a dialog box will appear for you to select a printer port.",
" If you choose OK, the output will be printed on the selected port, passing",
" unmodified through the print manager.  It is possible to accidentally (or",
" deliberately) send printer output meant for one printer to an incompatible",
" printer.",
"",
"2 text-menu", /* FIXME: this is not really related to the windows driver, but the windows platform */
"?commands set terminal windows text-menu",
"?set terminal windows text-menu",
"?set term windows text-menu",
"?windows text-menu",
"?text-menu",
" The `gnuplot text` window has the following options on a pop-up menu accessed",
" by pressing the right mouse button or selecting `Options` from the system",
" menu:",
"",
" `Copy to Clipboard` copies marked text to the clipboard.",
"",
" `Paste` copies text from the clipboard as if typed by the user.",
"",
" `Choose Font...` selects the font used in the text window.",
"",
" `System Colors` when selected makes the text window honor the System Colors",
" set using the Control Panel.  When unselected, text is black or blue on a",
" white background.",
"",
" `Wrap long lines` when selected lines longer than the current window width",
" are wrapped.",
"",
" `Update wgnuplot.ini` saves the current settings to the initialisation file",
" `wgnuplot.ini`, which is located in the user's application data directory.",
"",
"2 wgnuplot.mnu", /* FIXME: this is not really related to the windows driver, but the windows platform */
"?windows wgnuplot.mnu",
"?wgnuplot.mnu",
" If the menu file `wgnuplot.mnu` is found in the same directory as",
" `gnuplot`, then the menu specified in `wgnuplot.mnu` will be loaded.",
" Menu commands:",
"",
"  [Menu]      starts a new menu with the name on the following line.",
"  [EndMenu]   ends the current menu.",
"  [--]        inserts a horizontal menu separator.",
"  [|]         inserts a vertical menu separator.",
"  [Button]    puts the next macro on a push button instead of a menu.",
"",
" Macros take two lines with the macro name (menu entry) on the first line and",
" the macro on the second line.  Leading spaces are ignored.  Macro commands:",
"",
"  [INPUT]     Input string with prompt terminated by [EOS] or {ENTER}",
"  [EOS]       End Of String terminator. Generates no output.",
"  [OPEN]      Get name of a file to open, with the title of the dialog",
"              terminated by [EOS], followed by a default filename terminated",
"              by [EOS] or {ENTER}.",
"  [SAVE]      Get name of a file to save.  Parameters like [OPEN]",
"  [DIRECTORY] Get name of a directory, with the title of the dialog",
"              terminated by [EOS] or {ENTER}",
"",
" Macro character substitutions:",
"",
"  {ENTER}     Carriage Return '\\r'",
"  {TAB}       Tab '\\011'",
"  {ESC}       Escape '\\033'",
"  {^A}        '\\001'",
"  ...",
"  {^_}        '\\031'",
"",
" Macros are limited to 256 characters after expansion.",
"",
"2 wgnuplot.ini",
"?commands set terminal windows wgnuplot.ini",
"?set terminal windows wgnuplot.ini",
"?set term windows wgnuplot.ini",
"?windows wgnuplot.ini",
"?wgnuplot.ini",
" The Windows text window and the `windows` terminal will read some of their options from",
" the `[WGNUPLOT]` section of `wgnuplot.ini`.",
" This file is located in the user's application data directory. Here's a sample",
" `wgnuplot.ini` file:",
"",
"       [WGNUPLOT]",
"       TextOrigin=0 0",
"       TextSize=640 150",
"       TextFont=Consolas,9",
"       TextWrap=1",
"       TextLines=400",
"       TextMaximized=0",
"       SysColors=0",
"       GraphOrigin=0 150",
"       GraphSize=640 330",
"       GraphFont=Tahoma,10",
"       GraphColor=1",
"       GraphToTop=1",
"       GraphGDI+=1",
"       GraphD2D=0",
"       GraphGDI+Oversampling=1",
"       GraphAntialiasing=1",
"       GraphPolygonAA=1",
"       GraphFastRotation=1",
"       GraphBackground=255 255 255",
"       DockVerticalTextFrac=350",
"       DockHorizontalTextFrac=400",
#ifdef WIN_CUSTOM_PENS
"       Border=0 0 0 0 0",
"       Axis=192 192 192 2 2",
"       Line1=0 0 255 0 0",
"       Line2=0 255 0 0 1",
"       Line3=255 0 0 0 2",
"       Line4=255 0 255 0 3",
"       Line5=0 0 128 0 4",
#endif
"",
"^ <h3>Text window options</h3> ",
"",
" These settings apply to the wgnuplot text-window only."
"",
" The `TextOrigin` and `TextSize` entries specify the location and size of the",
" text window. If `TextMaximized` is non-zero, the window will be maximized.",
"",
" The `TextFont` entry specifies the text window font and size.",
"",
" The `TextWrap` entry selects wrapping of long text lines.",
"",
" The `TextLines` entry specifies the number of (unwrapped) lines the internal",
" buffer of the text window can hold. This value currently cannot be changed",
" from within wgnuplot.",
"",
" See `text-menu`.",
"",
"^ <h3>Docked graph options</h3>",
"",
" `DockVerticalTextFrac` and `DockHorizontalTextFrac` set the fraction of the",
" window reserved for the text window in permille of the vertical or horizontal",
" layout.",
"",
"^ <h3>Graph window options</h3>",
"",
" The `GraphFont` entry specifies the font name and size in points.",
#ifdef WIN_CUSTOM_PENS
"",
" The five",
" numbers given in the `Border`, `Axis` and `Line` entries are the `Red`",
" intensity (0--255), `Green` intensity, `Blue` intensity, `Color Linestyle`",
" and `Mono Linestyle`.  `Linestyles` are 0=SOLID, 1=DASH, 2=DOT, 3=DASHDOT,",
" 4=DASHDOTDOT.  In the sample `wgnuplot.ini` file above, Line 2 is a green",
" solid line in color mode, or a dashed line in monochrome mode.  The default",
" line width is 1 pixel.  If `Linestyle` is negative, it specifies the width of",
" a SOLID line in pixels.  Line1 and any linestyle used with the `points` style",
" must be SOLID with unit width.",
#endif
"",
" See `graph-menu`."
#else /* JAPANESE_DOC */
"1 windows",
"?commands set terminal windows",
"?set terminal windows",
"?set term windows",
"?terminal windows",
"?term windows",
"?windows",
" 出力形式 `windows` は、グラフ描画と文字列描画に Windows GDI を使用する",
" 高速な対話型出力ドライバです。Windows では、複数の環境で動作する `wxt`",
" 出力形式、`qt` 出力形式もサポートされています。",
"",
" 書式:",
"       set terminal windows {<n>}",
"                            {color | monochrome}",
"                            {solid | dashed}",
"                            {rounded | butt}",
"                            {enhanced | noenhanced}",
"                            {font <fontspec>}",
"                            {fontscale <scale>}",
"                            {linewidth <scale>}",
"                            {pointscale <scale>}",
"                            {background <rgb color>}",
"                            {title \"Plot Window Title\"}",
"                            {{size | wsize} <width>,<height>}",
"                            {position <x>,<y>}",
"                            {docked {layout <rows>,<cols>} | standalone}",
"                            {close}",
"",
" 複数のウィンドウ描画がサポートされています: `set terminal win <n>` で",
" 出力が番号 n の描画ウィンドウに送られます。", 
"", 
" `color`, `monochrome` は、カラー出力か白黒出力かの選択で、",
" `dashed` と `solid` は、点線と実線の選択です。`color` では `solid` が",
" デフォルトで、`monochrome` では `dashed` がデフォルトです。",
" `rounded` は、線の端や接合部を丸くし、デフォルトの `butt` は尖った端と",
" 角張った接合部を使用します。",
" `enhanced` は拡張文字列処理 (enhanced text mode) の機能 (上付、下付文字",
" やフォントの混在) を有効にします。詳細は以下参照: `enhanced text`。",
" `<fontspec>` は \"<fontface>,<fontsize>\" の形式で、\"<fontface>\" は有",
" 効な Windows のフォント名で、`<fontsize>` はポイント単位でのフォントの",
" 大きさです。この両要素はいずれも省略可能です。",
" 以前の版の gnuplot では、`font` キーワードは省略可能で、<fontsize> は引",
" 用符なしの数値で与えることができましたが、現在はその形式はサポートして",
" いませんので注意してください。",
" `linewidth`, `fontscale`, `pointscale` で、線の幅、文字サイズ、点記号の",
" 大きさを伸縮できます。",
" `title` は、グラフウィンドウのタイトルを変更します。",
" `size` はウィンドウ内の描画領域のピクセル単位での幅と高さを、`wsize` は",
" ウィンドウ自身の実際のサイズを、`position` はウィンドウの原点、すなわち",
" 左上角のスクリーン上のピクセル単位での位置を定義します。これらのオプシ",
" ョンは、ファイル `wgnuplot.ini` のデフォルトの設定を上書きします。", 
"",
" `docked` は、グラフウィンドウを、wgnuplot のテキストウィンドウの中に埋",
" め込み、`size` と `position` のオプションを無視します。`docked` は、コ",
" ンソール版の gnuplot では利用できないことに注意してください。このオプシ",
" ョンを設定すると、新規のウィンドウに対してデフォルトの値を変更します。",
" 最初のデフォルトは、`standalone` です。ドッキングモードでは、グラフの最",
" 小列数、行数は追加オプション `layout` で保持できます。指定されたレイア",
" ウト以上にグラフがある場合は、行を追加します。複数のグラフは、数値 ID",
" でソートし、行方向に埋めていきます。",
"",
" 他のオプションもグラフメニューや初期化ファイル `wgnuplot.ini` で変更で",
" きます。",
"",
/* FIXME:  Move to persist section */
" Windows 版は、非対話型モードでは通常、コマンドラインから与えたファイル",
" の最後に達すると直ちに終了しますが、コマンドラインの最後に `-` を指定",
" した場合は別です。また、このモードではテキストウィンドウは表示せず、グ",
" ラフのみの表示となりますが、オプションとして `-persist` (x11 版の",
" gnuplot と同じオプション; 従来の Windows のみのオプション `/noend` や",
" `-noend` を使うこともできます) を指定すると gnuplot は終了しなくなりま",
" す。この場合他の OS での gnuplot の挙動とは異なり、-persist オプション",
" 後も gnuplot の対話型コマンドラインを受け付けます。",
"",
" コマンド `set term` で gnuplot の出力形式を変更した場合、描画ウィンドウ",
" はそのまま残りますが、`set term windows close` で描画ウィンドウを閉じる",
" ことができます。",
"",
" `gnuplot` は、Windows 上での出力の生成のためのいくつかの方法をサポート",
" しています。以下参照: `windows printing`。windows 出力形式は、クリップ",
" ボードや EMF ファイルを通して他のプログラムとのデータの交換をサポートし",
" ています。以下参照: `graph-menu`。EMF ファイルを生成するには、`emf` 出",
" 力形式を使うこともできます。",
"2 グラフメニュー (graph-menu)",
"?commands set terminal windows graph-menu",
"?set terminal windows graph-menu",
"?set term windows graph-menu",
"?windows graph-menu",
"?graph-menu",
" `gnuplot graph` ウィンドウでマウスの右ボタン(*) を押すか、システムメニ",
" ューやツールバーから `Options` を選択すると以下のオプションを持つポップ",
" アップメニューが現われます:",
"",
" `Copy to Clipboard` クリップボードにビットマップや EMF 画像をコピー",
"",
" `Save as EMF...` 現在のグラフウィンドウをメタファイル (EMF か EMF+) と",
" して保存",
"",
" `Save as Bitmap...` 現在のグラフをビットマップファイルとして保存",
"",
" `Print...` グラフィックウィンドウを Windows プリンタドライバでプリント",
" アウト。プリンタと拡大率の選択が可能。以下も参照: `windows printing`。",
"",
" `Bring to Top` チェックを入れるとグラフウィンドウを他の全ての描画ウィン",
" ドウの手前に表示",
"",
" `Color` チェックを入れるとカラー出力が有効、チェック無しだとすべて灰色",
" 階調表示。これは例えば白黒のプリントアウトの見た目の確認に有用です。",
"",
#ifdef USE_WINGDI
" `GDI backend` Windows GDI を使うスクリーン描画。これは古典的な windows",
" 出力形式の方法で、高速ですが、アンチエイリアス、オーバーサンプリング、",
" 完全な透過機能などの多くの機能を持っていません。現在は非推奨です。",
#else
" `GDI backend` 古典的な GDI API を使うもので、非推奨であり、このバージョ",
" ンでは無効になっています。",
#endif
"",
" `GDI+ backend` GDI+ Windows API を使うスクリーン描画。これは、アンチエ",
" イリアス、オーバーサンプリング、透過、点線/破線パターンのカスタマイズの",
" すべてを完全にサポートします。バージョン 5.0, 5.2 ではデフォルトでした。",
"",
" `Direct2D backend` Direct2D と DirectWrite API を使用する描画。これは、",
" グラフィックカード加速機能を使用し、よって通常は最も高速です。Direct2D",
" は EMF データを作れませんので、EMF データのクリップボードへのコピーの際",
" には、D2d でビットマップデータを生成している間 GDI+ で作業します。",
" 現在はこれを推奨していて、バージョン 5.3 からはこれがデフォルトのバック",
" エンドになります",
"",
" `Oversampling` これにより、対角線は非整数のピクセル位置に描画され、左右",
" にふらつくことが避けられます。しかし鉛直線、水平線は、ぼやけた線になら",
" ないよう整数のピクセル位置に置かれます。",
"",
" `Antialiasing` 折れ線や線の端の平滑化を可能にします。これは描画を遲くす",
" ることに注意してください。",
" `Antialiasing of polygons` 多角形描画のアンチエイリアスは、デフォルトで",
" は有効ですが、GDI+ のバックエンドでは描画を遅くする可能性があります。",
"",
" `Fast rotation` グラフウィンドウをマウスで回転している際にアンチエイリ",
" アスを一時的にオフにします。これは、マウスボタンを離した後に追加の再描",
" 画が行われますが、相当に描画を早くしてくれます。",
"",
" `Background...` ウィンドウ背景色の設定",
"",
" `Choose Font...` グラフィックウィンドウで使うフォントの選択",
"",
#ifdef WIN_CUSTOM_PENS
" `Line Styles...` 線の色や種類のカスタマイズ",
"",
#endif
" `Update wgnuplot.ini` 現在のウィンドウの位置、ウィンドウの大きさ、テキ",
" ストウィンドウのフォントとそのフォントサイズ、グラフウィンドウのフォン",
" トとそのフォントサイズ、背景色を初期化ファイル `wgnuplot.ini` に保存",
"",
"^<HR align=\"left\" width=\"100\">",
" (*) このメニューは、`unset mouse` によって右マウスボタン押ししか使えな",
" くなるので注意。",
"2 印刷 (printing)",
"?commands set terminal windows printing",
"?set terminal windows printing",
"?set term windows printing",
"?windows printing",
"?printing",
"?screendump",
" 好みにより、グラフは以下のような方法で印刷できます。",
"",
" `1.` `gnuplot` のコマンド `set terminal` でプリンタを選択し、`set output`",
" で出力をファイルにリダイレクト",
"",
" `2.` `gnuplot graph` ウィンドウから `Print...` コマンドを選択。テキス",
" トウィンドウからこれを行なう特別なコマンド `screendump` もある。",
"",
" `3.` `set output \"PRN\"` とすると出力は一時ファイルに出力され、`gnuplot`",
" を終了するかまたは `set output` コマンドで出力を他のものへ変更すると、",
" ダイアログ (対話) ボックスが現われ、そこでプリンタポートを選択。そこで",
" OK を選択すると、出力はプリントマネージャでは加工されずにそのまま選択",
" されたポートでプリントアウトされる。これは偶然 (または故意) に、あるプ",
" リンタ用の出力を、それに対応していないプリンタに送り得ることを意味する。",
"",
"2 テキストメニュー (text-menu)", /* FIXME: this is not really related to the windows driver, but the windows platform */
"?commands set terminal windows text-menu",
"?set terminal windows text-menu",
"?set term windows text-menu",
"?windows text-menu",
"?text-menu",
" `gnuplot text` ウィンドウでマウスの右ボタンを押すか、システムメニュー",
" から `Options` を選択すると以下のオプションを持つポップアップメニュー",
" が現われます:",
"",
" `Copy to Clipboard` マークしたテキストをクリップボードにコピー",
"",
" `Paste` 打ち込んだのと同じようにクリップボードからテキストをコピー",
"",
" `Choose Font...` テキストウィンドウで使うフォントの選択",
"",
" `System Colors` 選択するとコントロールパネルで設定したシステムカラーを",
" テキストウィンドウに与える。選択しなければ白背景で文字は黒か青。",
"",
" `Wrap long lines` 選択すると現在のウィンドウ幅よりも長い行を折り返す",
"",
" `Update wgnuplot.ini` 現在の設定を、ユーザのアプリケーションデータディ",
" レクトリにある初期化ファイル `wgnuplot.ini` に保存",
"",
"2 メニューファイル wgnuplot.mnu", /* FIXME: this is not really related to the windows driver, but the windows platform */
"?windows wgnuplot.mnu",
"?wgnuplot.mnu",
" メニューファイル `wgnuplot.mnu` が `gnuplot` と同じディレクトリにある場",
" 合、`wgnuplot.mnu` に書かれているメニューが読み込まれます。メニューコマ",
" ンドは以下の通り:",
"",
"  [Menu]      次の行の名前で新しいメニューを開始",
"  [EndMenu]   現在のメニューを終了",
"  [--]        水平なメニューの仕切りを入れる",
"  [|]         垂直なメニューの仕切りを入れる",
"  [Button]    メニューに押しボタンを入れ、それに次のマクロを割り当てる",
"",
" マクロは 2 行で書き、最初の行はマクロ名 (メニューの見出し)、2 行目がマ",
" クロ本体です。先頭の空白列は無視されます。マクロコマンドは以下の通り:",
"",
" [INPUT]     [EOS] か {ENTER} までをプロンプトとして出力し文字列を入力",
" [EOS]       文字列の終り (End Of String)。何も出力しない",
" [OPEN]      開くファイル名を取得。最初の [EOS] までが対話ウィンドウのタ",
"             イトル、そこから次の [EOS] か {ENTER} までがデフォルトのフ",
"             ァイル名",
" [SAVE]      セーブファイル名を取得 ([OPEN] 同様)",
" [DIRECTORY] ディレクトリ名を取得。[EOS] か {ENTER} までが対話ウィンドウ",
"             のタイトル"
"",
" マクロ文字の置き換えは以下の通り:",
"",
"  {ENTER}     復帰 '\\r'",
"  {TAB}       タブ '\\011'",
"  {ESC}       エスケープ '\\033'",
"  {^A}        '\\001'",
"  ...",
"  {^_}        '\\031'",
"",
" マクロは展開後の文字数が最大 256 文字に制限されています。",
"",
"2 wgnuplot.ini",
"?commands set terminal windows wgnuplot.ini",
"?set terminal windows wgnuplot.ini",
"?set term windows wgnuplot.ini",
"?windows wgnuplot.ini",
"?wgnuplot.ini",
" Windows テキストウィンドウと `windows` 出力形式は、オプションのいくつか",
" `wgnuplot.ini` の `[WGNUPLOT]` セクションから読み込みます。このファイル",
" は、ユーザのアプリケーションデータディレクトリに置きます。",
" `wgnuplot.ini` ファイルのサンプル:",
"",
"       [WGNUPLOT]",
"       TextOrigin=0 0",
"       TextSize=640 150",
"       TextFont=Consolas,9",
"       TextWrap=1",
"       TextLines=400",
"       TextMaximized=0",
"       SysColors=0",
"       GraphOrigin=0 150",
"       GraphSize=640 330",
"       GraphFont=Tahoma,10",
"       GraphColor=1",
"       GraphToTop=1",
"       GraphGDI+=1",
"       GraphD2D=0",
"       GraphGDI+Oversampling=1",
"       GraphAntialiasing=1",
"       GraphPolygonAA=1",
"       GraphFastRotation=1",
"       GraphBackground=255 255 255",
"       DockVerticalTextFrac=350",
"       DockHorizontalTextFrac=400",
#ifdef WIN_CUSTOM_PENS
"       Border=0 0 0 0 0",
"       Axis=192 192 192 2 2",
"       Line1=0 0 255 0 0",
"       Line2=0 255 0 0 1",
"       Line3=255 0 0 0 2",
"       Line4=255 0 255 0 3",
"       Line5=0 0 128 0 4",
#endif
"",
"^ <h3>テキストウィンドウオプション</h3> ",
"",
" 以下の設定は wgnuplot のテキストウィンドウのみに適用されます。",
"",
" `TextOrigin` と `TextSize` は、テキストウィンドウの位置とサイズの指定",
" です。`TextMaximized` が 0 でない場合、ウィンドウは最大化されます。",
"",
" `TextFont` は、テキストウィンドウのフォントとサイズの指定です。",
"",
" `TextWrap` は、長いテキスト行の折り返しを選択します。",
"",
" `TextLines` は、テキストウィンドウの内部バッファに何行 (折り返しなし)",
" 保持するかを指定します。現在は、この値を wgnuplot 内からは変更できませ",
" ん。",
"",
" 以下参照: `text-menu`。",
"",
"^ <h3>ドッキンググラフオプション</h3>",
"",
" `DockVerticalTextFrac` と `DockHorizontalTextFrac` は、それぞれ千分率単",
" 位での、テキストウィンドウ内に垂直方向、水平方向に確保される割合です。",
"",
"^ <h3>グラフウィンドウオプション</h3>",
"",
" `GraphFont` は、フォント名とポイント単位のフォントサイズの指定です。",
#ifdef WIN_CUSTOM_PENS
"",
" `Border`, `Axis`, `Line` には、赤の強度 (0--255)、緑の強度、青の強度、",
" カラーの線種、白黒の線種の 5 つの数字を指定します。この線種",
" (`linestyle`) は、0=実線、1=鎖線、2=点線、3=一点鎖線、4=二点鎖線、とな",
" っています。上の例の `wgnuplot.ini` では、Line 2 はカラーモードでは緑の",
" 実線で、白黒モードでは鎖線になります。デフォルトの線幅は 1 ピクセルです。",
" 線種が負の値の場合、その絶対値がピクセル単位での線幅である実線を意味し",
" ます。Line1 と `points` スタイルで使われる線種は 1 ピクセル幅の実線でな",
" ければなりません。",
#endif
"",
" 以下参照: `graph-menu`。"
#endif /* JAPANESE_DOC */
END_HELP(windows)
START_HELP(wxt)
#ifndef JAPANESE_DOC
"1 wxt",
"?set terminal wxt",
"?terminal wxt",
"?set term wxt",
"?term wxt",
"?wxt",
" The `wxt` terminal device generates output in a separate window. The window",
" is created by the wxWidgets library, where the 'wxt' comes from. The actual",
" drawing is done via cairo, a 2D graphics library, and pango, a library for",
" laying out and rendering text.",
"",
" Syntax:",
"         set term wxt {<n>}",
"                      {size <width>,<height>} {position <x>,<y>}",
"                      {background <rgb_color> | nobackground}",
"                      {{no}enhanced}",
"                      {font <font>} {fontscale <scale>}",
"                      {title \"title\"}",
"                      {linewidth <lw>} {butt|rounded|square}",
"                      {dashlength <dl>}",
"                      {{no}persist}",
"                      {{no}raise}",
"                      {{no}ctrl}",
"                      {close}",
"",
" Multiple plot windows are supported: `set terminal wxt <n>` directs the",
" output to plot window number n.",
"",
" The default window title is based on the window number. This title can also",
" be specified with the keyword \"title\".",
"",
" Plot windows remain open even when the `gnuplot` driver is changed to a",
" different device.  A plot window can be closed by pressing the letter 'q'",
" while that window has input focus, by choosing `close` from a window",
" manager menu, or with `set term wxt <n> close`.",
"",
" The size of the plot area is given in pixels, it defaults to 640x384.",
" In addition to that, the actual size of the window also includes the space",
" reserved for the toolbar and the status bar.",
" When you resize a window, the plot is immediately scaled to fit in the",
" new size of the window. Unlike other interactive terminals, the `wxt`",
" terminal scales the whole plot, including fonts and linewidths, and keeps",
" its global aspect ratio constant, leaving an empty space painted in gray.",
" If you type `replot`, click the `replot` icon in the terminal toolbar or",
" type a new `plot` command, the new plot will completely fit in the window",
" and the font size and the linewidths will be reset to their defaults.",
"",
" The position option can be used to set the position of the plot window.",
" The position option only applies to the first plot after the `set term`",
" command.",
"",
" The active plot window (the one selected by `set term wxt <n>`) is",
" interactive. Its behaviour is shared with other terminal types. See `mouse`",
" for details. It also has some extra icons, which are supposed to be",
" self-explanatory.",
"",
" This terminal supports an enhanced text mode, which allows font and other",
" formatting commands (subscripts, superscripts, etc.) to be embedded in labels",
" and other text strings. The enhanced text mode syntax is shared with other",
" gnuplot terminal types. See `enhanced` for more details.",
"",
" <font> is in the format \"FontFace,FontSize\", i.e. the face and the size",
" comma-separated in a single string. FontFace is a usual font face name, such",
" as \'Arial\'. If you do not provide FontFace, the wxt terminal will use",
" \'Sans\'. FontSize is the font size, in points. If you do not provide it,",
" the wxt terminal will use a size of 10 points.",
"    For example :",
"       set term wxt font \"Arial,12\"",
"       set term wxt font \"Arial\" # to change the font face only",
"       set term wxt font \",12\" # to change the font size only",
"       set term wxt font \"\" # to reset the font name and size",
"",
" The fonts are retrieved from the usual fonts subsystems. Under Windows,",
" those fonts are to be found and configured in the entry \"Fonts\" of the",
" control panel. Under UNIX, they are handled by \"fontconfig\".",
"",
" Pango, the library used to layout the text, is based on utf-8. Thus, the wxt",
" terminal has to convert from your encoding to utf-8. The default input",
" encoding is based on your \'locale\'. If you want to use another encoding,",
" make sure gnuplot knows which one you are using. See `encoding` for more",
" details.",
"",
" Pango may give unexpected results with fonts that do not respect the unicode",
" mapping. With the Symbol font, for example, the wxt terminal will use the map",
" provided by http://www.unicode.org/ to translate character codes to unicode.",
" Pango will do its best to find a font containing this character, looking for",
" your Symbol font, or other fonts with a broad unicode coverage, like the",
" DejaVu fonts. Note that \"the Symbol font\" is to be understood as the Adobe",
" Symbol font, distributed with Acrobat Reader as \"SY______.PFB\".",
" Alternatively, the OpenSymbol font, distributed with OpenOffice.org as",
" \"opens___.ttf\", offers the same characters. Microsoft has distributed a",
" Symbol font (\"symbol.ttf\"), but it has a different character set with",
" several missing or moved mathematic characters. If you experience problems",
" with your default setup (if the demo enhancedtext.dem is not displayed",
" properly for example), you probably have to install one of the Adobe or",
" OpenOffice Symbol fonts, and remove the Microsoft one.",
" Other non-conform fonts, such as \"wingdings\" have been observed working.",
"",
" The rendering of the plot can be altered with a dialog available from the",
" toolbar. To obtain the best output possible, the rendering involves three",
" mechanisms : antialiasing, oversampling and hinting.",
" Antialiasing allows to display non-horizontal and non-vertical lines",
" smoother.",
" Oversampling combined with antialiasing provides subpixel accuracy,",
" so that gnuplot can draw a line from non-integer coordinates. This avoids",
" wobbling effects on diagonal lines ('plot x' for example).",
" Hinting avoids the blur on horizontal and vertical lines caused by",
" oversampling. The terminal will snap these lines to integer coordinates so",
" that a one-pixel-wide line will actually be drawn on one and only one pixel.",
"",
" By default, the window is raised to the top of your desktop when a plot is",
" drawn. This can be controlled with the keyword \"raise\".",
" The keyword \"persist\" will prevent gnuplot from exiting before you",
" explicitly close all the plot windows.",
" Finally, by default the key <space> raises the gnuplot console window, and",
" 'q' closes the plot window. The keyword \"ctrl\" allows you to replace those",
" bindings by <ctrl>+<space> and <ctrl>+'q', respectively.",
" These three keywords (raise, persist and ctrl) can also be set and remembered",
" between sessions through the configuration dialog."
#else /* JAPANESE_DOC */
"1 wxt",
"?set terminal wxt",
"?terminal wxt",
"?set term wxt",
"?term wxt",
"?wxt",
" `wxt` 出力形式は、個々のウィンドウへの出力を生成します。ウィンドウは ",
" wxWidgets ライブラリで生成されます (これが `wxt` の名前の由来です)。実",
" 際の描画は、2D グラフィックライブラリ cairo と、文字列配置/レンダリン",
" グライブラリ pango が処理します。",
"",
" 書式:",
"         set term wxt {<n>}",
"                      {size <width>,<height>} {position <x>,<y>}",
"                      {background <rgb_color> | nobackground}",
"                      {{no}enhanced}",
"                      {font <font>} {fontscale <scale>}",
"                      {title \"title\"}",
"                      {linewidth <lw>} {butt|rounded|square}",
"                      {dashlength <dl>}",
"                      {{no}persist}",
"                      {{no}raise}",
"                      {{no}ctrl}",
"                      {close}",
"",
" 複数の描画ウィンドウもサポートしていて、`set terminal wxt <n>` とすれば",
" 番号 n の描画ウィンドウへ出力します。",
"",
" デフォルトのウィンドウタイトルは、このウィンドウ番号に基づいています。",
" そのタイトルは \"title\" キーワードでも指定できます。",
"",
" 描画ウィンドウは、`gnuplot` の出力形式を別なものに変更しても残ったまま",
" になります。それを閉じるには、そのウィンドウに入力フォーカスがある状態",
" で 'q' を入力するか、ウィンドウマネージャのメニューで `close` を選択す",
" るか、`set term wxt <n> close` としてください。",
"",
" 描画領域のサイズはピクセル単位で与えます。デフォルトは 640x384 です。",
" それに加えて、ウィンドウの実際のサイズには、ツールバーやステータスバー",
" 用のスペースも追加されます。",
" ウィンドウのサイズを変更すると、描画グラフもウィンドウの新しいサイズに",
" ぴったり合うようにすぐに伸縮されます。他の対話型出力形式と違い、`wxt`",
" 出力形式はフォント、線幅も含めて描画全体を伸縮しますが、全体のアスペク",
" ト比は一定に保って、空いたスペースは灰色で塗り潰します。その後 `replot`",
" とタイプするかターミナルツールバーの `replot` アイコンをクリックするか",
" 新たに `plot` コマンドを入力すると、その新しい描画では完全にそのウィン",
" ドウに合わせられますが、フォントサイズや線幅はそれぞれのデフォルトにリ",
" セットされます。",
"",
" position オプションは描画ウィンドウの位置を設定するのに使えます。これは",
" コマンド `set term` 後の最初の描画にのみ適用されます。",
"",
" 現在の描画ウィンドウ (`set term wxt <n>` で選択されたもの) は対話的で",
" その挙動は、他の出力形式と共通です。詳細は、以下参照: `mouse`。それに",
" は追加のアイコンもいくつかついていますが、それらはそれ自体が説明的なも",
" のになっているはずです。",
"",
" この出力形式は、拡張文字列処理モード (enhanced text mode) をサポートし",
" ていて、フォントや書式コマンド (上付、下付など) をラベルや他の文字列に",
" 埋め込むことができます。拡張文字列処理モードの書式は他の gnuplot の出",
" 力形式と共通です。詳細は、以下参照: `enhanced`。",
"",
" <font> は \"FontFace,FontSize\" の形式で、FontFace と FontSize とをコ",
" ンマで分離して一つの文字列として書きます。FontFace は、\'Arial\' のよ",
" うな通常のフォント名です。FontFace を与えない場合は、wxt 出力形式は",
" \'Sans\' を使用します。FontSize は、ポイント単位のフォントサイズです。",
" FontSize を与えない場合は、wxt 出力形式は 10 ポイントを使用します。",
"    例:",
"       set term wxt font \"Arial,12\"",
"       set term wxt font \"Arial\" # フォント名のみ変更",
"       set term wxt font \",12\" # フォントサイズのみ変更",
"       set term wxt font \"\" # フォント名、フォントサイズをリセット",
"",
" フォントは通常のフォントサブシステムから取得します。MS-Windows 上では",
" コントロールパネルの \"Fonts\" エントリで検索されるので、そこに設定し",
" ます。Unix 上では、フォントは \"fontconfig\" が処理します。",
"",
" 文字列のレイアウトに使用される pango ライブラリは utf-8 を基本としてい",
" ますので、wxt 出力形式ではエンコーディングを utf-8 にする必要がありま",
" す。デフォルトの入力エンコーディングは、システムの \'locale\' によりま",
" す。他のエンコーディングを使用したい場合は、それを gnuplot に知らせる",
" 必要があります。詳細は、以下参照: `encoding`。",
"",
" pango は、unicode マッピングでないフォントに対しては予期せぬ結果を与え",
" るかもしれません。例えば Symbol フォントに対しては、wxt 出力形式は、文",
" 字コードを unicode に変換するために http://www.unicode.org/ で提供され",
" るマッピングを利用します。pango は、その文字を含むフォントを見つけるた",
" めにあなたの Symbol フォントを検索し、そして DejaVu フォントのように、",
" 幅広く unicode をカバーする他のフォントを探す、といった最善の作業を行",
" おうとします。なお、\"the Symbol font\" は、Acrobat Reader と一緒に",
" \"SY______.PFB\" として配布されている Adobe Symbol フォントであると解",
" 釈されることに注意してください。この代わりに、OpenOffice.org と一緒に",
" \"opens___.ttf\" として配布される OpenSymbol フォントが同じ文字を提供",
" しています。Microsoft も Symbol フォント (\"symbol.ttf\") を配布してい",
" ますが、これは異なる文字セットになっていて、いくつかは欠けていますし、",
" いくつかは数式記号に変わってしまっています。あなたのデフォルトの設定で",
" なんらかの問題が起きた場合 (例えばデモスクリプト enhancedtext.dem がち",
" ゃんと表示されないといった場合) は、Adobe か OpenOffice の Symbol フォ",
" ントをインストールして、Microsoft の Symbol フォントを削除しないといけ",
" ないかもしれません。",
" \"windings\" のような他の非標準のフォントでも動作することが報告されて",
" います。",
"",
" 描画のレンダリングは、ツールバーで対話的に変更できます。可能な限り最も",
" 良い出力を生成するためにこのレンダリングは、アンチエイリアス、オーバー",
" サンプリング、ヒンティングの 3 つの機構を持っています。",
" アンチエイリアスは、水平や垂直でない線の滑らかな表示を可能にします。",
" オーバーサンプリングは、アンチエイリアスと組でピクセルよりも小さいサイ",
" ズでの精度を提供し、gnuplot が非整数座標の直線を書けるようになります。",
" これは、対角方向の直線 (例えば 'plot x') が左右に揺れるのを避けます。",
" ヒンティングは、オーバーサンプリングによって引き起こされる水平、垂直方",
" 向の線分のぼかしを避けます。この出力形式は、これらの直線を整数座標に揃",
" え、それにより、1 ピクセル幅の直線は本当に 1 つ (1 つより多くも少なく",
" もない) のピクセルで描画します。",
"",
" デフォルトでは、描画が行われたときにウィンドウはデスクトップの一番上",
" (最前面) に表示されます。これは、キーワード \"raise\" で制御できます。",
" キーワード \"persist\" は、すべての描画ウインドウを明示的に閉じない間",
" は、gnuplot が終了しないようにします。",
" 最後に、デフォルトでは <space> キーは gnuplot コンソールウィンドウを上",
" に上げ、'q' は描画ウィンドウを閉じます。キーワード \"ctrl\" は、それら",
" のキー割り当てを、それぞれ <ctrl>+<space> と <ctrl>+'q' に変更します。",
" これらの 3 つのキーワード (raise, persist, ctrl) は、設定ダイアログ上",
" のやりとりでも設定し、記憶させることができます。"
#endif /* JAPANESE_DOC */
END_HELP(wxt)
START_HELP(x11)
#ifndef JAPANESE_DOC
"1 x11",
"?commands set terminal x11",
"?set terminal x11",
"?set term x11",
"?terminal x11",
"?term x11",
"?x11",
"?X11",
"",
" Syntax:",
"    set terminal x11 {<n> | window \"<string>\"}",
"                     {title \"<string>\"}",
"                     {{no}enhanced} {font <fontspec>}",
"                     {linewidth LW}",
"                     {{no}persist} {{no}raise} {{no}ctrlq}",
"                     {{no}replotonresize}",
"                     {close}",
"                     {size XX,YY} {position XX,YY}",
"    set terminal x11 {reset}",
"",
" Multiple plot windows are supported: `set terminal x11 <n>` directs the",
" output to plot window number n.  If n is not 0, the terminal number will be",
" appended to the window title (unless a title has been supplied manually)",
" and the icon will be labeled `Gnuplot <n>`.  The active window may be",
" distinguished by a change in cursor (from default to crosshair).",
"",
" The `x11` terminal can connect to X windows previously created by an outside",
" application via the option `window` followed by a string containing the",
" X ID for the window in hexadecimal format.  Gnuplot uses that external X",
" window as a container since X does not allow for multiple clients selecting",
" the ButtonPress event.  In this way, gnuplot's mouse features work within",
" the contained plot window.",
"",
"    set term x11 window \"220001e\"",
"",
" The x11 terminal supports enhanced text mode (see `enhanced`), subject",
" to the available fonts. In order for font size commands embedded in text",
" to have any effect, the default x11 font must be scalable. Thus the first",
" example below will work as expected, but the second will not.",
"",
"    set term x11 enhanced font \"arial,15\" ",
"    set title '{/=20 Big} Medium {/=5 Small}' ",
"",
"    set term x11 enhanced font \"terminal-14\" ",
"    set title '{/=20 Big} Medium {/=5 Small}' ",
"",
" Plot windows remain open even when the `gnuplot` driver is changed to a",
" different device.  A plot window can be closed by pressing the letter q",
" while that window has input focus, or by choosing `close` from a window",
" manager menu.  All plot windows can be closed by specifying `reset`, which",
" actually terminates the subprocess which maintains the windows (unless",
" `-persist` was specified).  The `close` command can be used to close",
" individual plot windows by number.  However, after a `reset`, those plot",
" windows left due to persist cannot be closed with the command `close`.",
" A `close` without a number closes the current active plot window.",
"",
" The gnuplot outboard driver, gnuplot_x11, is searched in a default place",
" chosen when the program is compiled.  You can override that by defining",
" the environment variable GNUPLOT_DRIVER_DIR to point to a different",
" location.",
"",
" Plot windows will automatically be closed at the end of the session",
" unless the `-persist` option was given.",
"",
" The options `persist` and `raise` are unset by default, which means that",
" the defaults (persist == no and raise == yes) or the command line options",
" -persist / -raise or the Xresources are taken.  If [no]persist or",
" [no]raise are specified, they will override command line options and",
" Xresources.  Setting one of these options takes place immediately, so",
" the behaviour of an already running driver can be modified.  If the window",
" does not get raised, see discussion in `raise`.",
"",
" The option `replotonresize` (active by default) replots the data when the",
" plot window is resized. Without this option, the even-aspect-ratio scaling",
" may result in the plot filling only part of the window after resizing.",
" With this option, gnuplot does a full replot on each resize event, resulting",
" in better space utilization. This option is generally desirable, unless the",
" potentially CPU-intensive replotting during resizing is a concern. Replots",
" can be manually initiated with hotkey 'e' or the 'replot' command.",
  "",
" The option `title \"<title name>\"` will supply the title name of the window",
" for the current plot window or plot window <n> if a number is given.",
" Where (or if) this title is shown depends on your X window manager.",
"",
" The size option can be used to set the size of the plot window.  The",
" size option will only apply to newly created windows.",
"",
" The position option can be used to set the position of the plot window.  The",
" position option will only apply to newly created windows.",
"",
" The size or aspect ratio of a plot may be changed by resizing the `gnuplot`",
" window.",
"",
" Linewidths and pointsizes may be changed from within `gnuplot` with",
" `set linestyle`.",
"",
" For terminal type `x11`, `gnuplot` accepts (when initialized) the standard",
" X Toolkit options and resources such as geometry, font, and name from the",
" command line arguments or a configuration file.  See the X(1) man page",
" (or its equivalent) for a description of such options.",
"",
"=X resources",
" A number of other `gnuplot` options are available for the `x11` terminal.",
" These may be specified either as command-line options when `gnuplot` is",
" invoked or as resources in the configuration file \".Xdefaults\".  They are",
" set upon initialization and cannot be altered during a `gnuplot` session.",
" (except `persist` and `raise`)",
"2 x11_fonts",
"?commands set terminal x11 x11_fonts",
"?set terminal x11 x11_fonts",
"?set term x11 x11_fonts",
"?x11 x11_fonts",
"?x11_fonts",
"=fonts",
" Upon initial startup, the default font is taken from the X11 resources",
" as set in the system or user .Xdefaults file or on the command line.",
"",
" Example:",
"       gnuplot*font: lucidasans-bold-12",
" A new default font may be specified to the x11 driver from inside",
" gnuplot using",
"      `set term x11 font \"<fontspec>\"`",
" The driver first queries the X-server for a font of the exact name given.",
" If this query fails, then it tries to interpret <fontspec> as",
" \"<font>,<size>,<slant>,<weight>\" and to construct a full X11 font name",
" of the form",
"       -*-<font>-<weight>-<s>-*-*-<size>-*-*-*-*-*-<encoding>",
"",
"  <font> is the base name of the font (e.g. Times or Symbol)",
"  <size> is the point size (defaults to 12 if not specified)",
"  <s> is 'i' if <slant>==\"italic\" 'o' if <slant>==\"oblique\" 'r' otherwise",
"  <weight> is 'medium' or 'bold' if explicitly requested, otherwise '*'",
"  <encoding> is set based on the current character set.",
" So `set term x11 font \"arial,15,italic\"` will be translated to",
" -*-arial-*-i-*-*-15-*-*-*-*-*-iso8859-1 (assuming default encoding).",
" The <size>, <slant>, and <weight> specifications are all optional.",
" If you do not specify <slant> or <weight> then you will get whatever font ",
" variant the font server offers first.",
" You may set a default encoding via the corresponding X11 resource. E.g.",
"       gnuplot*encoding: iso8859-15",
" The driver also recognizes some common PostScript font names and",
" replaces them with possible X11 or TrueType equivalents.",
" This same sequence is used to process font requests from `set label`.",
"",
" If your gnuplot was built with configuration option --enable-x11-mbfonts,",
" you can specify multi-byte fonts by using the prefix \"mbfont:\" on the font",
" name. An additional font may be given, separated by a semicolon.",
" Since multi-byte font encodings are interpreted according to the locale",
" setting, you must make sure that the environmental variable LC_CTYPE is set",
" to some appropriate locale value such as ja_JP.eucJP, ko_KR.EUC, or zh_CN.EUC.",
"",
" Example:",
"       set term x11 font 'mbfont:kana14;k14'",
"             # 'kana14' and 'k14' are Japanese X11 font aliases, and ';'",
"             # is the separator of font names.",
"       set term x11 font 'mbfont:fixed,16,r,medium'",
"             # <font>,<size>,<slant>,<weight> form is also usable.",
"       set title '(mb strings)' font 'mbfont:*-fixed-medium-r-normal--14-*'",
"",
" The same syntax applies to the default font in Xresources settings,",
" for example,",
"       gnuplot*font: \\",
"           mbfont:-misc-fixed-medium-r-normal--14-*-*-*-c-*-jisx0208.1983-0",
"",
" If gnuplot is built with --enable-x11-mbfonts, you can use two special",
" PostScript font names 'Ryumin-Light-*' and 'GothicBBB-Medium-*' (standard",
" Japanese PS fonts) without the prefix \"mbfont:\".",
"",
"2 command-line_options",
"?commands set terminal x11 command-line-options",
"?set terminal x11 command-line-options",
"?set term x11 command-line-options",
"?x11 command-line-options",
" In addition to the X Toolkit options, the following options may be specified",
" on the command line when starting `gnuplot` or as resources in your",
" \".Xdefaults\" file (note that `raise` and `persist` can be overridden",
" later by `set term x11 [no]raise [no]persist)`:",
"@start table - first is interactive cleartext form",
"  `-mono`     forces monochrome rendering on color displays.",
"  `-gray`     requests grayscale rendering on grayscale or color displays.",
"              (Grayscale displays receive monochrome rendering by default.)",
"  `-clear`    requests that the window be cleared momentarily before a",
"              new plot is displayed.",
"  `-tvtwm`    requests that geometry specifications for position of the",
"              window be made relative to the currently displayed portion",
"              of the virtual root.",
"  `-raise`    raises plot window after each plot",
"  `-noraise`  does not raise plot window after each plot",
#ifdef USE_MOUSE
"  `-ctrlq   ` closes window on ctrl-q rather than q",
#endif
"  `-persist`  plot windows survive after main gnuplot program exits",
"#\\begin{tabular}{|cl|} \\hline",
"#`-mono`     & forces monochrome rendering on color displays.\\\\",
"#`-gray`     & requests grayscale rendering on grayscale or color displays.\\\\",
"#            & (Grayscale displays receive monochrome rendering by default.) \\\\",
"#`-clear`    & requests that the window be cleared momentarily before a\\\\",
"#            & new plot is displayed. \\\\",
"#`-tvtwm`    & requests that geometry specifications for position of the\\\\",
"#            & window be made relative to the currently displayed portion\\\\",
"#            & of the virtual root. \\\\",
"#`-raise`    & raises plot window after each plot. \\\\",
"#`-noraise`  & does not raise plot window after each plot. \\\\",
"#`-persist`  & plot windows survive after main gnuplot program exits. \\\\",
"%c l .",
"%`-mono`@forces monochrome rendering on color displays.",
"%`-gray`@requests grayscale rendering on grayscale or color displays.",
"%       @(Grayscale displays receive monochrome rendering by default.)",
"%`-clear`@requests that the window be cleared momentarily before a",
"%        @new plot is displayed.",
"%`-tvtwm`@requests that geometry specifications for position of the",
"%        @window be made relative to the currently displayed portion",
"%        @of the virtual root.",
"%`-raise`@raises plot window after each plot",
"%`-noraise`@does not raise plot window after each plot",
#ifdef USE_MOUSE
"%`-novevents`@does not process mouse and key events",
"%`-ctrlq`@closes window on ctrl-q rather than q",
#endif
"%`-persist`@plot windows survive after main gnuplot program exits",
"@end table",
"=X resources",
" The options are shown above in their command-line syntax.  When entered as",
" resources in \".Xdefaults\", they require a different syntax.",
"",
" Example:",
"       gnuplot*gray:  on",
"       gnuplot*ctrlq: on",
"",
" `gnuplot` also provides a command line option (`-pointsize <v>`) and a",
" resource, `gnuplot*pointsize: <v>`, to control the size of points plotted",
" with the `points` plotting style.  The value `v` is a real number (greater",
" than 0 and less than or equal to ten) used as a scaling factor for point",
" sizes.  For example, `-pointsize 2` uses points twice the default size, and",
" `-pointsize 0.5` uses points half the normal size.",
"",
" The `-ctrlq` switch changes the hot-key that closes a plot window from `q`",
" to `<ctrl>q`. This is useful is you are using the keystroke-capture feature",
" `pause mouse keystroke`, since it allows the character `q` to be captured",
" just as all other alphanumeric characters. The `-ctrlq` switch similarly",
" replaces the <space> hot-key with <ctrl><space> for the same reason.",
"",
"2 color_resources",
"?set terminal x11 color_resources",
"?set term x11 color_resources",
"?x11 color_resources",
"=X resources",
" NB: THIS SECTION IS LARGELY IRRELEVANT IN GNUPLOT VERSION 5",
" The X11 terminal honors the following resources (shown here with their",
" default values) or the greyscale resources.  The values may be color names",
" as listed in the X11 rgb.txt file on your system, hexadecimal RGB color",
" specifications (see X11 documentation), or a color name followed by a comma",
" and an `intensity` value from 0 to 1.  For example, `blue, 0.5` means a half",
" intensity blue.",
"@start table - first is interactive cleartext form",
"  gnuplot*background:  white",
"  gnuplot*textColor:   black",
"  gnuplot*borderColor: black",
"  gnuplot*axisColor:   black",
"  gnuplot*line1Color:  red",
"  gnuplot*line2Color:  green",
"  gnuplot*line3Color:  blue",
"  gnuplot*line4Color:  magenta",
"  gnuplot*line5Color:  cyan",
"  gnuplot*line6Color:  sienna",
"  gnuplot*line7Color:  orange",
"  gnuplot*line8Color:  coral",
"#\\begin{tabular}{|cl|} \\hline",
"#&gnuplot*background: white\\\\",
"#&gnuplot*textColor: black\\\\",
"#&gnuplot*borderColor: black\\\\",
"#&gnuplot*axisColor: black\\\\",
"#&gnuplot*line1Color: red\\\\",
"#&gnuplot*line2Color: green\\\\",
"#&gnuplot*line3Color: blue\\\\",
"#&gnuplot*line4Color: magenta\\\\",
"#&gnuplot*line5Color: cyan\\\\",
"#&gnuplot*line6Color: sienna\\\\",
"#&gnuplot*line7Color: orange\\\\",
"#&gnuplot*line8Color: coral\\\\",
"%c l .",
"%@gnuplot*background: white",
"%@gnuplot*textColor: black",
"%@gnuplot*borderColor: black",
"%@gnuplot*axisColor: black",
"%@gnuplot*line1Color: red",
"%@gnuplot*line2Color: green",
"%@gnuplot*line3Color: blue",
"%@gnuplot*line4Color: magenta",
"%@gnuplot*line5Color: cyan",
"%@gnuplot*line6Color: sienna",
"%@gnuplot*line7Color: orange",
"%@gnuplot*line8Color: coral",
"@end table",
"",
" The command-line syntax for these is simple only for background,",
" which maps directly to the usual X11 toolkit option \"-bg\".  All",
" others can only be set on the command line by use of the generic",
" \"-xrm\" resource override option",
"",
" Examples:",
"",
"       gnuplot -background coral",
" to change the background color.",
"",
"       gnuplot -xrm 'gnuplot*line1Color:blue'",
" to override the first linetype color.",
"",
"2 grayscale_resources",
"?commands set terminal x11 grayscale_resources",
"?set terminal x11 grayscale_resources",
"?set term x11 grayscale_resources",
"?x11 grayscale_resources",
"?grayscale_resources",
"=X resources",
" When `-gray` is selected, `gnuplot` honors the following resources for",
" grayscale or color displays (shown here with their default values).  Note",
" that the default background is black.",
"@start table - first is interactive cleartext form",
"  gnuplot*background: black",
"  gnuplot*textGray:   white",
"  gnuplot*borderGray: gray50",
"  gnuplot*axisGray:   gray50",
"  gnuplot*line1Gray:  gray100",
"  gnuplot*line2Gray:  gray60",
"  gnuplot*line3Gray:  gray80",
"  gnuplot*line4Gray:  gray40",
"  gnuplot*line5Gray:  gray90",
"  gnuplot*line6Gray:  gray50",
"  gnuplot*line7Gray:  gray70",
"  gnuplot*line8Gray:  gray30",
"#\\begin{tabular}{|cl|} \\hline",
"#&gnuplot*background: black\\\\",
"#&gnuplot*textGray: white\\\\",
"#&gnuplot*borderGray: gray50\\\\",
"#&gnuplot*axisGray: gray50\\\\",
"#&gnuplot*line1Gray: gray100\\\\",
"#&gnuplot*line2Gray: gray60\\\\",
"#&gnuplot*line3Gray: gray80\\\\",
"#&gnuplot*line4Gray: gray40\\\\",
"#&gnuplot*line5Gray: gray90\\\\",
"#&gnuplot*line6Gray: gray50\\\\",
"#&gnuplot*line7Gray: gray70\\\\",
"#&gnuplot*line8Gray: gray30\\\\",
"%c l .",
"%@gnuplot*background: black",
"%@gnuplot*textGray: white",
"%@gnuplot*borderGray: gray50",
"%@gnuplot*axisGray: gray50",
"%@gnuplot*line1Gray: gray100",
"%@gnuplot*line2Gray: gray60",
"%@gnuplot*line3Gray: gray80",
"%@gnuplot*line4Gray: gray40",
"%@gnuplot*line5Gray: gray90",
"%@gnuplot*line6Gray: gray50",
"%@gnuplot*line7Gray: gray70",
"%@gnuplot*line8Gray: gray30",
"@end table",
"",
"2 line_resources",
"?set terminal x11 line_resources",
"?set term x11 line_resources",
"?x11 line_resources",
"=X resources",
" NB: THIS SECTION IS LARGELY IRRELEVANT IN GNUPLOT VERSION 5",
" `gnuplot` honors the following resources for setting the width (in pixels) of",
" plot lines (shown here with their default values.)  0 or 1 means a minimal",
" width line of 1 pixel width.  A value of 2 or 3 may improve the appearance of",
" some plots.",
"@start table - first is interactive cleartext form",
"  gnuplot*borderWidth: 1",
"  gnuplot*axisWidth:   0",
"  gnuplot*line1Width:  0",
"  gnuplot*line2Width:  0",
"  gnuplot*line3Width:  0",
"  gnuplot*line4Width:  0",
"  gnuplot*line5Width:  0",
"  gnuplot*line6Width:  0",
"  gnuplot*line7Width:  0",
"  gnuplot*line8Width:  0",
"#\\begin{tabular}{|cl|} \\hline",
"#&gnuplot*borderWidth: 1\\\\",
"#&gnuplot*axisWidth: 0\\\\",
"#&gnuplot*line1Width: 0\\\\",
"#&gnuplot*line2Width: 0\\\\",
"#&gnuplot*line3Width: 0\\\\",
"#&gnuplot*line4Width: 0\\\\",
"#&gnuplot*line5Width: 0\\\\",
"#&gnuplot*line6Width: 0\\\\",
"#&gnuplot*line7Width: 0\\\\",
"#&gnuplot*line8Width: 0\\\\",
"%c l .",
"%@gnuplot*borderWidth: 1",
"%@gnuplot*axisWidth: 0",
"%@gnuplot*line1Width: 0",
"%@gnuplot*line2Width: 0",
"%@gnuplot*line3Width: 0",
"%@gnuplot*line4Width: 0",
"%@gnuplot*line5Width: 0",
"%@gnuplot*line6Width: 0",
"%@gnuplot*line7Width: 0",
"%@gnuplot*line8Width: 0",
"@end table",
"",
" `gnuplot` honors the following resources for setting the dash style used for",
" plotting lines.  0 means a solid line.  A two-digit number `jk` (`j` and `k`",
" are >= 1 and <= 9) means a dashed line with a repeated pattern of `j` pixels",
" on followed by `k` pixels off.  For example, '16' is a dotted line with one",
" pixel on followed by six pixels off.  More elaborate on/off patterns can be",
" specified with a four-digit value.  For example, '4441' is four on, four off,",
" four on, one off.  The default values shown below are for monochrome displays",
" or monochrome rendering on color or grayscale displays.",
" Color displays default to dashed:off ",
"@start table - first is interactive cleartext form",
"  gnuplot*dashed:       off",
"  gnuplot*borderDashes:   0",
"  gnuplot*axisDashes:    16",
"  gnuplot*line1Dashes:    0",
"  gnuplot*line2Dashes:   42",
"  gnuplot*line3Dashes:   13",
"  gnuplot*line4Dashes:   44",
"  gnuplot*line5Dashes:   15",
"  gnuplot*line6Dashes: 4441",
"  gnuplot*line7Dashes:   42",
"  gnuplot*line8Dashes:   13",
"#\\begin{tabular}{|cl|} \\hline",
"#&gnuplot*dashed: off\\\\",
"#&gnuplot*borderDashes: 0\\\\",
"#&gnuplot*axisDashes: 16\\\\",
"#&gnuplot*line1Dashes: 0\\\\",
"#&gnuplot*line2Dashes: 42\\\\",
"#&gnuplot*line3Dashes: 13\\\\",
"#&gnuplot*line4Dashes: 44\\\\",
"#&gnuplot*line5Dashes: 15\\\\",
"#&gnuplot*line6Dashes: 4441\\\\",
"#&gnuplot*line7Dashes: 42\\\\",
"#&gnuplot*line8Dashes: 13\\\\",
"%c l .",
"%@gnuplot*dashed: off",
"%@gnuplot*borderDashes: 0",
"%@gnuplot*axisDashes: 16",
"%@gnuplot*line1Dashes: 0",
"%@gnuplot*line2Dashes: 42",
"%@gnuplot*line3Dashes: 13",
"%@gnuplot*line4Dashes: 44",
"%@gnuplot*line5Dashes: 15",
"%@gnuplot*line6Dashes: 4441",
"%@gnuplot*line7Dashes: 42",
"%@gnuplot*line8Dashes: 13",
"@end table"
, "",
"2 x11 pm3d_resources",
"?set terminal x11 pm3d_resources",
"?set term x11 pm3d_resources",
"?x11 pm3d_resources",
"?x11 pm3d",
"=X resources",
" NB: THIS SECTION IS LARGELY IRRELEVANT IN GNUPLOT VERSION 5",
"",
" By default `gnuplot` uses the default visual of the screen. The number of",
" colors which can be allocated depends on the visual class chosen. On a",
" visual class with a depth > 12bit, gnuplot starts with a maximal number",
" of 0x200 colors.  On a visual class with a depth > 8bit (but <= 12 bit)",
" the maximal number of colors is 0x100, on <= 8bit displays the maximum",
" number of colors is 240 (16 are left for line colors).",
"",
" Gnuplot first starts to allocate the maximal number of colors as stated",
" above.  If this fails, the number of colors is reduced by the factor 2",
" until gnuplot gets all colors which are requested. If dividing `maxcolors`",
" by 2 repeatedly results in a number which is smaller than `mincolors`",
" `gnuplot` tries to install a private colormap. In this case the window",
" manager is responsible for swapping colormaps when the pointer is moved",
" in and out the x11 driver's window.",
"",
" The default for `mincolors` is maxcolors / (num_colormaps > 1 ? 2 : 8),",
" where num_colormaps is the number of colormaps which are currently used",
" by gnuplot (usually 1, if only one x11 window is open).",
"",
"2 x11 other_resources",
"?commands set terminal x11 other_resources",
"?set terminal x11 other_resources",
"?set term x11 other_resources",
"?x11 other_resources",
"=X resources",
" By default the contents of the current plot window are exported to the X11",
" clipboard in response to X events in the window. Setting the resource",
" 'gnuplot*exportselection' to 'off' or 'false' will disable this.",
"",
" By default text rotation is done using a method that is fast, but can",
" corrupt nearby colors depending on the background.  If this is a problem,",
" you can set the resource 'gnuplot.fastrotate' to 'off'",
"",
"@start table - other x11 resources",
"  gnuplot*exportselection:  off",
"  gnuplot*fastrotate:  on",
"  gnuplot*ctrlq:  off",
"#\\begin{tabular}{|cl|} \\hline",
"#&gnuplot*exportselection:  off\\\\",
"#&gnuplot*fastrotate:  on\\\\",
"#&gnuplot*ctrlq:  off\\\\",
"%c l .",
"%@gnuplot*exportselection:  off",
"%@gnuplot*fastrotate:  on",
"%@gnuplot*ctrlq:  off",
"@end table"
#else /* JAPANESE_DOC */
"1 x11",
"?commands set terminal x11",
"?set terminal x11",
"?set term x11",
"?terminal x11",
"?term x11",
"?x11",
"?X11",
"",
" 書式:",
"    set terminal x11 {<n> | window \"<string>\"}",
"                     {title \"<string>\"}",
"                     {{no}enhanced} {font <fontspec>}",
"                     {linewidth LW}",
"                     {{no}persist} {{no}raise} {{no}ctrlq}",
"                     {{no}replotonresize}",
"                     {close}",
"                     {size XX,YY} {position XX,YY}",
"    set terminal x11 {reset}",
"",
" 複数のグラフ描画ウィンドウをサポートしています。`set terminal x11 <n>`",
" は番号 n の描画ウィンドウに出力します。n が 0 でなければ、タイトルが明",
" 示的に指定されていなければその番号がウィンドウタイトルとしてつけられ、",
" アイコンには `Gnuplot <n>` とラベル付けされます。現在有効なウィンドウ",
" はカーソル記号の変化で区別できます (デフォルトカーソルから十字カーソル",
" へ)。",
"",
" `x11` 出力形式は、外部のアプリケーションによって生成されている X のウィ",
" ンドウの X ID (16 進表記) をオプション `window` の後に文字列として指定",
" することで、そのウィンドウと接続できます。X は複数のクライアントにイベ",
" ント ButtonPress の選択を認めないため、gnuplot その外部ウィンドウをコン",
" テナとして使用します。この方法により、gnuplot のマウス機能はとりこまれ",
" た描画ウィンドウ内でも作動します。",
"",
"    set term x11 window \"220001e\"",
"",
" x11 出力形式は、利用可能なフォントの元で拡張文字列処理モード (以下参照:",
" `enhanced`) をサポートしています。文字列に埋め込まれ、様々な効果を与え",
" るフォントサイズ命令のために、デフォルトの x11 フォントがスケーラブル",
" フォントである必要があります。よって、以下の最初の例はうまくいくでしょ",
" うが、2 番目のものはそうではないでしょう。",
"",
"    set term x11 enhanced font \"arial,15\" ",
"    set title '{/=20 Big} Medium {/=5 Small}' ",
"",
"    set term x11 enhanced font \"terminal-14\" ",
"    set title '{/=20 Big} Medium {/=5 Small}' ",
"",
" `gnuplot` ドライバが別な出力ドライバに変更されても、描画ウィンドウは開",
" いたままになります。描画ウィンドウは、そのウィンドウにカーソルを置いて",
" 文字 q を押すか、ウィンドウマネージャのメニューの `close` を選択すれば",
" 閉じることができます。`reset` を実行すれば全てのウィンドウを一度に閉じ",
" れます。それは実際にウィンドウを管理している子プロセスを終了します (も",
" し `-persist` が指定されていなければ)。コマンド `close` は、個々の描画",
" ウィンドウを番号を指定して閉じるのに使うことができます。しかし、persist",
" のために残っているような描画ウィンドウは `close` コマンドでは閉じること",
" はできません。番号を省略して `close` した場合には現在有効な描画ウィンド",
" ウを閉じます。",
"",
" gnuplot の外にあるドライバ gnuplot_x11 は、プログラムのコンパイル時に",
" 選択されたデフォルトの場所が検索されます。これは環境変数",
" GNUPLOT_DRIVER_DIR を異なる場所と定義することで変更できます。",
"",
" 描画ウィンドウは `-persisit` オプションが与えられていなければ、対話の",
" 終了時に自動的に閉じられます。",
"",
" オプション `persist` と `raise` はデフォルトでは設定されていませんが、",
" それは、デフォルトの値 (persist == no で raise == yes) か、コマンドラ",
" インオプション -persist / -raise の指定か、または X のリソース値が使わ",
" れる、ということを意味します。[no]persist か [no]raise が指定されると",
" それはコマンドラインオプションや X リソースの設定よりも優先されます。",
" これらのオプションの設定は直ちに効力を持ちますので、既に起動しているド",
" ライバの挙動は変更されます。ウィンドウを前面に出せない場合は、以下参照:",
" `raise`。",
"",
" オプション `replotonresize` (デフォルトで有効) は、描画ウィンドウのリ",
" サイズ時にデータを再描画します。このオプションなしだと、アスペクト比の",
" 変わらない拡大であっても、リサイズ後にウィンドウの一部分にしか描画され",
" ない可能性があります。このオプションを使えば、gnuplot は各リサイズイベ",
" ント毎に完全な再描画を行いますので、枠内をより綺麗に使ってくれます。リ",
" サイズの間の再描画による潜在的な CPU への負荷が心配でない場合、このオ",
" プションは普通は望ましいものです。再描画は、ホットキー 'e' や 'replot'",
" コマンドで手動で実行することも可能です。",
"",
" オプション `title \"<title name>\"` は現在の描画ウィンドウに、または番号",
" を指定すればその番号の描画ウィンドウに対するウィンドウタイトル名をつけ",
" ます。そのタイトルが表示される場所、または表示されるかどうかは、使って",
" いる X のウィンドウマネージャに依存します。", 
"",
" オプション size は、描画ウィンドウのサイズを設定するのに使用できます。",
" このオプションは、その後に生成するウィンドウのみに適用されます。",
"",
" オプション position は、描画ウィンドウの位置を設定するのに使えます。",
" このオプションは、その後に生成するウィンドウのみに適用されます。",
"",
" 描画サイズとアスペクト比は、`gnuplot` のウィンドウをリサイズすることで",
" も変更できます。",
"",
" 線の幅と点のサイズは `gnuplot` の `set linestyle` で変更可能です。",
"",
" 出力ドライバ `x11` に関しては、`gnuplot` は (起動時に)、コマンドライン、",
" または設定ファイルから、geometry や font, name などの通常の X Toolkit",
" オプションやリソースの指定を受け付けます。それらのオプションについては",
" X(1) マニュアルページ (やそれと同等のもの) を参照してください。",
"",
"=X resources",
" 他にも `x11` 出力形式用の多くの `gnuplot` のオプションがあります。これ",
" らは `gnuplot` を呼ぶときにコマンドラインオプションとして指定するか、",
" または設定ファイル \".Xdefaults\" のリソースとして指定できます。これら",
" は起動時に設定されるので、`gnuplot` 実行時には変更できません",
" (`persist` と `raise` 以外は)。",
"2 X11 のフォント (x11_fonts)",
"?commands set terminal x11 x11_fonts",
"?set terminal x11 x11_fonts",
"?set term x11 x11_fonts",
"?x11 x11_fonts",
"?x11_fonts",
"=fonts",
" 初期起動時は、システムの設定か、ユーザの .Xdefaults ファイルの設定か、",
" コマンドライン指定か、のいずれかによる X11 リソースによってデフォルト",
" のフォントが選択されます。",
"",
" 例:",
"       gnuplot*font: lucidasans-bold-12",
" 新しいデフォルトのフォントを、gnuplot 内部から x11 ドライバに以下のよ",
" うにして指示することもできます:",
"      `set term x11 font \"<fontspec>\"`",
" まず x11 ドライバは、与えられたフォントの正式名を X サーバに尋ねます。",
" この問い合わせが失敗した場合、<fontspec> を",
" \"<font>,<size>,<slant>,<weight>\" と解釈し、以下の形の完全な X11 フォ",
" ント名を生成しようとします:",
"       -*-<font>-<weight>-<s>-*-*-<size>-*-*-*-*-*-<encoding>",
"",
"  <font> はフォントの基本名 (base name) (例: Times, Symbol)",
"  <size> はポイントサイズ (指定がなければデフォルトは 12)",
"  <s> は <slant>==\"italic\" なら 'i', <slant>==\"oblique\" なら 'o', その他は 'r'",
"  <weight> は明示的に指定されれば 'medium' か 'bold'、その他は '*'",
"  <encoding> は現在の文字集合に基づいて設定。",
" よって `set term x11 font \"arial,15,italic\"` は (デフォルトの encoding",
" だとすれば) -*-arial-*-i-*-*-15-*-*-*-*-*-iso8859-1 に変換されます。",
" <size>, <slant>, <weight> 指定はいずれも必須ではありません。<slant> や",
" <weight> を指定しなかった場合は、フォントサーバが最初に見つけた、変種",
" のフォントを取得するかもしれません。",
" デフォルトのエンコーディングは、対応する X11 リソースを使って設定するこ",
" ともできます。例:",
"       gnuplot*encoding: iso8859-15",
" x11 ドライバは、一般的な PostScript フォント名も認識し、それと同等で有",
" 効な X11 フォントか TrueType フォントに置き換えます。",
" これと同じ手順が、`set label` の要求によるフォントの生成でも使われてい",
" ます。",
"",
" あなたの gnuplot が configure の --enable-x11-mbfonts オプションをつけ",
" てインストールされたものなら、フォント名の前に \"mbfont:\" をつけるこ",
" とでマルチバイトフォントを指定することができます。フォント名を複数指定",
" する個ともできますが、その場合はセミコロンで区切ります。マルチバイトフ",
" ォントのエンコーディングは locale の設定に従いますので、環境変数",
" LC_CTYPE を適切な値 (例えば ja_JP.eucJP, ko_KR.EUC, zh_CN.EUC など) に",
" に設定する必要があります。",
"",
" 例:",
"       set term x11 font 'mbfont:kana14;k14'",
"             # 'kana14' と 'k14' は日本語の X11 font エイリアス名、';'",
"             # はフォント名の区切りです。",
"       set term x11 font 'mbfont:fixed,16,r,medium'",
"             # <font>,<size>,<slant>,<weight> 形式も使用できます。",
"       set title '(mb strings)' font 'mbfont:*-fixed-medium-r-normal--14-*'",
"",
" 同じ書式は X のリソースでのデフォルトフォントの設定でも有効です。例:",
"       gnuplot*font: \\",
"           mbfont:-misc-fixed-medium-r-normal--14-*-*-*-c-*-jisx0208.1983-0",
"",
" gnuplot が --enable-x11-mbfonts でインストールされた場合、\"mbfont:\"",
" をつけなくても 2 つの特別な PostScript フォント名 'Ryumin-Light-*',",
" 'GothicBBB-Medium-*' (標準的な日本語 PS フォント) を使うこともできます。",
"", 
"2 コマンドラインオプション (command-line_options)",
"?commands set terminal x11 command-line-options",
"?set terminal x11 command-line-options",
"?set term x11 command-line-options",
"?x11 command-line-options",
" X Toolkit オプションに加え、以下のオプションが gnuplot の立ち上げ時の",
" コマンドラインで、またはユーザのファイル \".Xdefaults\" 内のリソースとし",
" て指定できます (`raise` と `persist` は `set term x11 [no]raise [no]persist`",
" によって上書きされることに注意してください):",
"@start table - まずは対話型テキスト形式",
"  `-mono`     カラーディスプレイ上で強制的に白黒描画",
"  `-gray`     グレイスケールまたはカラーディスプレイ上でのグレイスケール描画",
"              (デフォルトではグレイスケールディスプレイは白黒描画を受け付ける)",
"  `-clear`    新しい描画を表示する前に (瞬間的に) 画面を消去",
"  `-tvtwm`    geometry オプションによる位置の指定を、仮想ルートウィンドウ中の",
"              現在の表示部分に対する相対的な位置にする",
"  `-raise`    各描画後に描画ウィンドウを最前面へ出す",
"  `-noraise`  各描画後に描画ウィンドウを最前面へ出すことはしない",
#ifdef USE_MOUSE
"  `-ctrlq   ` ウィンドウを q でなく ctrl-q で閉じる",
#endif
"  `-persist`  gnuplot プログラム終了後も描画ウィンドウを残す",
"#\\begin{tabular}{|cl|} \\hline",
"#`-mono`     & カラーディスプレイ上で強制的に白黒描画\\\\",
"#`-gray`     & グレイスケールまたはカラーディスプレイ上でのグレイスケール描画\\\\",
"#            & (デフォルトではグレイスケールディスプレイは白黒描画を受け付ける)\\\\",
"#`-clear`    & 新しい描画を表示する前に (瞬間的に) 画面を消去\\\\",
"#`-tvtwm`    & geometry オプションによる位置の指定を、仮想ルートウィンドウ中の\\\\",
"#                 & 現在の表示部分に対する相対的な位置にする\\\\",
"#`-raise`    & 各描画後に描画ウィンドウを最前面へ出す\\\\",
"#`-noraise`  & 各描画後に描画ウィンドウを最前面へ出すことはしない\\\\",
"#`-persist`  & gnuplot プログラム終了後も描画ウィンドウを残す\\\\",
"%c l .",
"%`-mono`@カラーディスプレイ上で強制的に白黒描画",
"%`-gray`@グレイスケールまたはカラーディスプレイ上でのグレイスケール描画",
"%           @(デフォルトではグレイスケールディスプレイは白黒描画を受け付ける)",
"%`-clear`@新しい描画を表示する前に (瞬間的に) 画面を消去",
"%`-tvtwm`@geometry オプションによる位置の指定を、仮想ルートウィンドウ中の",
"%                @現在の表示部分に対する相対的な位置にする",
"%`-raise`@各描画後に描画ウィンドウを最前面へ出す",
"%`-noraise`@各描画後に描画ウィンドウを最前面へ出すことはしない",
#ifdef USE_MOUSE
"%`-noevents`@マウス、キーの入力を処理しない",
#endif
"%`-persist`@gnuplot プログラム終了後も描画ウィンドウを残す",
"@end table",
"=X resources",
" 上記のオプションはコマンドライン上での指定書式で、\".Xdefaults\" にリ",
" ソースとして指定するときは異なる書式を使います。",
"",
" 例:",
"       gnuplot*gray:  on",
"       gnuplot*ctrlq: on",
"",
" `gnuplot` は描画スタイル `points` で描画する点のサイズの制御にも、コマンド",
" ラインオプション (`-pointsize <v>`) とリソース (`gnuplot*pointsize: <v>`)",
" を提供しています。値 `v` は点のサイズの拡大率として使われる実数値",
" (0 < v <= 10) で、例えば `-pointsize 2` はデフォルトのサイズの 2 倍、",
" `-pointsize 0.5` は普通のサイズの半分の点が使われます。",
"",
" `-ctrlq` スィッチは、描画ウィンドウを閉じるホットキーを `q` から",
" `<ctrl>q` に変更します。これは、`pause mouse keystroke` によるキースト",
" ロークの保存機能を使っている場合には、他のアルファベット文字と同様に",
" `q` を保存できるようになるので有用でしょう。同じ理由で、`-ctrlq` スィ",
" ッチは <space> ホットキーも <ctrl><space> に置き換えます。",
"",
"2 カラーリソース (color_resources)",
"?set terminal x11 color_resources",
"?set term x11 color_resources",
"?x11 color_resources",
"=X resources",
" 注意: このセクションは、gnuplot バージョン 5 とは大きくずれています。",
" x11 出力形式は以下のリソース (ここではそのデフォルトの値を示します)、",
" または白黒階調 (greyscale) のリソースを参照します。リソースの値はシス",
" テム上の X11 rgb.txt ファイルに書かれている色名、または 16 進の色指定",
" (X11 のマニュアルを参照) か、色名と強度 (0 から 1 の間の値) をコンマで",
" 区切った値を使用できます。例えば `blue, 0.5` は半分の強度の青、を意味",
" します。",
"@start table - まずは対話型テキスト形式",
"  gnuplot*background:  white",
"  gnuplot*textColor:   black",
"  gnuplot*borderColor: black",
"  gnuplot*axisColor:   black",
"  gnuplot*line1Color:  red",
"  gnuplot*line2Color:  green",
"  gnuplot*line3Color:  blue",
"  gnuplot*line4Color:  magenta",
"  gnuplot*line5Color:  cyan",
"  gnuplot*line6Color:  sienna",
"  gnuplot*line7Color:  orange",
"  gnuplot*line8Color:  coral",
"#\\begin{tabular}{|cl|} \\hline",
"#&gnuplot*background: white\\\\",
"#&gnuplot*textColor: black\\\\",
"#&gnuplot*borderColor: black\\\\",
"#&gnuplot*axisColor: black\\\\",
"#&gnuplot*line1Color: red\\\\",
"#&gnuplot*line2Color: green\\\\",
"#&gnuplot*line3Color: blue\\\\",
"#&gnuplot*line4Color: magenta\\\\",
"#&gnuplot*line5Color: cyan\\\\",
"#&gnuplot*line6Color: sienna\\\\",
"#&gnuplot*line7Color: orange\\\\",
"#&gnuplot*line8Color: coral\\\\",
"%c l .",
"%@gnuplot*background: white",
"%@gnuplot*textColor: black",
"%@gnuplot*borderColor: black",
"%@gnuplot*axisColor: black",
"%@gnuplot*line1Color: red",
"%@gnuplot*line2Color: green",
"%@gnuplot*line3Color: blue",
"%@gnuplot*line4Color: magenta",
"%@gnuplot*line5Color: cyan",
"%@gnuplot*line6Color: sienna",
"%@gnuplot*line7Color: orange",
"%@gnuplot*line8Color: coral",
"@end table",
"",
" これらに関するコマンドラインの書式は、背景 (bacground) に関しては単純で",
" 通常の X11 toolkit オプションの \"-bg\" に直接対応します。他のものも、",
" 全て一般的なリソースの上書きオプション \"-xrm\" を使うことで設定できま",
" す。",
"",
" 例:",
"",
" 背景色を変更するには",
"       gnuplot -background coral",
"",
" 線種 1 番目の色を書き換えるには",
"       gnuplot -xrm 'gnuplot*line1Color:blue'",
"",
"2 灰色階調リソース (grayscale_resources)",
"?commands set terminal x11 grayscale_resources",
"?set terminal x11 grayscale_resources",
"?set term x11 grayscale_resources",
"?x11 grayscale_resources",
"?grayscale_resources",
"=X resources",
" `-gray` を選択すると、`gnuplot` は、グレイスケールまたはカラーディスプ",
" レイに対して、以下のリソースを参照します (ここではそのデフォルトの値を",
" 示します)。デフォルトの背景色は黒であることに注意してください。",
"@start table - まずは対話型テキスト形式",
"  gnuplot*background: black",
"  gnuplot*textGray:   white",
"  gnuplot*borderGray: gray50",
"  gnuplot*axisGray:   gray50",
"  gnuplot*line1Gray:  gray100",
"  gnuplot*line2Gray:  gray60",
"  gnuplot*line3Gray:  gray80",
"  gnuplot*line4Gray:  gray40",
"  gnuplot*line5Gray:  gray90",
"  gnuplot*line6Gray:  gray50",
"  gnuplot*line7Gray:  gray70",
"  gnuplot*line8Gray:  gray30",
"#\\begin{tabular}{|cl|} \\hline",
"#&gnuplot*background: black\\\\",
"#&gnuplot*textGray: white\\\\",
"#&gnuplot*borderGray: gray50\\\\",
"#&gnuplot*axisGray: gray50\\\\",
"#&gnuplot*line1Gray: gray100\\\\",
"#&gnuplot*line2Gray: gray60\\\\",
"#&gnuplot*line3Gray: gray80\\\\",
"#&gnuplot*line4Gray: gray40\\\\",
"#&gnuplot*line5Gray: gray90\\\\",
"#&gnuplot*line6Gray: gray50\\\\",
"#&gnuplot*line7Gray: gray70\\\\",
"#&gnuplot*line8Gray: gray30\\\\",
"%c l .",
"%@gnuplot*background: black",
"%@gnuplot*textGray: white",
"%@gnuplot*borderGray: gray50",
"%@gnuplot*axisGray: gray50",
"%@gnuplot*line1Gray: gray100",
"%@gnuplot*line2Gray: gray60",
"%@gnuplot*line3Gray: gray80",
"%@gnuplot*line4Gray: gray40",
"%@gnuplot*line5Gray: gray90",
"%@gnuplot*line6Gray: gray50",
"%@gnuplot*line7Gray: gray70",
"%@gnuplot*line8Gray: gray30",
"@end table",
"",
"2 線描画リソース (line_resources)",
"?set terminal x11 line_resources",
"?set term x11 line_resources",
"?x11 line_resources",
"=X resources",
" 注意: このセクションは、gnuplot バージョン 5 とは大きくずれています。",
" `gnuplot` は描画の線の幅 (ピクセル単位) の設定のために以下のリソースを",
" 参照します (ここではそのデフォルトの値を示します)。0 または 1 は最小の",
" 線幅の 1 ピクセル幅を意味します。2 または 3 の値によってグラフの外観を",
" 改善できる場合もあるでしょう。",
"@start table - まずは対話型テキスト形式",
"  gnuplot*borderWidth: 1",
"  gnuplot*axisWidth:   0",
"  gnuplot*line1Width:  0",
"  gnuplot*line2Width:  0",
"  gnuplot*line3Width:  0",
"  gnuplot*line4Width:  0",
"  gnuplot*line5Width:  0",
"  gnuplot*line6Width:  0",
"  gnuplot*line7Width:  0",
"  gnuplot*line8Width:  0",
"#\\begin{tabular}{|cl|} \\hline",
"#&gnuplot*borderWidth: 1\\\\",
"#&gnuplot*axisWidth: 0\\\\",
"#&gnuplot*line1Width: 0\\\\",
"#&gnuplot*line2Width: 0\\\\",
"#&gnuplot*line3Width: 0\\\\",
"#&gnuplot*line4Width: 0\\\\",
"#&gnuplot*line5Width: 0\\\\",
"#&gnuplot*line6Width: 0\\\\",
"#&gnuplot*line7Width: 0\\\\",
"#&gnuplot*line8Width: 0\\\\",
"%c l .",
"%@gnuplot*borderWidth: 1",
"%@gnuplot*axisWidth: 0",
"%@gnuplot*line1Width: 0",
"%@gnuplot*line2Width: 0",
"%@gnuplot*line3Width: 0",
"%@gnuplot*line4Width: 0",
"%@gnuplot*line5Width: 0",
"%@gnuplot*line6Width: 0",
"%@gnuplot*line7Width: 0",
"%@gnuplot*line8Width: 0",
"@end table",
"",
" `gnuplot` は線描画で使用する点線の形式の設定用に以下のリソースを参照し",
" ます。0 は実線を意味します。2 桁の 10 進数 `jk` (`j` と `k` は 1 から",
" 9 までの値) は、`j` 個のピクセルの描画に `k` 個の空白のピクセルが続く",
" パターンの繰り返しからなる点線を意味します。例えば '16' は 1 個のピク",
" セルの後に 6 つの空白が続くパターンの点線になります。さらに、4 桁の 10",
" 進数でより詳細なピクセルと空白の列のパターンを指定できます。例えば、",
" '4441' は 4 つのピクセル、4 つの空白、4 つのピクセル、1 つの空白のパタ",
" ーンを意味します。以下のデフォルトのリソース値は、白黒ディスプレイ、あ",
" るいはカラーや白黒階調 (grayscale) ディスプレイ上の白黒描画における値",
" です。",
" カラーディスプレイでは dashed:off がデフォルトになっています。",
"@start table - まずは対話型テキスト形式",
"  gnuplot*dashed:       off",
"  gnuplot*borderDashes:   0",
"  gnuplot*axisDashes:    16",
"  gnuplot*line1Dashes:    0",
"  gnuplot*line2Dashes:   42",
"  gnuplot*line3Dashes:   13",
"  gnuplot*line4Dashes:   44",
"  gnuplot*line5Dashes:   15",
"  gnuplot*line6Dashes: 4441",
"  gnuplot*line7Dashes:   42",
"  gnuplot*line8Dashes:   13",
"#\\begin{tabular}{|cl|} \\hline",
"#&gnuplot*dashed: off\\\\",
"#&gnuplot*borderDashes: 0\\\\",
"#&gnuplot*axisDashes: 16\\\\",
"#&gnuplot*line1Dashes: 0\\\\",
"#&gnuplot*line2Dashes: 42\\\\",
"#&gnuplot*line3Dashes: 13\\\\",
"#&gnuplot*line4Dashes: 44\\\\",
"#&gnuplot*line5Dashes: 15\\\\",
"#&gnuplot*line6Dashes: 4441\\\\",
"#&gnuplot*line7Dashes: 42\\\\",
"#&gnuplot*line8Dashes: 13\\\\",
"%c l .",
"%@gnuplot*dashed: off",
"%@gnuplot*borderDashes: 0",
"%@gnuplot*axisDashes: 16",
"%@gnuplot*line1Dashes: 0",
"%@gnuplot*line2Dashes: 42",
"%@gnuplot*line3Dashes: 13",
"%@gnuplot*line4Dashes: 44",
"%@gnuplot*line5Dashes: 15",
"%@gnuplot*line6Dashes: 4441",
"%@gnuplot*line7Dashes: 42",
"%@gnuplot*line8Dashes: 13",
"@end table"
, "",
"2 X11 pm3d リソース (pm3d_resources)",
"?set terminal x11 pm3d_resources",
"?set term x11 pm3d_resources",
"?x11 pm3d_resources",
"?x11 pm3d",
"=X resources",
" 注意: このセクションは、gnuplot バージョン 5 とは大きくずれています。",
"",
" デフォルトでは `gnuplot` はそのスクリーンのデフォルトの visual を使用",
" します。割り当てることのできる色数は選択された visual クラスによって変",
" わります。12bit を超える深度を持つ visual クラス上では、gnuplot は最大",
" 色数である 0x200 (=512) 色で起動します。8bit を超える (12bit 以下で)",
" 深度の visual クラスでは最大色数は 0x100 (=256) 色、8bit 以下のディス",
" プレイでは最大色は 240 (16 色は曲線の色用に取られる) になります。",
"",
" gnuplot は最初に、上に述べたような最大色を割り当てようと起動します。こ",
" れに失敗するとその色数は、gnuplot がその全部を割り付けることができるま",
" で、1/2 ずつ減らされます。`maxcolors` を繰り返し 2 で割った結果、",
" `mincolors` よりも小さい数字になった場合、`gnuplot` は private カラー",
" マップを使おうとします。この場合、ウィンドウマネージャは、ポインタが",
" X11 ドライバのウィンドウに入るか出るかでカラーマップを退避 (swapping)",
" させる責任を持つことになります。",
"",
" `mincolors` のデフォルトの値は maxcolors / (num_colormaps > 1 ? 2 : 8)",
" で、num_colormaps は gnuplot が現在使用しているカラーマップの数で、こ",
" れは、x11 のウィンドウが 1 つだけ開いているような通常の場合は 1 です。",
"",
"2 X11 の他のリソース (other_resources)",
"?commands set terminal x11 other_resources",
"?set terminal x11 other_resources",
"?set term x11 other_resources",
"?x11 other_resources",
"=X resources",
" デフォルトでは、現在の描画ウィンドウの内容は、ウィンドウの X イベント",
" に従って X11 クリップボードに送られます。'gnuplot*exportselection' の",
" リソースの値を 'off' か 'false' と設定することによりこれを無効にできま",
" す。",
"",
" デフォルトでは、文字の回転は速くそれを行なう方法が使われますが、背景色",
" によってはその付近が汚れることがあります。これが起こる場合は、リソース",
" 'gnuplot.fastrotate' を 'off' にしてみてください。",
"",
"@start table - other x11 resources",
"  gnuplot*exportselection:  off",
"  gnuplot*fastrotate:  on",
"  gnuplot*ctrlq:  off",
"#\\begin{tabular}{|cl|} \\hline",
"#&gnuplot*exportselection:  off\\\\",
"#&gnuplot*fastrotate:  on\\\\",
"#&gnuplot*ctrlq:  off\\\\",
"%c l .",
"%@gnuplot*exportselection:  off",
"%@gnuplot*fastrotate:  on",
"%@gnuplot*ctrlq:  off",
"@end table"
#endif /* JAPANESE_DOC */

END_HELP(x11)
START_HELP(xlib)
#ifndef JAPANESE_DOC
"1 xlib",
"?commands set terminal xlib",
"?set terminal xlib",
"?set term xlib",
"?terminal xlib",
"?term xlib",
"?xlib",
" The `xlib` terminal driver supports the X11 Windows System.  It generates",
" gnuplot_x11 commands, but sends them to the output file specified by",
" `set output '<filename>'`. `set term x11` is equivalent to",
" `set output \"|gnuplot_x11 -noevents\"; set term xlib`.",
" `xlib` takes the same set of options as `x11`."
#else /* JAPANESE_DOC */
"1 xlib",
"?commands set terminal xlib",
"?set terminal xlib",
"?set term xlib",
"?terminal xlib",
"?term xlib",
"?xlib",
" `xlib` ドライバは X11 Windows System をサポートしています。このドライ",
" バは gnuplot_x11 への命令を生成しますが、`set output '<filename>'` を",
" 指定するとそれらをファイルに書き出します。`set term x11` は、",
" `set output \"|gnuplot_x11 -noevents\"; set term xlib` と同値です。",
" `xlib` には `x11` と同じオプションの組を与えることができます。"
#endif /* JAPANESE_DOC */
END_HELP(xlib)
