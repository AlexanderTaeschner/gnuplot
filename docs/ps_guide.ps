%!PS-Adobe-2.0
%%Creator: gnuplot
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Pages: (atend)
%%EndComments
/gnudict 120 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/vshift -40 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 Box stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
0 setgray
newpath
(Times-Roman) findfont 120 scalefont setfont
LTb
2525 7080 M
[ [(Times-Roman) 160.0 0.0 true true (Syntax for )]
[(Times-Bold) 160.0 0.0 true true (postscript enhanced)]
[(Times-Roman) 160.0 0.0 true true ( option)]
] -53.3 MCshow
2525 6804 M
[ [(Times-Bold) 120.0 0.0 true true (enhpost)]
[(Times-Roman) 120.0 0.0 true true ( is the product of David Denholm and Matt Heffron.)]
] -40.0 MCshow
2525 6597 M
[ [(Times-Roman) 120.0 0.0 true true (This guide is the product of Dick Crawford.)]
] -40.0 MCshow
3679 6321 M
[ [(Times-Roman) 120.0 0.0 true true (text)]
] -40.0 MCshow
4602 6321 M
[ [(Times-Roman) 120.0 0.0 true true (result)]
] -40.0 MCshow
2755 6045 M
[ [(Times-Roman) 120.0 0.0 true true (Superscripts are denoted by ^:)]
] -40.0 MRshow
3679 6045 M
[ [(Times-Roman) 120.0 0.0 true true ('10^{-2}')]
] -40.0 MCshow
4602 6045 M
[ [(Times-Roman) 120.0 0.0 true true (10)]
[(Times-Roman) 96.0 60.0 true true (-2)]
] -52.0 MCshow
2755 5838 M
[ [(Times-Roman) 120.0 0.0 true true (Subscripts are denoted by _:)]
] -40.0 MRshow
3679 5838 M
[ [(Times-Roman) 120.0 0.0 true true ('A_{j,k}')]
] -40.0 MCshow
4602 5838 M
[ [(Times-Roman) 120.0 0.0 true true (A)]
[(Times-Roman) 96.0 -36.0 true true (j,k)]
] -28.0 MCshow
2755 5631 M
[ [(Times-Roman) 120.0 0.0 true true (Braces are not needed for single characters:)]
] -40.0 MRshow
3679 5631 M
[ [(Times-Roman) 120.0 0.0 true true ('e^x')]
] -40.0 MCshow
4602 5631 M
[ [(Times-Roman) 120.0 0.0 true true (e)]
[(Times-Roman) 96.0 60.0 true true (x)]
] -52.0 MCshow
2755 5286 M
[ [(Times-Roman) 120.0 0.0 true true (Use @ to align sub- and superscripts:)]
] -40.0 MRshow
3679 5286 M
[ [(Times-Roman) 120.0 0.0 true true ('x@^2_k')]
] -40.0 MCshow
4602 5286 M
[ [(Times-Roman) 120.0 0.0 true true (x)]
[(Times-Roman) 96.0 60.0 false true (2)]
[(Times-Roman) 96.0 -36.0 true true (k)]
] -40.0 MCshow
2755 5079 M
[ [(Times-Roman) 120.0 0.0 true true (Put the shorter of the two first:)]
] -40.0 MRshow
3679 5079 M
[ [(Times-Roman) 120.0 0.0 true true ('x@_0^{-3/2}y')]
] -40.0 MCshow
4602 5079 M
[ [(Times-Roman) 120.0 0.0 true true (x)]
[(Times-Roman) 96.0 -36.0 false true (0)]
[(Times-Roman) 96.0 60.0 true true (-3/2)]
[(Times-Roman) 120.0 0.0 true true (y)]
] -40.0 MCshow
2755 4872 M
[ [(Times-Roman) 120.0 0.0 true true (...rather than:)]
] -40.0 MRshow
3679 4872 M
[ [(Times-Roman) 120.0 0.0 true true ('x@^{-3/2}_0y')]
] -40.0 MCshow
4602 4872 M
[ [(Times-Roman) 120.0 0.0 true true (x)]
[(Times-Roman) 96.0 60.0 false true (-3/2)]
[(Times-Roman) 96.0 -36.0 true true (0)]
[(Times-Roman) 120.0 0.0 true true (y)]
] -40.0 MCshow
2755 4527 M
[ [(Times-Roman) 120.0 0.0 true true (Font changes are enclosed in braces:)]
] -40.0 MRshow
3679 4527 M
[ [(Times-Roman) 120.0 0.0 true true ('{/Helvetica m}')]
] -40.0 MCshow
4602 4527 M
[ [(Helvetica) 120.0 0.0 true true (m)]
] -40.0 MCshow
2755 4320 M
[ [(Times-Roman) 120.0 0.0 true true (...size, too:)]
] -40.0 MRshow
3679 4320 M
[ [(Times-Roman) 120.0 0.0 true true ('{/=8 m}')]
] -40.0 MCshow
4602 4320 M
[ [(Times-Roman) 80.0 0.0 true true (m)]
] -40.0 MCshow
2755 4113 M
[ [(Times-Roman) 120.0 0.0 true true (...or both:)]
] -40.0 MRshow
3679 4113 M
[ [(Times-Roman) 120.0 0.0 true true ('{/Helvetica=18 m}')]
] -40.0 MCshow
4602 4113 M
[ [(Helvetica) 180.0 0.0 true true (m)]
] -60.0 MCshow
2755 3768 M
[ [(Times-Roman) 120.0 0.0 true true (Characters can be specified by code:)]
] -40.0 MRshow
3679 3768 M
[ [(Times-Roman) 120.0 0.0 true true ('{\\120}')]
] -40.0 MCshow
4602 3768 M
[ [(Times-Roman) 120.0 0.0 true true (\120)]
] -40.0 MCshow
2755 3562 M
[ [(Times-Roman) 120.0 0.0 true true (...which is how to get nonkeyboard characters:)]
] -40.0 MRshow
3679 3562 M
[ [(Times-Roman) 120.0 0.0 true true ('{\\267}')]
] -40.0 MCshow
4602 3562 M
[ [(Times-Roman) 120.0 0.0 true true (\267)]
] -40.0 MCshow
2755 3355 M
[ [(Times-Roman) 120.0 0.0 true true (Use keyboard characters or codes for other fonts:)]
] -40.0 MRshow
3679 3355 M
[ [(Times-Roman) 120.0 0.0 true true ('{/Symbol p\\271 22/7}')]
] -40.0 MCshow
4602 3355 M
[ [(Symbol) 120.0 0.0 true true (p\271 22/7)]
] -40.0 MCshow
2755 3010 M
[ [(Times-Roman) 120.0 0.0 true true (Everything ouside braces is in the default font:)]
] -40.0 MRshow
3679 3010 M
[ [(Times-Roman) 120.0 0.0 true true ('P = {/Symbol r}kT')]
] -40.0 MCshow
4602 3010 M
[ [(Times-Roman) 120.0 0.0 true true (P = )]
[(Symbol) 120.0 0.0 true true (r)]
[(Times-Roman) 120.0 0.0 true true (kT)]
] -40.0 MCshow
2755 2665 M
[ [(Times-Roman) 120.0 0.0 true true (Space of a given size can be inserted with &:)]
] -40.0 MRshow
3679 2665 M
[ [(Times-Roman) 120.0 0.0 true true ('<junk>')]
] -40.0 MCshow
4602 2665 M
[ [(Times-Roman) 120.0 0.0 true true (<junk>)]
] -40.0 MCshow
3679 2458 M
[ [(Times-Roman) 120.0 0.0 true true ('<&{junk}>')]
] -40.0 MCshow
4602 2458 M
[ [(Times-Roman) 120.0 0.0 true true (<)]
[(Times-Roman) 120.0 0.0 true false (junk)]
[(Times-Roman) 120.0 0.0 true true (>)]
] -40.0 MCshow
2755 2113 M
[ [(Times-Roman) 120.0 0.0 true true (Special characters \(^,_,{,},@,&,\\\) can be escaped by \\:)]
] -40.0 MRshow
3679 2113 M
[ [(Times-Roman) 120.0 0.0 true true ('f\\{x,y\\}')]
] -40.0 MCshow
4602 2113 M
[ [(Times-Roman) 120.0 0.0 true true (f{x,y})]
] -40.0 MCshow
2755 1906 M
[ [(Times-Roman) 120.0 0.0 true true (...or \\\\ if within a double-quoted string:)]
] -40.0 MRshow
3679 1906 M
[ [(Times-Roman) 120.0 0.0 true true ("f\\\\{x,y\\\\}")]
] -40.0 MCshow
4602 1906 M
[ [(Times-Roman) 120.0 0.0 true true (f{x,y})]
] -40.0 MCshow
216 1630 M
[ [(Times-Roman) 120.0 0.0 true true (Everything can be done recursively:)]
] -40.0 MLshow
216 1423 M
[ [(Times-Roman) 120.0 0.0 true true (the text)]
] -40.0 MLshow
2755 1423 M
[ [(Times-Roman) 120.0 0.0 true true ('{/Symbol=18 \\362@_{/=9.6 0}^{/=12 \\245}})]
] -40.0 MCshow
2755 1216 M
[ [(Times-Roman) 120.0 0.0 true true ({/Helvetica e^{-{/Symbol m}^2/2} d}{/Symbol m = \(p/2\)^{1/2}}')]
] -40.0 MCshow
216 1009 M
[ [(Times-Roman) 120.0 0.0 true true (produces the result:)]
] -40.0 MLshow
2755 1009 M
[ [(Symbol) 180.0 0.0 true true (\362)]
[(Symbol) 96.0 -54.0 false true (0)]
[(Symbol) 120.0 90.0 true true (\245)]
[(Helvetica) 120.0 0.0 true true (e)]
[(Helvetica) 96.0 60.0 true true (-)]
[(Symbol) 96.0 60.0 true true (m)]
[(Helvetica) 76.8 108.0 true true (2)]
[(Helvetica) 96.0 60.0 true true (/2)]
[(Helvetica) 120.0 0.0 true true ( d)]
[(Symbol) 120.0 0.0 true true (m = \(p/2\))]
[(Symbol) 96.0 60.0 true true (1/2)]
] -60.0 MCshow
216 802 M
[ [(Times-Roman) 120.0 0.0 true true (Note how font sizes and definitions are preserved across pairs of braces.)]
] -40.0 MLshow
216 388 M
[ [(Times-Roman) 120.0 0.0 true true (The default font for this page is /Times-Roman=12.  These and other options may be changed)]
] -40.0 MLshow
216 250 M
[ [(Times-Roman) 120.0 0.0 true true (on the command )]
[(Times-Bold) 120.0 0.0 true true (set terminal postscript)]
[(Times-Roman) 120.0 0.0 true true (.  See the manual or )]
[(Times-Bold) 120.0 0.0 true true (help postscript)]
[(Times-Roman) 120.0 0.0 true true ( for details.)]
] -40.0 MLshow
LT0
stroke
showpage grestore end

%%Creator: Richard Crawford

/reEncode { findfont dup length dict begin
            { 1 index /FID ne { def }{ pop pop } ifelse } forall
            currentdict /CharStrings known {
            CharStrings EncodingCheck known {
            /Encoding EncodingVector def } if} if
            currentdict end definefont pop } def

/CP437 { /EncodingCheck /ydieresis def /EncodingVector [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde/.notdef
/Ccedilla/udieresis/eacute/acircumflex/adieresis/agrave/aring/ccedilla
/ecircumflex/edieresis/egrave/idieresis/icircumflex/igrave/Adieresis/Aring
/Eacute/ae/AE/ocircumflex/odieresis/ograve/ucircumflex/ugrave
/ydieresis/Odieresis/Udieresis/cent/sterling/yen/.notdef/florin
/aacute/iacute/oacute/uacute/ntilde/Ntilde/ordfeminine/ordmasculine
/questiondown/.notdef/logicalnot/onehalf/onequarter/exclamdown/guillemotleft/guillemotright
/space/space/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/germandbls/.notdef/.notdef/.notdef/.notdef/mu/.notdef
/.notdef/.notdef/.notdef/.notdef/infinity/.notdef/.notdef/.notdef
/.notdef/plusminus/greaterequal/lessequal/.notdef/.notdef/divide/.notdef
/degree/bullet/periodcentered/.notdef/nsuperior/twosuperior/.notdef
] def } def

/CP850 { /EncodingCheck /ydieresis def /EncodingVector [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde/.notdef
/Ccedilla/udieresis/eacute/acircumflex/adieresis/agrave/aring/ccedilla
/ecircumflex/edieresis/egrave/idieresis/icircumflex/igrave/Adieresis/Aring
/Eacute/ae/AE/ocircumflex/odieresis/ograve/ucircumflex/ugrave
/ydieresis/Odieresis/Udieresis/oslash/sterling/Oslash/multiply/florin
/aacute/iacute/oacute/uacute/ntilde/Ntilde/ordfeminine/ordmasculine
/questiondown/registered/logicalnot/onehalf/onequarter/exclamdown/guillemotleft/guillemotright
/space/space/.notdef/.notdef/.notdef/Aacute/Acircumflex/Agrave
/.notdef/.notdef/.notdef/.notdef/.notdef/cent/yen/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/atilde/Atilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/currency
/eth/Eth/Ecircumflex/Edieresis/Egrave/dotlessi/Iacute/Icircumflex
/Idieresis/.notdef/.notdef/.notdef/.notdef/brokenbar/Igrave/.notdef
/Oacute/germandbls/Ocircumflex/Ograve/otilde/Otilde/mu/thorn
/Thorn/Uacute/Ucircumflex/Ugrave/yacute/Yacute/macron/acute
/hyphen/plusminus/equal/threequarters/paragraph/section/divide/.notdef
/degree/.notdef/periodcentered/onesuperior/threesuperior/twosuperior/.notdef
] def } def

/Expert { /EncodingCheck /Hungarumlautsmall def /EncodingVector [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclamsmall/Hungarumlautsmall/.notdef/dollaroldstyle/dollarsuperior/ampersandsmall/Acutesmall
/parenleftsuperior/parenrightsuperior/twodotenleader/onedotenleader/comma/hyphen/period/fraction
/zerooldstyle/oneoldstyle/twooldstyle/threeoldstyle/fouroldstyle/fiveoldstyle/sixoldstyle/sevenoldstyle
/eightoldstyle/nineoldstyle/colon/semicolon/commasuperior/threequartersemdash/periodsuperior/questionsmall
/.notdef/asuperior/bsuperior/centsuperior/dsuperior/esuperior/.notdef/.notdef
/.notdef/isuperior/.notdef/.notdef/lsuperior/msuperior/nsuperior/osuperior
/.notdef/.notdef/rsuperior/ssuperior/tsuperior/.notdef/ff/fi
/fl/ffi/ffl/parenleftinferior/.notdef/parenrightinferior/Circumflexsmall/hyphensuperior
/Gravesmall/Asmall/Bsmall/Csmall/Dsmall/Esmall/Fsmall/Gsmall
/Hsmall/Ismall/Jsmall/Ksmall/Lsmall/Msmall/Nsmall/Osmall
/Psmall/Qsmall/Rsmall/Ssmall/Tsmall/Usmall/Vsmall/Wsmall
/Xsmall/Ysmall/Zsmall/colonmonetary/onefitted/rupiah/Tildesmall/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/exclamdownsmall/centoldstyle/Lslashsmall/.notdef/.notdef/Scaronsmall/Zcaronsmall
/Dieresissmall/Brevesmall/Caronsmall/.notdef/Dotaccentsmall/.notdef/.notdef/Macronsmall
/.notdef/.notdef/figuredash/hypheninferior/.notdef/.notdef/Ogoneksmall/Ringsmall
/Cedillasmall/.notdef/.notdef/.notdef/onequarter/onehalf/threequarters/questiondownsmall
/oneeighth/threeeighths/fiveeighths/seveneighths/onethird/twothirds/.notdef/.notdef
/zerosuperior/onesuperior/twosuperior/threesuperior/foursuperior/fivesuperior/sixsuperior/sevensuperior
/eightsuperior/ninesuperior/zeroinferior/oneinferior/twoinferior/threeinferior/fourinferior/fiveinferior
/sixinferior/seveninferior/eightinferior/nineinferior/centinferior/dollarinferior/periodinferior/commainferior
/Agravesmall/Aacutesmall/Acircumflexsmall/Atildesmall/Adieresissmall/Aringsmall/AEsmall/Ccedillasmall
/Egravesmall/Eacutesmall/Ecircumflexsmall/Edieresissmall/Igravesmall/Iacutesmall/Icircumflexsmall/Idieresissmall
/Ethsmall/Ntildesmall/Ogravesmall/Oacutesmall/Ocircumflexsmall/Otildesmall/Odieresissmall/OEsmall
/Oslashsmall/Ugravesmall/Uacutesmall/Ucircumflexsmall/Udieresissmall/Yacutesmall/Thornsmall/Ydieresissmall
] def } def

/ISOLatin1 { /EncodingCheck /ydieresis def /EncodingVector ISOLatin1Encoding def } def

/Numbs [ (040) (041) (042) (043) (044) (045) (046) (047)
         (050) (051) (052) (053) (054) (055) (056) (057)
         (060) (061) (062) (063) (064) (065) (066) (067)
         (070) (071) (072) (073) (074) (075) (076) (077)
         (100) (101) (102) (103) (104) (105) (106) (107)
         (110) (111) (112) (113) (114) (115) (116) (117)
         (120) (121) (122) (123) (124) (125) (126) (127)
         (130) (131) (132) (133) (134) (135) (136) (137)
         (140) (141) (142) (143) (144) (145) (146) (147)
         (150) (151) (152) (153) (154) (155) (156) (157)
         (160) (161) (162) (163) (164) (165) (166) (167)
         (170) (171) (172) (173) (174) (175) (176)
         (220) (221) (222) (223) (224) (225) (226) (227)
         (230)       (232) (233)       (235) (236) (237)
         (240) (241) (242) (243) (244) (245) (246) (247)
         (250) (251) (252) (253) (254) (255) (256) (257)
         (260) (261) (262) (263) (264) (265) (266) (267)
         (270) (271) (272) (273) (274) (275) (276) (277)
         (300) (301) (302) (303) (304) (305) (306) (307)
         (310) (311) (312) (313) (314) (315) (316) (317)
         (320) (321) (322) (323) (324) (325) (326) (327)
         (330) (331) (332) (333) (334) (335) (336) (337)
         (340) (341) (342) (343) (344) (345) (346) (347)
         (350) (351) (352) (353) (354) (355) (356) (357)
         (360) (361) (362) (363) (364) (365) (366) (367)
         (370) (371) (372) (373) (374) (375) (376) (377) ] def
/Codes [ (\040) (\041) (\042) (\043) (\044) (\045) (\046) (\047)
         (\050) (\051) (\052) (\053) (\054) (\055) (\056) (\057)
         (\060) (\061) (\062) (\063) (\064) (\065) (\066) (\067)
         (\070) (\071) (\072) (\073) (\074) (\075) (\076) (\077)
         (\100) (\101) (\102) (\103) (\104) (\105) (\106) (\107)
         (\110) (\111) (\112) (\113) (\114) (\115) (\116) (\117)
         (\120) (\121) (\122) (\123) (\124) (\125) (\126) (\127)
         (\130) (\131) (\132) (\133) (\134) (\135) (\136) (\137)
         (\140) (\141) (\142) (\143) (\144) (\145) (\146) (\147)
         (\150) (\151) (\152) (\153) (\154) (\155) (\156) (\157)
         (\160) (\161) (\162) (\163) (\164) (\165) (\166) (\167)
         (\170) (\171) (\172) (\173) (\174) (\175) (\176)
         (\220) (\221) (\222) (\223) (\224) (\225) (\226) (\227)
         (\230)        (\232) (\233)        (\235) (\236) (\237)
         (\240) (\241) (\242) (\243) (\244) (\245) (\246) (\247)
         (\250) (\251) (\252) (\253) (\254) (\255) (\256) (\257)
         (\260) (\261) (\262) (\263) (\264) (\265) (\266) (\267)
         (\270) (\271) (\272) (\273) (\274) (\275) (\276) (\277)
         (\300) (\301) (\302) (\303) (\304) (\305) (\306) (\307)
         (\310) (\311) (\312) (\313) (\314) (\315) (\316) (\317)
         (\320) (\321) (\322) (\323) (\324) (\325) (\326) (\327)
         (\330) (\331) (\332) (\333) (\334) (\335) (\336) (\337)
         (\340) (\341) (\342) (\343) (\344) (\345) (\346) (\347)
         (\350) (\351) (\352) (\353) (\354) (\355) (\356) (\357)
         (\360) (\361) (\362) (\363) (\364) (\365) (\366) (\367)
         (\370) (\371) (\372) (\373) (\374) (\375) (\376) (\377) ] def
/Doit { 0 1 204 { /Ind exch def                   % stores the index
		  /Col Ind 41 idiv def            % column number
		  /Row Ind Col 41 mul sub def     % row number
		  Col 1.60 mul dX add Row -.225 mul moveto
		  Sym Ind get show
      } for } def
gsave
72 72 scale 1.0 10.25 translate 0 0 moveto
/Times-Roman findfont .225 scalefont setfont
/Title (PostScript Character Codes) def
Title stringwidth pop -2 div
3.2 add 0 rmoveto Title show
/Times-Roman findfont .20 scalefont setfont
0 -.25 translate 0 0 moveto
/Header (T = text (here Times-Roman)  S = Symbol  Z = ZapfDingbats\
  I = T with ISO Latin-1 encoding) def
Header stringwidth pop -2 div
3.2 add 0 rmoveto Header show
-.6 -.25 translate
0 1 4 { 1.60 mul /X0 exch def X0 .375 add 0 moveto (T) show
        X0 .625 add 0 moveto (S) show X0 .875 add 0 moveto
        (Z) show  X0 1.125 add 0 moveto (I) show } for
0 -.25 translate
% first subcolumn: ACSII code
/Times-Roman findfont .175 scalefont setfont
/dX 0 def          % subcolumn offset
/Sym Numbs def     % item to be printed
Doit
% second subcolumn: Times-Roman
/Times-Roman findfont .175 scalefont setfont
/dX .375 def       % subcolumn offset
/Sym Codes def     % item to be printed
Doit
% third subcolumn: Symbol
/Symbol findfont .175 scalefont setfont
/dX .625 def       % subcolumn offset
/Sym Codes def     % item to be printed
Doit
% fourth subcolumn: ZapfDingbats
/ZapfDingbats findfont .175 scalefont setfont
/dX .875 def       % subcolumn offset
/Sym Codes def     % item to be printed
Doit
% fifth subcolumn: Times-Roman with ISO Latin-1 encoding
/TRISOL1 ISOLatin1 /Times-Roman reEncode
/TRISOL1 findfont .175 scalefont setfont
/dX 1.125 def       % subcolumn offset
/Sym Codes def     % item to be printed
Doit
showpage
grestore

% My machines don't have all the characters needed for the Expert
% and CP encodings -- if you do have one or more of these, just
% uncomment the pertinant lines (remove only the first % if there
% is more than one) to produce the display.

gsave
72 72 scale 1.0 10.25 translate 0 0 moveto
/Times-Roman findfont .225 scalefont setfont
/Title (PostScript Character Codes) def
Title stringwidth pop -2 div
3.2 add 0 rmoveto Title show
/Times-Roman findfont .20 scalefont setfont
0 -.25 translate 0 0 moveto
/Header (T = text E = Expert encoding  4 = CP 437 encoding\
  8 = CP 850 encoding) def
Header stringwidth pop -2 div
3.2 add 0 rmoveto Header show
-.6 -.25 translate
0 1 4 { 1.60 mul /X0 exch def X0 .375 add 0 moveto (T) show
        X0 .625 add 0 moveto (E) show X0 .875 add 0 moveto
        (4) show  X0 1.125 add 0 moveto (8) show } for
0 -.25 translate
% first subcolumn: ACSII code
/Times-Roman findfont .175 scalefont setfont
/dX 0 def          % subcolumn offset
/Sym Numbs def     % item to be printed
Doit
% second subcolumn: Times-Roman
/Times-Roman findfont .175 scalefont setfont
/dX .375 def       % subcolumn offset
/Sym Codes def     % item to be printed
%Doit
%% third subcolumn: Times-Roman with Expert encoding
%/TRExpert Expert /Times-Roman reEncode
%/TRExpert findfont .175 scalefont setfont
%/dX .625 def       % subcolumn offset
%/Sym Codes def     % item to be printed
%Doit
%% fourth subcolumn: Times-Roman with CP 437 encoding
%/TRCP437 CP437 /Times-Roman reEncode
%/TRCP437 findfont .175 scalefont setfont
%/dX .875 def       % subcolumn offset
%/Sym Codes def     % item to be printed
%Doit
%% fifth subcolumn: Times-Roman with CP 850 encoding
%/TRCP850 CP850 /Times-Roman reEncode
%/TRCP850 findfont .175 scalefont setfont
%/dX 1.125 def       % subcolumn offset
%/Sym Codes def     % item to be printed
%Doit
showpage
grestore
